{"topicSections":[{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/Space\/documentation\/Space\/OptionalArgument\/init(topDecode:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/space\/optionalargument\/topdecode-implementations"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"article","metadata":{"roleHeading":"API Collection","role":"collectionGroup","modules":[{"name":"Space"}],"title":"TopDecode Implementations"},"identifier":{"url":"doc:\/\/Space\/documentation\/Space\/OptionalArgument\/TopDecode-Implementations","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Space\/documentation\/Space","doc:\/\/Space\/documentation\/Space\/OptionalArgument"]]},"references":{"doc://Space/documentation/Space/OptionalArgument":{"title":"OptionalArgument","kind":"symbol","url":"\/documentation\/space\/optionalargument","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"OptionalArgument"}],"identifier":"doc:\/\/Space\/documentation\/Space\/OptionalArgument","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"OptionalArgument","kind":"identifier"}]},"doc://Space/documentation/Space":{"abstract":[{"type":"text","text":"Space is a powerful framework that brings blockchain development to Swift."}],"role":"collection","kind":"symbol","title":"Space","identifier":"doc:\/\/Space\/documentation\/Space","url":"\/documentation\/space","type":"topic"},"doc://Space/documentation/Space/OptionalArgument/init(topDecode:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"topDecode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Space6BufferV","text":"Buffer","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/Space\/documentation\/Space\/OptionalArgument\/init(topDecode:)","abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/space\/optionalargument\/init(topdecode:)","title":"init(topDecode:)","conformance":{"constraints":[{"code":"Wrapped","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"NestedDecode"},{"type":"text","text":", "},{"type":"codeVoice","code":"NestedEncode"},{"text":", ","type":"text"},{"type":"codeVoice","code":"TopDecode"},{"text":", ","type":"text"},{"code":"TopDecodeMulti","type":"codeVoice"},{"type":"text","text":", "},{"code":"TopEncode","type":"codeVoice"},{"type":"text","text":", and "},{"code":"TopEncodeMulti","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}}}}