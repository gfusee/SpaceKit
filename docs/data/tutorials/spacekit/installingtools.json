{"identifier":{"url":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools","interfaceLanguage":"swift"},"sections":[{"title":"Install the Necessary Tools","estimatedTimeInMinutes":10,"content":[{"type":"paragraph","inlineContent":[{"text":"Before writing your first smart contract with SpaceKit, ensure you have the necessary tools installed.","type":"text"}]}],"chapter":"Installing the Tools","kind":"hero"},{"tasks":[{"contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SpaceKit relies on several dependencies, which you need to install on your system."}]}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"anchor":"Installing-SpaceKits-Dependencies","stepsSection":[{"content":[{"inlineContent":[{"text":"Open a terminal to begin.","type":"text"}],"type":"paragraph"}],"code":null,"runtimePreview":null,"caption":[],"type":"step","media":"InstallingToolsSection1Step1.png"},{"runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If necessary, install or update Swift by following the instructions on "},{"isActive":true,"type":"reference","identifier":"https:\/\/www.swift.org\/install\/macos\/"},{"type":"text","text":"."}]}],"type":"step","media":"InstallingToolsSection1Step2.png","content":[{"inlineContent":[{"text":"Check the Swift version by running ","type":"text"},{"code":"swift --version","type":"codeVoice"},{"type":"text","text":". SpaceKit requires Swift 6 or later."}],"type":"paragraph"}],"code":null},{"media":"InstallingToolsSection1Step3.png","caption":[{"inlineContent":[{"type":"text","text":"If "},{"code":"git","type":"codeVoice"},{"text":" is not installed, use your preferred method to install it.","type":"text"}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"text":"Ensure ","type":"text"},{"type":"codeVoice","code":"git"},{"type":"text","text":" is installed. The SpaceKit CLI requires it to retrieve important files."}]}],"runtimePreview":null,"type":"step","code":null},{"media":"InstallingToolsSection1Step4.png","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If Docker is not installed, you can download and install it by following the steps on "},{"type":"reference","identifier":"https:\/\/docs.docker.com\/get-started\/get-docker\/","isActive":true},{"type":"text","text":"."}]}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure that Docker is installed and running. Docker is required by the SpaceKit CLI to compile smart contracts."}]}],"code":null,"runtimePreview":null,"type":"step"}],"title":"Installing SpaceKit's Dependencies"},{"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"The SpaceKit CLI is your primary tool for using the SpaceKit framework. You’ll use it to initialize and compile your smart contracts."}],"type":"paragraph"}]}],"title":"Setting Up the SpaceKit CLI","anchor":"Setting-Up-the-SpaceKit-CLI","stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open a terminal."}]}],"caption":[],"media":"InstallingToolsSection1Step1.png","code":null,"type":"step","runtimePreview":null},{"code":null,"type":"step","media":"InstallingToolsSection2Step2.png","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After the installation, please restart your terminal to reload your PATH environment variable."}]}],"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the installation command: "},{"type":"codeVoice","code":"curl -sSL https:\/\/raw.githubusercontent.com\/gfusee\/SpaceKitCLI\/refs\/heads\/main\/install.sh | bash"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Verify the SpaceKit CLI installation by running ","type":"text"},{"code":"space --help","type":"codeVoice"},{"type":"text","text":"."}]}],"caption":[],"media":"InstallingToolsSection2Step3.png","runtimePreview":null,"code":null,"type":"step"}]},{"stepsSection":[{"caption":[],"code":null,"content":[{"inlineContent":[{"type":"text","text":"Open a terminal."}],"type":"paragraph"}],"runtimePreview":null,"type":"step","media":"InstallingToolsSection1Step1.png"},{"code":null,"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Navigate to the desired directory and run "},{"type":"codeVoice","code":"space init MyFirstSpaceProject"},{"type":"text","text":"."}],"type":"paragraph"}],"caption":[{"type":"paragraph","inlineContent":[{"text":"This command creates a new project directory named ","type":"text"},{"code":"MyFirstSpaceProject","type":"codeVoice"},{"text":".","type":"text"}]}],"type":"step","media":"InstallingToolsSection3Step2.png"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the newly created "},{"type":"codeVoice","code":"MyFirstSpaceProject"},{"type":"text","text":" directory."}]}],"media":"InstallingToolsSection3Step3.png","caption":[],"type":"step","runtimePreview":null,"code":null},{"code":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"Look for the “WASM output:” line, which indicates a successful compilation. The ","type":"text"},{"type":"codeVoice","code":".wasm"},{"type":"text","text":" file is your compiled contract."}]}],"media":"InstallingToolsSection3Step4.png","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Build the smart contract by running ","type":"text"},{"type":"codeVoice","code":"space contract build"},{"type":"text","text":"."}]}],"type":"step"}],"anchor":"Initializing-and-Compiling-Your-First-Smart-Contract","contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, use the SpaceKit CLI to create and compile your first smart contract project."}]}],"kind":"contentAndMedia"}],"title":"Initializing and Compiling Your First Smart Contract"}],"kind":"tasks"},{"abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"kind":"callToAction","title":"Building Your First Smart Contract","action":{"overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"type":"reference","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract","isActive":true},"featuredEyebrow":"Tutorial"}],"hierarchy":{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit","modules":[{"projects":[{"sections":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools#Installing-SpaceKits-Dependencies","kind":"task"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools#Setting-Up-the-SpaceKit-CLI","kind":"task"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract","kind":"task"}],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools"}],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Getting-Started\/Installing-the-Tools"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Getting-Started\/Building-Your-First-Smart-Contract","projects":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract","sections":[{"kind":"task","reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract#Initializing-the-Project"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract#Writing-the-Contract-Code","kind":"task"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract#Testing-the-Contract","kind":"task"}]}]},{"projects":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes","sections":[{"kind":"task","reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","kind":"task"},{"kind":"task","reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Working-with-the-BigUint-Type"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Working-with-the-Vector-Type","kind":"task"},{"kind":"task","reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Creating-Your-Own-Types"}]}],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Deep-Dive-into-SpaceKit-Concepts\/Exploring-SpaceKit's-Types"},{"projects":[{"sections":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues#Working-with-Storage-for-Single-Value-Persistence","kind":"task"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","kind":"task"}],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues"}],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Deep-Dive-into-SpaceKit-Concepts\/Persisting-Data-Across-Executions"},{"projects":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo","sections":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo#Accessing-Transaction-Context-Data","kind":"task"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo#Accessing-Blockchain-Context-Data","kind":"task"}]}],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Deep-Dive-into-SpaceKit-Concepts\/Retrieving-Information-from-the-Blockchain"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Deep-Dive-into-SpaceKit-Concepts\/Interacting-with-Other-Contracts","projects":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls","sections":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls#Declare-the-Callee-Proxy","kind":"task"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls#Perform-a-Synchronous-Call","kind":"task"}]}]},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Deep-Dive-into-SpaceKit-Concepts\/Calling-Contracts-Across-Shards","projects":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls","sections":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls#Declare-the-Callee-Proxy","kind":"task"},{"kind":"task","reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls#Perform-an-Asynchronous-Call"}]}]}],"paths":[["doc:\/\/SpaceKit\/tutorials\/SpaceKit","doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Getting-Started","doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Getting-Started\/Installing-the-Tools"]]},"kind":"project","variants":[{"paths":["\/tutorials\/spacekit\/installingtools"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"categoryPathComponent":"SpaceKit","role":"project","category":"SpaceKit","title":"Install the Necessary Tools"},"references":{"doc://SpaceKit/tutorials/SpaceKit/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract","role":"pseudoSymbol","kind":"section","type":"section","title":"Initializing and Compiling Your First Smart Contract","url":"\/tutorials\/spacekit\/installingtools#Initializing-and-Compiling-Your-First-Smart-Contract","abstract":[{"text":"Before writing your first smart contract with SpaceKit, ensure you have the necessary tools installed.","type":"text"}]},"doc://SpaceKit/tutorials/SpaceKit/SyncCalls#Perform-a-Synchronous-Call":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls#Perform-a-Synchronous-Call","abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"type":"section","role":"pseudoSymbol","title":"Perform a Synchronous Call","kind":"section","url":"\/tutorials\/spacekit\/synccalls#Perform-a-Synchronous-Call"},"doc://SpaceKit/tutorials/SpaceKit/StoreValues#Working-with-Storage-for-Single-Value-Persistence":{"title":"Working with @Storage for Single Value Persistence","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/spacekit\/storevalues#Working-with-Storage-for-Single-Value-Persistence","type":"section","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues#Working-with-Storage-for-Single-Value-Persistence","abstract":[{"type":"text","text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory."}]},"doc://SpaceKit/tutorials/SpaceKit/Deep-Dive-into-SpaceKit-Concepts/Retrieving-Information-from-the-Blockchain":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Deep-Dive-into-SpaceKit-Concepts\/Retrieving-Information-from-the-Blockchain","abstract":[],"kind":"article","type":"topic","url":"\/tutorials\/spacekit\/deep-dive-into-spacekit-concepts\/retrieving-information-from-the-blockchain","title":"Retrieving Information from the Blockchain","role":"article"},"doc://SpaceKit/tutorials/SpaceKit/Deep-Dive-into-SpaceKit-Concepts/Exploring-SpaceKit's-Types":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Deep-Dive-into-SpaceKit-Concepts\/Exploring-SpaceKit's-Types","abstract":[],"type":"topic","role":"article","title":"Exploring SpaceKit's Types","kind":"article","url":"\/tutorials\/spacekit\/deep-dive-into-spacekit-concepts\/exploring-spacekit's-types"},"doc://SpaceKit/tutorials/SpaceKit/CodingYourFirstContract#Initializing-the-Project":{"role":"pseudoSymbol","title":"Initializing the Project","type":"section","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract#Initializing-the-Project","kind":"section","url":"\/tutorials\/spacekit\/codingyourfirstcontract#Initializing-the-Project","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}]},"InstallingToolsSection1Step4.png":{"alt":"Terminal output showing Docker is running.","type":"image","variants":[{"url":"\/images\/SpaceKit\/InstallingToolsSection1Step4.png","traits":["1x","light"]}],"identifier":"InstallingToolsSection1Step4.png"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges":{"title":"Handling Heap Allocation Challenges","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/spacekit\/familiarizewithtypes#Handling-Heap-Allocation-Challenges","type":"section","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges","abstract":[{"text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}]},"doc://SpaceKit/tutorials/SpaceKit/Getting-Started/Building-Your-First-Smart-Contract":{"role":"article","title":"Building Your First Smart Contract","type":"topic","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Getting-Started\/Building-Your-First-Smart-Contract","kind":"article","url":"\/tutorials\/spacekit\/getting-started\/building-your-first-smart-contract","abstract":[]},"doc://SpaceKit/tutorials/SpaceKit/GetInfo#Accessing-Transaction-Context-Data":{"title":"Accessing Transaction Context Data","abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"url":"\/tutorials\/spacekit\/getinfo#Accessing-Transaction-Context-Data","type":"section","role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo#Accessing-Transaction-Context-Data"},"doc://SpaceKit/tutorials/SpaceKit":{"url":"\/tutorials\/spacekit","kind":"overview","title":"Meet SpaceKit","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit","type":"topic","role":"overview","abstract":[{"text":"Discover how SpaceKit simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency.","type":"text"}]},"doc://SpaceKit/tutorials/SpaceKit/AsyncCalls":{"title":"Interacting with Contracts Across Shards","role":"project","kind":"project","url":"\/tutorials\/spacekit\/asynccalls","type":"topic","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls","abstract":[{"type":"text","text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources."}],"estimatedTime":"15min"},"doc://SpaceKit/tutorials/SpaceKit/CodingYourFirstContract":{"abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"kind":"project","url":"\/tutorials\/spacekit\/codingyourfirstcontract","title":"Building Your First Smart Contract","role":"project","estimatedTime":"20min","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract","type":"topic"},"doc://SpaceKit/tutorials/SpaceKit/GetInfo#Accessing-Blockchain-Context-Data":{"kind":"section","abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"title":"Accessing Blockchain Context Data","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo#Accessing-Blockchain-Context-Data","url":"\/tutorials\/spacekit\/getinfo#Accessing-Blockchain-Context-Data","type":"section","role":"pseudoSymbol"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes#Creating-Your-Own-Types":{"title":"Creating Your Own Types","abstract":[{"text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"url":"\/tutorials\/spacekit\/familiarizewithtypes#Creating-Your-Own-Types","type":"section","role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Creating-Your-Own-Types"},"doc://SpaceKit/tutorials/SpaceKit/InstallingTools":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools","abstract":[{"text":"Before writing your first smart contract with SpaceKit, ensure you have the necessary tools installed.","type":"text"}],"type":"topic","role":"project","estimatedTime":"10min","title":"Install the Necessary Tools","kind":"project","url":"\/tutorials\/spacekit\/installingtools"},"doc://SpaceKit/tutorials/SpaceKit/InstallingTools#Setting-Up-the-SpaceKit-CLI":{"title":"Setting Up the SpaceKit CLI","role":"pseudoSymbol","url":"\/tutorials\/spacekit\/installingtools#Setting-Up-the-SpaceKit-CLI","kind":"section","type":"section","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools#Setting-Up-the-SpaceKit-CLI","abstract":[{"type":"text","text":"Before writing your first smart contract with SpaceKit, ensure you have the necessary tools installed."}]},"doc://SpaceKit/tutorials/SpaceKit/Getting-Started/Installing-the-Tools":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Getting-Started\/Installing-the-Tools","abstract":[],"type":"topic","role":"article","title":"Installing the Tools","kind":"article","url":"\/tutorials\/spacekit\/getting-started\/installing-the-tools"},"InstallingToolsSection3Step3.png":{"variants":[{"url":"\/images\/SpaceKit\/InstallingToolsSection3Step3.png","traits":["1x","light"]}],"alt":"Command output after navigating to the directory.","type":"image","identifier":"InstallingToolsSection3Step3.png"},"InstallingToolsSection3Step2.png":{"variants":[{"url":"\/images\/SpaceKit\/InstallingToolsSection3Step2.png","traits":["1x","light"]}],"type":"image","identifier":"InstallingToolsSection3Step2.png","alt":"Output of `space init MyFirstSpaceProject`."},"InstallingToolsSection2Step2.png":{"variants":[{"url":"\/images\/SpaceKit\/InstallingToolsSection2Step2.png","traits":["1x","light"]}],"alt":"Output of `space --help`.","type":"image","identifier":"InstallingToolsSection2Step2.png"},"doc://SpaceKit/tutorials/SpaceKit/AsyncCalls#Perform-an-Asynchronous-Call":{"kind":"section","abstract":[{"text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources.","type":"text"}],"title":"Perform an Asynchronous Call","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls#Perform-an-Asynchronous-Call","url":"\/tutorials\/spacekit\/asynccalls#Perform-an-Asynchronous-Call","type":"section","role":"pseudoSymbol"},"doc://SpaceKit/tutorials/SpaceKit/CodingYourFirstContract#Writing-the-Contract-Code":{"role":"pseudoSymbol","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract#Writing-the-Contract-Code","kind":"section","url":"\/tutorials\/spacekit\/codingyourfirstcontract#Writing-the-Contract-Code","type":"section","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"title":"Writing the Contract Code"},"doc://SpaceKit/tutorials/SpaceKit/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage":{"title":"Leveraging @Mapping for Dynamic Key-Value Storage","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/spacekit\/storevalues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","type":"section","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}]},"InstallingToolsSection2Step3.png":{"type":"image","alt":"Output of `space --help`.","identifier":"InstallingToolsSection2Step3.png","variants":[{"url":"\/images\/SpaceKit\/InstallingToolsSection2Step3.png","traits":["1x","light"]}]},"InstallingToolsSection1Step3.png":{"identifier":"InstallingToolsSection1Step3.png","type":"image","variants":[{"url":"\/images\/SpaceKit\/InstallingToolsSection1Step3.png","traits":["1x","light"]}],"alt":"Output of `git --version`."},"InstallingToolsSection1Step2.png":{"alt":"Output of `swift --version`.","identifier":"InstallingToolsSection1Step2.png","type":"image","variants":[{"url":"\/images\/SpaceKit\/InstallingToolsSection1Step2.png","traits":["1x","light"]}]},"doc://SpaceKit/tutorials/SpaceKit/SyncCalls":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls","abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}],"type":"topic","role":"project","estimatedTime":"15min","title":"Interact with Other Contracts","kind":"project","url":"\/tutorials\/spacekit\/synccalls"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes#Understanding-the-Buffer-Type":{"abstract":[{"text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"title":"Understanding the Buffer Type","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","url":"\/tutorials\/spacekit\/familiarizewithtypes#Understanding-the-Buffer-Type","type":"section","role":"pseudoSymbol","kind":"section"},"doc://SpaceKit/tutorials/SpaceKit/StoreValues":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues","abstract":[{"type":"text","text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory."}],"type":"topic","role":"project","estimatedTime":"15min","title":"Persist Values Between Executions","kind":"project","url":"\/tutorials\/spacekit\/storevalues"},"https://docs.docker.com/get-started/get-docker/":{"titleInlineContent":[{"type":"text","text":"Docker’s official site"}],"title":"Docker’s official site","url":"https:\/\/docs.docker.com\/get-started\/get-docker\/","type":"link","identifier":"https:\/\/docs.docker.com\/get-started\/get-docker\/"},"doc://SpaceKit/tutorials/SpaceKit/GetInfo":{"abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"title":"Retrieving Information from the Blockchain","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo","url":"\/tutorials\/spacekit\/getinfo","estimatedTime":"10min","type":"topic","role":"project","kind":"project"},"doc://SpaceKit/tutorials/SpaceKit/CodingYourFirstContract#Testing-the-Contract":{"kind":"section","title":"Testing the Contract","url":"\/tutorials\/spacekit\/codingyourfirstcontract#Testing-the-Contract","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract#Testing-the-Contract","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"type":"section","role":"pseudoSymbol"},"https://www.swift.org/install/macos/":{"titleInlineContent":[{"type":"text","text":"the official Swift website"}],"type":"link","url":"https:\/\/www.swift.org\/install\/macos\/","identifier":"https:\/\/www.swift.org\/install\/macos\/","title":"the official Swift website"},"doc://SpaceKit/tutorials/SpaceKit/SyncCalls#Declare-the-Callee-Proxy":{"kind":"section","title":"Declare the Callee Proxy","url":"\/tutorials\/spacekit\/synccalls#Declare-the-Callee-Proxy","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls#Declare-the-Callee-Proxy","abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"type":"section","role":"pseudoSymbol"},"InstallingToolsSection3Step4.png":{"variants":[{"url":"\/images\/SpaceKit\/InstallingToolsSection3Step4.png","traits":["1x","light"]}],"type":"image","identifier":"InstallingToolsSection3Step4.png","alt":"Output of `space contract build`."},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes#Working-with-the-Vector-Type":{"abstract":[{"text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"title":"Working with the Vector Type","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Working-with-the-Vector-Type","url":"\/tutorials\/spacekit\/familiarizewithtypes#Working-with-the-Vector-Type","type":"section","role":"pseudoSymbol","kind":"section"},"InstallingToolsSection1Step1.png":{"type":"image","alt":"An empty terminal window.","identifier":"InstallingToolsSection1Step1.png","variants":[{"url":"\/images\/SpaceKit\/InstallingToolsSection1Step1.png","traits":["1x","light"]}]},"doc://SpaceKit/tutorials/SpaceKit/InstallingTools#Installing-SpaceKits-Dependencies":{"role":"pseudoSymbol","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools#Installing-SpaceKits-Dependencies","kind":"section","url":"\/tutorials\/spacekit\/installingtools#Installing-SpaceKits-Dependencies","type":"section","abstract":[{"text":"Before writing your first smart contract with SpaceKit, ensure you have the necessary tools installed.","type":"text"}],"title":"Installing SpaceKit's Dependencies"},"doc://SpaceKit/tutorials/SpaceKit/Deep-Dive-into-SpaceKit-Concepts/Interacting-with-Other-Contracts":{"role":"article","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Deep-Dive-into-SpaceKit-Concepts\/Interacting-with-Other-Contracts","url":"\/tutorials\/spacekit\/deep-dive-into-spacekit-concepts\/interacting-with-other-contracts","type":"topic","title":"Interacting with Other Contracts","kind":"article","abstract":[]},"doc://SpaceKit/tutorials/SpaceKit/Deep-Dive-into-SpaceKit-Concepts/Persisting-Data-Across-Executions":{"type":"topic","role":"article","kind":"article","abstract":[],"url":"\/tutorials\/spacekit\/deep-dive-into-spacekit-concepts\/persisting-data-across-executions","title":"Persisting Data Across Executions","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Deep-Dive-into-SpaceKit-Concepts\/Persisting-Data-Across-Executions"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes#Working-with-the-BigUint-Type":{"role":"pseudoSymbol","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Working-with-the-BigUint-Type","url":"\/tutorials\/spacekit\/familiarizewithtypes#Working-with-the-BigUint-Type","type":"section","title":"Working with the BigUint Type","kind":"section","abstract":[{"text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}]},"doc://SpaceKit/tutorials/SpaceKit/AsyncCalls#Declare-the-Callee-Proxy":{"abstract":[{"text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources.","type":"text"}],"title":"Declare the Callee Proxy","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls#Declare-the-Callee-Proxy","url":"\/tutorials\/spacekit\/asynccalls#Declare-the-Callee-Proxy","type":"section","role":"pseudoSymbol","kind":"section"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes":{"url":"\/tutorials\/spacekit\/familiarizewithtypes","type":"topic","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes","kind":"project","abstract":[{"type":"text","text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM."}],"role":"project","estimatedTime":"20min","title":"Exploring SpaceKit's Types"},"doc://SpaceKit/tutorials/SpaceKit/Deep-Dive-into-SpaceKit-Concepts/Calling-Contracts-Across-Shards":{"abstract":[],"title":"Calling Contracts Across Shards","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/Deep-Dive-into-SpaceKit-Concepts\/Calling-Contracts-Across-Shards","url":"\/tutorials\/spacekit\/deep-dive-into-spacekit-concepts\/calling-contracts-across-shards","type":"topic","role":"article","kind":"article"}}}