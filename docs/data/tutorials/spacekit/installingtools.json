{"hierarchy":{"modules":[{"reference":"doc:\/\/SpaceKit\/tutorials\/Space\/Getting-Started\/Installing-the-Tools","projects":[{"sections":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools#Installing-SpaceKits-Dependencies","kind":"task"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools#Setting-Up-the-SpaceKit-CLI","kind":"task"},{"kind":"task","reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract"}],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools"}]},{"reference":"doc:\/\/SpaceKit\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract#Initializing-the-Project"},{"kind":"task","reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract#Writing-the-Contract-Code"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract#Testing-the-Contract","kind":"task"}],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract"}]},{"reference":"doc:\/\/SpaceKit\/tutorials\/Space\/Deep-Dive-into-SpaceKit-Concepts\/Exploring-SpaceKit's-Types","projects":[{"sections":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges","kind":"task"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","kind":"task"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Working-with-the-BigUint-Type","kind":"task"},{"kind":"task","reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Working-with-the-Vector-Type"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Creating-Your-Own-Types","kind":"task"}],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes"}]},{"projects":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues","sections":[{"kind":"task","reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues#Working-with-Storage-for-Single-Value-Persistence"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","kind":"task"}]}],"reference":"doc:\/\/SpaceKit\/tutorials\/Space\/Deep-Dive-into-SpaceKit-Concepts\/Persisting-Data-Across-Executions"},{"reference":"doc:\/\/SpaceKit\/tutorials\/Space\/Deep-Dive-into-SpaceKit-Concepts\/Retrieving-Information-from-the-Blockchain","projects":[{"sections":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo#Accessing-Transaction-Context-Data","kind":"task"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo#Accessing-Blockchain-Context-Data","kind":"task"}],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo"}]},{"reference":"doc:\/\/SpaceKit\/tutorials\/Space\/Deep-Dive-into-SpaceKit-Concepts\/Interacting-with-Other-Contracts","projects":[{"sections":[{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls#Declare-the-Callee-Proxy","kind":"task"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls#Perform-a-Synchronous-Call","kind":"task"}],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls"}]},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls#Declare-the-Callee-Proxy"},{"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls#Perform-an-Asynchronous-Call","kind":"task"}],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls"}],"reference":"doc:\/\/SpaceKit\/tutorials\/Space\/Deep-Dive-into-SpaceKit-Concepts\/Calling-Contracts-Across-Shards"}],"paths":[["doc:\/\/SpaceKit\/tutorials\/Space","doc:\/\/SpaceKit\/tutorials\/Space\/Getting-Started","doc:\/\/SpaceKit\/tutorials\/Space\/Getting-Started\/Installing-the-Tools"]],"reference":"doc:\/\/SpaceKit\/tutorials\/Space"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools","interfaceLanguage":"swift"},"metadata":{"role":"project","categoryPathComponent":"Space","category":"SpaceKit","title":"Install the Necessary Tools"},"kind":"project","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/spacekit\/installingtools"]}],"sections":[{"estimatedTimeInMinutes":10,"kind":"hero","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Before writing your first smart contract with SpaceKit, ensure you have the necessary tools installed."}]}],"chapter":"Installing the Tools","title":"Install the Necessary Tools"},{"tasks":[{"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SpaceKit relies on several dependencies, which you need to install on your system."}]}]}],"stepsSection":[{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open a terminal to begin."}]}],"type":"step","media":"InstallingToolsSection1Step1.png","code":null,"caption":[]},{"content":[{"inlineContent":[{"type":"text","text":"Check the Swift version by running "},{"type":"codeVoice","code":"swift --version"},{"type":"text","text":". SpaceKit requires Swift 6 or later."}],"type":"paragraph"}],"media":"InstallingToolsSection1Step2.png","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If necessary, install or update Swift by following the instructions on "},{"type":"reference","identifier":"https:\/\/www.swift.org\/install\/macos\/","isActive":true},{"text":".","type":"text"}]}],"type":"step","code":null,"runtimePreview":null},{"caption":[{"inlineContent":[{"type":"text","text":"If "},{"code":"git","type":"codeVoice"},{"type":"text","text":" is not installed, use your preferred method to install it."}],"type":"paragraph"}],"media":"InstallingToolsSection1Step3.png","type":"step","code":null,"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Ensure "},{"code":"git","type":"codeVoice"},{"type":"text","text":" is installed. The SpaceKit CLI requires it to retrieve important files."}],"type":"paragraph"}]},{"media":"InstallingToolsSection1Step4.png","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If Docker is not installed, you can download and install it by following the steps on "},{"isActive":true,"identifier":"https:\/\/docs.docker.com\/get-started\/get-docker\/","type":"reference"},{"type":"text","text":"."}]}],"content":[{"type":"paragraph","inlineContent":[{"text":"Ensure that Docker is installed and running. Docker is required by the SpaceKit CLI to compile smart contracts.","type":"text"}]}],"code":null,"type":"step","runtimePreview":null}],"anchor":"Installing-SpaceKits-Dependencies","title":"Installing SpaceKit's Dependencies"},{"title":"Setting Up the SpaceKit CLI","contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The SpaceKit CLI is your primary tool for using the SpaceKit framework. You’ll use it to initialize and compile your smart contracts."}]}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"stepsSection":[{"code":null,"media":"InstallingToolsSection1Step1.png","caption":[],"type":"step","content":[{"inlineContent":[{"type":"text","text":"Open a terminal."}],"type":"paragraph"}],"runtimePreview":null},{"runtimePreview":null,"media":"InstallingToolsSection2Step2.png","content":[{"inlineContent":[{"type":"text","text":"Run the installation command: "},{"code":"curl -sSL https:\/\/raw.githubusercontent.com\/gfusee\/SpaceKitCLI\/refs\/heads\/main\/install.sh | bash","type":"codeVoice"}],"type":"paragraph"}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After the installation, please restart your terminal to reload your PATH environment variable."}]}],"type":"step","code":null},{"caption":[],"media":"InstallingToolsSection2Step3.png","type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Verify the SpaceKit CLI installation by running ","type":"text"},{"type":"codeVoice","code":"space --help"},{"type":"text","text":"."}]}],"code":null,"runtimePreview":null}],"anchor":"Setting-Up-the-SpaceKit-CLI"},{"contentSection":[{"kind":"contentAndMedia","content":[{"inlineContent":[{"text":"Now, use the SpaceKit CLI to create and compile your first smart contract project.","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing"}],"title":"Initializing and Compiling Your First Smart Contract","stepsSection":[{"code":null,"caption":[],"media":"InstallingToolsSection1Step1.png","type":"step","runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Open a terminal."}],"type":"paragraph"}]},{"runtimePreview":null,"caption":[{"inlineContent":[{"type":"text","text":"This command creates a new project directory named "},{"code":"MyFirstSpaceProject","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"step","code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the desired directory and run "},{"code":"space init MyFirstSpaceProject","type":"codeVoice"},{"text":".","type":"text"}]}],"media":"InstallingToolsSection3Step2.png"},{"runtimePreview":null,"type":"step","caption":[],"media":"InstallingToolsSection3Step3.png","content":[{"inlineContent":[{"type":"text","text":"Navigate to the newly created "},{"type":"codeVoice","code":"MyFirstSpaceProject"},{"type":"text","text":" directory."}],"type":"paragraph"}],"code":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build the smart contract by running "},{"code":"space contract build","type":"codeVoice"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Look for the “WASM output:” line, which indicates a successful compilation. The "},{"code":".wasm","type":"codeVoice"},{"text":" file is your compiled contract.","type":"text"}]}],"type":"step","media":"InstallingToolsSection3Step4.png","code":null,"runtimePreview":null}],"anchor":"Initializing-and-Compiling-Your-First-Smart-Contract"}],"kind":"tasks"},{"kind":"callToAction","action":{"overridingTitle":"Get started","type":"reference","isActive":true,"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract","overridingTitleInlineContent":[{"text":"Get started","type":"text"}]},"title":"Building Your First Smart Contract","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"featuredEyebrow":"Tutorial"}],"references":{"InstallingToolsSection1Step3.png":{"identifier":"InstallingToolsSection1Step3.png","type":"image","alt":"Output of `git --version`.","variants":[{"traits":["1x","light"],"url":"\/images\/SpaceKit\/InstallingToolsSection1Step3.png"}]},"https://www.swift.org/install/macos/":{"title":"the official Swift website","titleInlineContent":[{"type":"text","text":"the official Swift website"}],"identifier":"https:\/\/www.swift.org\/install\/macos\/","type":"link","url":"https:\/\/www.swift.org\/install\/macos\/"},"doc://SpaceKit/tutorials/SpaceKit/CodingYourFirstContract#Testing-the-Contract":{"role":"pseudoSymbol","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract#Testing-the-Contract","type":"section","title":"Testing the Contract","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"kind":"section","url":"\/tutorials\/spacekit\/codingyourfirstcontract#Testing-the-Contract"},"doc://SpaceKit/tutorials/SpaceKit/GetInfo#Accessing-Blockchain-Context-Data":{"type":"section","title":"Accessing Blockchain Context Data","url":"\/tutorials\/spacekit\/getinfo#Accessing-Blockchain-Context-Data","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo#Accessing-Blockchain-Context-Data","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}]},"doc://SpaceKit/tutorials/SpaceKit/CodingYourFirstContract#Initializing-the-Project":{"title":"Initializing the Project","type":"section","kind":"section","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract#Initializing-the-Project","url":"\/tutorials\/spacekit\/codingyourfirstcontract#Initializing-the-Project","role":"pseudoSymbol"},"doc://SpaceKit/tutorials/Space/Getting-Started/Installing-the-Tools":{"title":"Installing the Tools","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/SpaceKit\/tutorials\/Space\/Getting-Started\/Installing-the-Tools","url":"\/tutorials\/space\/getting-started\/installing-the-tools","role":"article"},"doc://SpaceKit/tutorials/SpaceKit/StoreValues#Working-with-Storage-for-Single-Value-Persistence":{"abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"url":"\/tutorials\/spacekit\/storevalues#Working-with-Storage-for-Single-Value-Persistence","type":"section","role":"pseudoSymbol","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues#Working-with-Storage-for-Single-Value-Persistence","title":"Working with @Storage for Single Value Persistence","kind":"section"},"doc://SpaceKit/tutorials/SpaceKit/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage":{"title":"Leveraging @Mapping for Dynamic Key-Value Storage","type":"section","kind":"section","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","url":"\/tutorials\/spacekit\/storevalues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","role":"pseudoSymbol"},"doc://SpaceKit/tutorials/SpaceKit/StoreValues":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues","type":"topic","kind":"project","title":"Persist Values Between Executions","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"role":"project","estimatedTime":"15min","url":"\/tutorials\/spacekit\/storevalues"},"doc://SpaceKit/tutorials/SpaceKit/GetInfo#Accessing-Transaction-Context-Data":{"abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo#Accessing-Transaction-Context-Data","role":"pseudoSymbol","kind":"section","title":"Accessing Transaction Context Data","type":"section","url":"\/tutorials\/spacekit\/getinfo#Accessing-Transaction-Context-Data"},"doc://SpaceKit/tutorials/Space/Deep-Dive-into-SpaceKit-Concepts/Calling-Contracts-Across-Shards":{"abstract":[],"url":"\/tutorials\/space\/deep-dive-into-spacekit-concepts\/calling-contracts-across-shards","type":"topic","role":"article","identifier":"doc:\/\/SpaceKit\/tutorials\/Space\/Deep-Dive-into-SpaceKit-Concepts\/Calling-Contracts-Across-Shards","title":"Calling Contracts Across Shards","kind":"article"},"doc://SpaceKit/tutorials/SpaceKit/SyncCalls":{"abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls","estimatedTime":"15min","role":"project","kind":"project","title":"Interact with Other Contracts","type":"topic","url":"\/tutorials\/spacekit\/synccalls"},"InstallingToolsSection2Step3.png":{"type":"image","alt":"Output of `space --help`.","identifier":"InstallingToolsSection2Step3.png","variants":[{"traits":["1x","light"],"url":"\/images\/SpaceKit\/InstallingToolsSection2Step3.png"}]},"doc://SpaceKit/tutorials/Space/Deep-Dive-into-SpaceKit-Concepts/Retrieving-Information-from-the-Blockchain":{"kind":"article","type":"topic","url":"\/tutorials\/space\/deep-dive-into-spacekit-concepts\/retrieving-information-from-the-blockchain","identifier":"doc:\/\/SpaceKit\/tutorials\/Space\/Deep-Dive-into-SpaceKit-Concepts\/Retrieving-Information-from-the-Blockchain","role":"article","title":"Retrieving Information from the Blockchain","abstract":[]},"doc://SpaceKit/tutorials/SpaceKit/SyncCalls#Perform-a-Synchronous-Call":{"type":"section","title":"Perform a Synchronous Call","url":"\/tutorials\/spacekit\/synccalls#Perform-a-Synchronous-Call","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls#Perform-a-Synchronous-Call","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}]},"doc://SpaceKit/tutorials/SpaceKit/SyncCalls#Declare-the-Callee-Proxy":{"role":"pseudoSymbol","title":"Declare the Callee Proxy","kind":"section","type":"section","abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls#Declare-the-Callee-Proxy","url":"\/tutorials\/spacekit\/synccalls#Declare-the-Callee-Proxy"},"doc://SpaceKit/tutorials/SpaceKit/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract":{"type":"section","abstract":[{"type":"text","text":"Before writing your first smart contract with SpaceKit, ensure you have the necessary tools installed."}],"url":"\/tutorials\/spacekit\/installingtools#Initializing-and-Compiling-Your-First-Smart-Contract","role":"pseudoSymbol","title":"Initializing and Compiling Your First Smart Contract","kind":"section","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract"},"doc://SpaceKit/tutorials/Space/Deep-Dive-into-SpaceKit-Concepts/Exploring-SpaceKit's-Types":{"abstract":[],"identifier":"doc:\/\/SpaceKit\/tutorials\/Space\/Deep-Dive-into-SpaceKit-Concepts\/Exploring-SpaceKit's-Types","role":"article","kind":"article","title":"Exploring SpaceKit's Types","type":"topic","url":"\/tutorials\/space\/deep-dive-into-spacekit-concepts\/exploring-spacekit's-types"},"doc://SpaceKit/tutorials/Space":{"kind":"overview","type":"topic","url":"\/tutorials\/space","identifier":"doc:\/\/SpaceKit\/tutorials\/Space","role":"overview","title":"Meet SpaceKit","abstract":[{"text":"Discover how SpaceKit simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency.","type":"text"}]},"doc://SpaceKit/tutorials/SpaceKit/AsyncCalls#Declare-the-Callee-Proxy":{"type":"section","abstract":[{"type":"text","text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources."}],"url":"\/tutorials\/spacekit\/asynccalls#Declare-the-Callee-Proxy","role":"pseudoSymbol","title":"Declare the Callee Proxy","kind":"section","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls#Declare-the-Callee-Proxy"},"doc://SpaceKit/tutorials/SpaceKit/InstallingTools":{"role":"project","estimatedTime":"10min","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools","type":"topic","title":"Install the Necessary Tools","abstract":[{"type":"text","text":"Before writing your first smart contract with SpaceKit, ensure you have the necessary tools installed."}],"kind":"project","url":"\/tutorials\/spacekit\/installingtools"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges":{"title":"Handling Heap Allocation Challenges","type":"section","kind":"section","abstract":[{"text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges","url":"\/tutorials\/spacekit\/familiarizewithtypes#Handling-Heap-Allocation-Challenges","role":"pseudoSymbol"},"InstallingToolsSection1Step1.png":{"identifier":"InstallingToolsSection1Step1.png","type":"image","alt":"An empty terminal window.","variants":[{"traits":["1x","light"],"url":"\/images\/SpaceKit\/InstallingToolsSection1Step1.png"}]},"doc://SpaceKit/tutorials/Space/Getting-Started/Building-Your-First-Smart-Contract":{"title":"Building Your First Smart Contract","type":"topic","url":"\/tutorials\/space\/getting-started\/building-your-first-smart-contract","kind":"article","abstract":[],"identifier":"doc:\/\/SpaceKit\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract","role":"article"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes":{"kind":"project","type":"topic","url":"\/tutorials\/spacekit\/familiarizewithtypes","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes","role":"project","title":"Exploring SpaceKit's Types","estimatedTime":"20min","abstract":[{"text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}]},"doc://SpaceKit/tutorials/SpaceKit/GetInfo":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo","type":"topic","kind":"project","title":"Retrieving Information from the Blockchain","abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"role":"project","estimatedTime":"10min","url":"\/tutorials\/spacekit\/getinfo"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes#Working-with-the-BigUint-Type":{"type":"section","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Working-with-the-BigUint-Type","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/spacekit\/familiarizewithtypes#Working-with-the-BigUint-Type","abstract":[{"text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"title":"Working with the BigUint Type"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes#Working-with-the-Vector-Type":{"abstract":[{"type":"text","text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM."}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Working-with-the-Vector-Type","role":"pseudoSymbol","kind":"section","title":"Working with the Vector Type","type":"section","url":"\/tutorials\/spacekit\/familiarizewithtypes#Working-with-the-Vector-Type"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes#Understanding-the-Buffer-Type":{"role":"pseudoSymbol","title":"Understanding the Buffer Type","kind":"section","type":"section","abstract":[{"text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","url":"\/tutorials\/spacekit\/familiarizewithtypes#Understanding-the-Buffer-Type"},"doc://SpaceKit/tutorials/SpaceKit/AsyncCalls":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls","type":"topic","kind":"project","title":"Interacting with Contracts Across Shards","abstract":[{"text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources.","type":"text"}],"role":"project","estimatedTime":"15min","url":"\/tutorials\/spacekit\/asynccalls"},"InstallingToolsSection3Step4.png":{"type":"image","alt":"Output of `space contract build`.","identifier":"InstallingToolsSection3Step4.png","variants":[{"traits":["1x","light"],"url":"\/images\/SpaceKit\/InstallingToolsSection3Step4.png"}]},"doc://SpaceKit/tutorials/SpaceKit/AsyncCalls#Perform-an-Asynchronous-Call":{"role":"pseudoSymbol","title":"Perform an Asynchronous Call","kind":"section","type":"section","abstract":[{"text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources.","type":"text"}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls#Perform-an-Asynchronous-Call","url":"\/tutorials\/spacekit\/asynccalls#Perform-an-Asynchronous-Call"},"InstallingToolsSection2Step2.png":{"identifier":"InstallingToolsSection2Step2.png","type":"image","alt":"Output of `space --help`.","variants":[{"traits":["1x","light"],"url":"\/images\/SpaceKit\/InstallingToolsSection2Step2.png"}]},"InstallingToolsSection3Step2.png":{"type":"image","alt":"Output of `space init MyFirstSpaceProject`.","identifier":"InstallingToolsSection3Step2.png","variants":[{"traits":["1x","light"],"url":"\/images\/SpaceKit\/InstallingToolsSection3Step2.png"}]},"doc://SpaceKit/tutorials/Space/Deep-Dive-into-SpaceKit-Concepts/Persisting-Data-Across-Executions":{"title":"Persisting Data Across Executions","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/SpaceKit\/tutorials\/Space\/Deep-Dive-into-SpaceKit-Concepts\/Persisting-Data-Across-Executions","url":"\/tutorials\/space\/deep-dive-into-spacekit-concepts\/persisting-data-across-executions","role":"article"},"InstallingToolsSection3Step3.png":{"identifier":"InstallingToolsSection3Step3.png","type":"image","alt":"Command output after navigating to the directory.","variants":[{"traits":["1x","light"],"url":"\/images\/SpaceKit\/InstallingToolsSection3Step3.png"}]},"InstallingToolsSection1Step2.png":{"type":"image","alt":"Output of `swift --version`.","identifier":"InstallingToolsSection1Step2.png","variants":[{"traits":["1x","light"],"url":"\/images\/SpaceKit\/InstallingToolsSection1Step2.png"}]},"https://docs.docker.com/get-started/get-docker/":{"title":"Docker’s official site","titleInlineContent":[{"type":"text","text":"Docker’s official site"}],"identifier":"https:\/\/docs.docker.com\/get-started\/get-docker\/","type":"link","url":"https:\/\/docs.docker.com\/get-started\/get-docker\/"},"InstallingToolsSection1Step4.png":{"type":"image","alt":"Terminal output showing Docker is running.","identifier":"InstallingToolsSection1Step4.png","variants":[{"traits":["1x","light"],"url":"\/images\/SpaceKit\/InstallingToolsSection1Step4.png"}]},"doc://SpaceKit/tutorials/SpaceKit/InstallingTools#Setting-Up-the-SpaceKit-CLI":{"url":"\/tutorials\/spacekit\/installingtools#Setting-Up-the-SpaceKit-CLI","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools#Setting-Up-the-SpaceKit-CLI","type":"section","title":"Setting Up the SpaceKit CLI","abstract":[{"text":"Before writing your first smart contract with SpaceKit, ensure you have the necessary tools installed.","type":"text"}],"kind":"section","role":"pseudoSymbol"},"doc://SpaceKit/tutorials/SpaceKit/InstallingTools#Installing-SpaceKits-Dependencies":{"title":"Installing SpaceKit's Dependencies","type":"section","kind":"section","abstract":[{"text":"Before writing your first smart contract with SpaceKit, ensure you have the necessary tools installed.","type":"text"}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools#Installing-SpaceKits-Dependencies","url":"\/tutorials\/spacekit\/installingtools#Installing-SpaceKits-Dependencies","role":"pseudoSymbol"},"doc://SpaceKit/tutorials/SpaceKit/CodingYourFirstContract":{"role":"project","estimatedTime":"20min","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract","type":"topic","title":"Building Your First Smart Contract","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"kind":"project","url":"\/tutorials\/spacekit\/codingyourfirstcontract"},"doc://SpaceKit/tutorials/Space/Deep-Dive-into-SpaceKit-Concepts/Interacting-with-Other-Contracts":{"identifier":"doc:\/\/SpaceKit\/tutorials\/Space\/Deep-Dive-into-SpaceKit-Concepts\/Interacting-with-Other-Contracts","type":"topic","kind":"article","title":"Interacting with Other Contracts","abstract":[],"role":"article","url":"\/tutorials\/space\/deep-dive-into-spacekit-concepts\/interacting-with-other-contracts"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes#Creating-Your-Own-Types":{"role":"pseudoSymbol","title":"Creating Your Own Types","kind":"section","type":"section","abstract":[{"text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes#Creating-Your-Own-Types","url":"\/tutorials\/spacekit\/familiarizewithtypes#Creating-Your-Own-Types"},"doc://SpaceKit/tutorials/SpaceKit/CodingYourFirstContract#Writing-the-Contract-Code":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract#Writing-the-Contract-Code","type":"section","kind":"section","title":"Writing the Contract Code","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"role":"pseudoSymbol","url":"\/tutorials\/spacekit\/codingyourfirstcontract#Writing-the-Contract-Code"}}}