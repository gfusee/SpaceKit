{"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[{"kind":"hero","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Discover how SpaceKit simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency."}]}],"title":"Meet SpaceKit","action":{"type":"reference","overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools","isActive":true}},{"image":"logo.png","kind":"volume","chapters":[{"image":"logo.png","name":"Installing the Tools","content":[],"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools"]},{"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract"],"image":"logo.png","name":"Building Your First Smart Contract","content":[]}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Start your journey as a blockchain developer."}]}],"name":"Getting Started"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Gain a deeper understanding of SpaceKit’s architecture, from core types to advanced usage scenarios.","type":"text"}]}],"name":"Deep Dive into SpaceKit Concepts","chapters":[{"name":"Exploring SpaceKit's Types","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn about the core types that power smart contracts in SpaceKit, including WebAssembly integration and Swift interoperability."}]}],"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes"],"image":"logo.png"},{"name":"Persisting Data Across Executions","content":[{"type":"paragraph","inlineContent":[{"text":"Discover how to retain data across multiple contract executions using SpaceKit’s storage features.","type":"text"}]}],"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues"],"image":"logo.png"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn how to access transaction and blockchain context data, such as caller information, payments, and timestamps, using the SpaceKit framework."}]}],"image":"logo.png","name":"Retrieving Information from the Blockchain","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo"]},{"image":"logo.png","name":"Interacting with Other Contracts","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls"],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn how to enable smart contracts to call other contracts in a synchronous manner, and explore contract-to-contract interaction using SpaceKit’s proxy mechanisms."}]}]},{"image":"logo.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Asynchronous calls enable interaction with contracts across different shards. Let’s explore how to implement these cross-shard calls in SpaceKit."}]}],"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls"],"name":"Calling Contracts Across Shards"}],"image":"logo.png","kind":"volume"},{"chapters":[{"image":"logo.png","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/UnderstandTokens"],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Explore the ESDT token standard and understand the differences between fungible, non-fungible, semi-fungible, and meta tokens. Follow step-by-step instructions to create each type."}]}],"name":"Creating and Understanding Tokens"},{"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/OperationsOnFungibleTokens"],"image":"logo.png","content":[{"inlineContent":[{"type":"text","text":"Learn how to manage your issued fungible tokens by performing key operations such as minting and burning."}],"type":"paragraph"}],"name":"Managing Fungible Tokens"},{"image":"logo.png","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/OperationsOnNonFungibleTokens"],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Discover how to manage your issued non-fungible and semi-fungible tokens by executing essential operations, including creating new nonces, increasing supply, and burning tokens."}]}],"name":"Managing Non-Fungible Tokens"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Discover how to embed custom attributes into your ESDT tokens, enabling more flexible and powerful smart contract logic.","type":"text"}]}],"image":"logo.png","name":"Enhancing Contracts with Token Attributes","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/TokenAttributes"]}],"kind":"volume","image":"logo.png","name":"Create and Manage Tokens","content":[{"inlineContent":[{"text":"Tokens are a core component of blockchain technology. With SpaceKit, you can easily create and manage tokens to suit your application’s needs.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Follow a full walkthrough to build, and test a complete contract with random logic, fees, and admin access."}]}],"chapters":[{"name":"Build a Coin Flip Smart Contract","image":"logo.png","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractIntro"],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn how to design the rules of your flip-based game, configure its economics, and protect it against random number manipulation."}]}]},{"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractWriteTheStorage"],"name":"Define the Storage for the Flip Contract","image":"logo.png","content":[{"type":"paragraph","inlineContent":[{"text":"Define the structures and values your contract will store—including flips, reserves, fees, and configuration parameters.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement the logic needed to let contract owners configure fees, set limits, and manage reserves."}]}],"name":"Add Administrative Endpoints to the Flip Contract","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractWriteAdmin"],"image":"logo.png"},{"image":"logo.png","content":[{"type":"paragraph","inlineContent":[{"text":"Build the core mechanics that power the game: accepting bets, resolving outcomes, and managing bounty rewards.","type":"text"}]}],"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractWriteTheGame"],"name":"Implement the Game Logic for the Flip Contract"},{"name":"Set Up Testing in the SwiftVM","content":[{"inlineContent":[{"type":"text","text":"Prepare your project for unit testing using SwiftVM. Learn how to simulate blockchain state and transactions in Swift."}],"type":"paragraph"}],"image":"logo.png","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractInitTests"]},{"name":"Test the Admin Endpoints","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Write tests to ensure admin-only access is enforced and configuration changes behave as expected."}]}],"image":"logo.png","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractTestAdmin"]},{"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractTestTheGame"],"content":[{"type":"paragraph","inlineContent":[{"text":"Validate end-to-end gameplay scenarios, simulate randomness, and test both winning and losing outcomes.","type":"text"}]}],"name":"Test the Game Logic for the Flip Contract","image":"logo.png"}],"image":"logo.png","name":"Build a Coin Flip Contract","kind":"volume"}],"identifier":{"url":"doc:\/\/SpaceKit\/tutorials\/SpaceKit","interfaceLanguage":"swift"},"metadata":{"category":"SpaceKit","estimatedTime":"5hr 5min","role":"overview","title":"Meet SpaceKit","categoryPathComponent":"SpaceKit"},"variants":[{"paths":["\/tutorials\/spacekit"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit"},"kind":"overview","references":{"doc://SpaceKit/tutorials/SpaceKit/FlipContractWriteTheStorage":{"title":"Define the Storage for the Flip Contract","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractWriteTheStorage","abstract":[{"type":"text","text":"With your Flip project initialized, you’re ready to begin implementing the smart contract. The contract is composed of the following components:"}],"kind":"project","role":"project","estimatedTime":"20min","type":"topic","url":"\/tutorials\/spacekit\/flipcontractwritethestorage"},"doc://SpaceKit/tutorials/SpaceKit/StoreValues":{"abstract":[{"type":"text","text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory."}],"role":"project","estimatedTime":"15min","kind":"project","url":"\/tutorials\/spacekit\/storevalues","type":"topic","title":"Persist Values Between Executions","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues"},"doc://SpaceKit/tutorials/SpaceKit/TokenAttributes":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/TokenAttributes","url":"\/tutorials\/spacekit\/tokenattributes","role":"project","type":"topic","kind":"project","abstract":[{"type":"text","text":"The ESDT standard enables embedding custom data within non-fungible tokens, allowing developers to extend the functionality of their smart contracts. This additional data, referred to as “attributes,” is tied to the token and transfers along with it between wallets."}],"estimatedTime":"15min","title":"Enhance Your Contracts with Token Attributes"},"doc://SpaceKit/tutorials/SpaceKit/FlipContractTestAdmin":{"title":"Test the Admin Endpoints","type":"topic","role":"project","abstract":[{"type":"text","text":"Admin endpoints are critical to the contract’s integrity. They not only control configuration parameters, but also grant access to withdraw the contract’s token reserves."}],"kind":"project","estimatedTime":"20min","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractTestAdmin","url":"\/tutorials\/spacekit\/flipcontracttestadmin"},"doc://SpaceKit/tutorials/SpaceKit/FlipContractTestTheGame":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractTestTheGame","title":"Test the Game Logic for the Flip Contract","kind":"project","estimatedTime":"20min","url":"\/tutorials\/spacekit\/flipcontracttestthegame","abstract":[{"type":"text","text":"This final chapter of the testing tutorial focuses on validating the core game logic implemented in the "},{"type":"codeVoice","code":"GameController"},{"type":"text","text":"."}],"type":"topic","role":"project"},"doc://SpaceKit/tutorials/SpaceKit/FlipContractInitTests":{"url":"\/tutorials\/spacekit\/flipcontractinittests","type":"topic","kind":"project","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractInitTests","estimatedTime":"20min","abstract":[{"text":"Smart contracts are permissionless programs that often manage valuable assets. Because of this, writing comprehensive tests for both successful and failure scenarios is essential.","type":"text"}],"title":"Set Up Testing in the SwiftVM","role":"project"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes":{"type":"topic","url":"\/tutorials\/spacekit\/familiarizewithtypes","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes","estimatedTime":"20min","role":"project","kind":"project","title":"Exploring SpaceKit's Types","abstract":[{"text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}]},"doc://SpaceKit/tutorials/SpaceKit/AsyncCalls":{"title":"Interacting with Contracts Across Shards","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls","abstract":[{"type":"text","text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources."}],"kind":"project","role":"project","estimatedTime":"15min","type":"topic","url":"\/tutorials\/spacekit\/asynccalls"},"doc://SpaceKit/tutorials/SpaceKit/GetInfo":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo","role":"project","url":"\/tutorials\/spacekit\/getinfo","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}],"title":"Retrieving Information from the Blockchain","type":"topic","estimatedTime":"10min","kind":"project"},"doc://SpaceKit/tutorials/SpaceKit/OperationsOnFungibleTokens":{"type":"topic","estimatedTime":"15min","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/OperationsOnFungibleTokens","role":"project","abstract":[{"type":"text","text":"Fungible tokens function similarly to traditional currencies, making them the simplest type of token to work with."}],"url":"\/tutorials\/spacekit\/operationsonfungibletokens","kind":"project","title":"Managing Fungible Tokens"},"doc://SpaceKit/tutorials/SpaceKit/FlipContractIntro":{"type":"topic","url":"\/tutorials\/spacekit\/flipcontractintro","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractIntro","estimatedTime":"20min","role":"project","kind":"project","title":"Build a Coin Flip Smart Contract","abstract":[{"text":"In this tutorial, you’ll write and test a complete smart contract that relies on random number generation to implement a coin flip mechanic. Players wager a chosen amount of any token and face a 50% chance of doubling their bet—or losing it. A small fee is deducted from each wager and sent to the developer’s wallet.","type":"text"}]},"doc://SpaceKit/tutorials/SpaceKit/UnderstandTokens":{"url":"\/tutorials\/spacekit\/understandtokens","estimatedTime":"15min","role":"project","kind":"project","title":"Understand the ESDT Standard","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/UnderstandTokens","type":"topic","abstract":[{"text":"Learn about the ESDT standard used in the SpaceKit framework, a token model that supports fungible tokens, non-fungible tokens (NFTs), semi-fungible tokens, and meta-esdt tokens.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The SpaceKit framework uses a token standard called ESDT. This standard defines four types of tokens: fungible, non-fungible (NFT), semi-fungible, and meta-esdt."}]},"doc://SpaceKit/tutorials/SpaceKit/FlipContractWriteAdmin":{"estimatedTime":"20min","url":"\/tutorials\/spacekit\/flipcontractwriteadmin","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractWriteAdmin","type":"topic","kind":"project","title":"Add Administrative Endpoints to the Flip Contract","role":"project","abstract":[{"text":"Now that your storage is fully set up, it’s time to define the administrative endpoints that allow the contract owner to manage critical values and assets.","type":"text"}]},"doc://SpaceKit/tutorials/SpaceKit/OperationsOnNonFungibleTokens":{"estimatedTime":"15min","type":"topic","title":"Managing Non-Fungible Tokens","role":"project","url":"\/tutorials\/spacekit\/operationsonnonfungibletokens","abstract":[{"type":"text","text":"Non-fungible tokens (NFTs) are unique digital assets that cannot be interchanged. Each NFT is associated with a unique identifier, known as a nonce. You can think of it like an airline ticket—each ticket is assigned to a specific passenger, with individual preferences and details."}],"kind":"project","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/OperationsOnNonFungibleTokens"},"logo.png":{"identifier":"logo.png","alt":"A dummy image.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/SpaceKit\/logo.png"}]},"doc://SpaceKit/tutorials/SpaceKit/FlipContractWriteTheGame":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FlipContractWriteTheGame","estimatedTime":"20min","abstract":[{"type":"text","text":"With the storage and administrative endpoints complete, it’s time to build the core gameplay mechanics."}],"role":"project","title":"Implement the Game Logic for the Flip Contract","kind":"project","url":"\/tutorials\/spacekit\/flipcontractwritethegame","type":"topic"},"doc://SpaceKit/tutorials/SpaceKit/SyncCalls":{"title":"Interact with Other Contracts","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls","abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}],"kind":"project","role":"project","estimatedTime":"15min","type":"topic","url":"\/tutorials\/spacekit\/synccalls"},"doc://SpaceKit/tutorials/SpaceKit/InstallingTools":{"title":"Install the Necessary Tools","estimatedTime":"10min","url":"\/tutorials\/spacekit\/installingtools","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools","abstract":[{"text":"Before writing your first smart contract with SpaceKit, ensure you have the necessary tools installed.","type":"text"}],"role":"project","kind":"project","type":"topic"},"doc://SpaceKit/tutorials/SpaceKit":{"title":"Meet SpaceKit","abstract":[{"type":"text","text":"Discover how SpaceKit simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency."}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit","url":"\/tutorials\/spacekit","role":"overview","kind":"overview","type":"topic"},"doc://SpaceKit/tutorials/SpaceKit/CodingYourFirstContract":{"url":"\/tutorials\/spacekit\/codingyourfirstcontract","kind":"project","estimatedTime":"20min","type":"topic","role":"project","title":"Building Your First Smart Contract","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract","abstract":[{"text":"In this tutorial, you’ll create a simple smart contract that manages a counter. Users can increment or decrement the counter, and the changes are persisted across contract executions.","type":"text"}]}}}