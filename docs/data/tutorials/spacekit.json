{"sections":[{"kind":"hero","content":[{"inlineContent":[{"type":"text","text":"Discover how SpaceKit simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency."}],"type":"paragraph"}],"title":"Meet SpaceKit","action":{"overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"isActive":true,"type":"reference","overridingTitle":"Get started","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools"}},{"image":"InstallingToolsSection1Step1.png","kind":"volume","name":"Getting Started","content":[{"inlineContent":[{"text":"Start your journey as a blockchain developer.","type":"text"}],"type":"paragraph"}],"chapters":[{"image":"InstallingToolsSection1Step1.png","name":"Installing the Tools","content":[],"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools"]},{"name":"Building Your First Smart Contract","content":[],"image":"InstallingToolsSection1Step1.png","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract"]}]},{"chapters":[{"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes"],"image":"InstallingToolsSection1Step1.png","name":"Exploring SpaceKit's Types","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn about the core types that power smart contracts in SpaceKit, including WebAssembly integration and Swift interoperability."}]}]},{"content":[{"inlineContent":[{"text":"Discover how to retain data across multiple contract executions using SpaceKit’s storage features.","type":"text"}],"type":"paragraph"}],"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues"],"image":"InstallingToolsSection1Step1.png","name":"Persisting Data Across Executions"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn how to access transaction and blockchain context data, such as caller information, payments, and timestamps, using the SpaceKit framework."}]}],"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo"],"name":"Retrieving Information from the Blockchain","image":"InstallingToolsSection1Step1.png"},{"image":"InstallingToolsSection1Step1.png","content":[{"type":"paragraph","inlineContent":[{"text":"Learn how to enable smart contracts to call other contracts in a synchronous manner, and explore contract-to-contract interaction using SpaceKit’s proxy mechanisms.","type":"text"}]}],"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls"],"name":"Interacting with Other Contracts"},{"name":"Calling Contracts Across Shards","content":[{"type":"paragraph","inlineContent":[{"text":"Asynchronous calls enable interaction with contracts across different shards. Let’s explore how to implement these cross-shard calls in SpaceKit.","type":"text"}]}],"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls"],"image":"InstallingToolsSection1Step1.png"}],"image":"InstallingToolsSection1Step1.png","name":"Deep Dive into SpaceKit Concepts","kind":"volume","content":[{"type":"paragraph","inlineContent":[{"text":"Gain a deeper understanding of SpaceKit’s architecture, from core types to advanced usage scenarios.","type":"text"}]}]}],"hierarchy":{"paths":[],"reference":"doc:\/\/SpaceKit\/tutorials\/SpaceKit"},"kind":"overview","identifier":{"url":"doc:\/\/SpaceKit\/tutorials\/SpaceKit","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"category":"SpaceKit","title":"Meet SpaceKit","estimatedTime":"1hr 45min","role":"overview","categoryPathComponent":"SpaceKit"},"variants":[{"paths":["\/tutorials\/spacekit"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SpaceKit/tutorials/SpaceKit/GetInfo":{"abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"url":"\/tutorials\/spacekit\/getinfo","kind":"project","title":"Retrieving Information from the Blockchain","estimatedTime":"10min","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo","type":"topic","role":"project"},"doc://SpaceKit/tutorials/SpaceKit/CodingYourFirstContract":{"type":"topic","kind":"project","abstract":[{"text":"In this tutorial, you’ll create a simple smart contract that manages a counter. Users can increment or decrement the counter, and the changes are persisted across contract executions.","type":"text"}],"url":"\/tutorials\/spacekit\/codingyourfirstcontract","role":"project","title":"Building Your First Smart Contract","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract","estimatedTime":"20min"},"doc://SpaceKit/tutorials/SpaceKit":{"url":"\/tutorials\/spacekit","abstract":[{"type":"text","text":"Discover how SpaceKit simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency."}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit","title":"Meet SpaceKit","kind":"overview","type":"topic","role":"overview"},"doc://SpaceKit/tutorials/SpaceKit/SyncCalls":{"abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"url":"\/tutorials\/spacekit\/synccalls","kind":"project","title":"Interact with Other Contracts","estimatedTime":"15min","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls","type":"topic","role":"project"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes":{"url":"\/tutorials\/spacekit\/familiarizewithtypes","title":"Exploring SpaceKit's Types","type":"topic","kind":"project","abstract":[{"text":"SpaceKit provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"estimatedTime":"20min","role":"project","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes"},"doc://SpaceKit/tutorials/SpaceKit/StoreValues":{"kind":"project","estimatedTime":"15min","role":"project","abstract":[{"type":"text","text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory."}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues","url":"\/tutorials\/spacekit\/storevalues","type":"topic","title":"Persist Values Between Executions"},"InstallingToolsSection1Step1.png":{"identifier":"InstallingToolsSection1Step1.png","type":"image","variants":[{"url":"\/images\/SpaceKit\/InstallingToolsSection1Step1.png","traits":["1x","light"]}],"alt":"A terminal window displaying code examples."},"doc://SpaceKit/tutorials/SpaceKit/InstallingTools":{"title":"Install the Necessary Tools","role":"project","url":"\/tutorials\/spacekit\/installingtools","abstract":[{"type":"text","text":"Before writing your first smart contract with SpaceKit, ensure you have the necessary tools installed."}],"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools","type":"topic","kind":"project","estimatedTime":"10min"},"doc://SpaceKit/tutorials/SpaceKit/AsyncCalls":{"kind":"project","abstract":[{"type":"text","text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources."}],"title":"Interacting with Contracts Across Shards","url":"\/tutorials\/spacekit\/asynccalls","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls","role":"project","type":"topic","estimatedTime":"15min"}}}