{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Space\/tutorials\/Space\/InstallingTools"},"hierarchy":{"modules":[{"reference":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools","projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract","kind":"task"}]}]},{"reference":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract","projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract","kind":"task"}]}]},{"projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes","sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Understanding-the-Buffer-Type"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-BigUint-Type"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-Vector-Type"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Creating-Your-Own-Types"}]}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Exploring-Space's-Types"},{"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Persisting-Data-Across-Executions","projects":[{"sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Working-with-Storage-for-Single-Value-Persistence","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage"}],"reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues"}]},{"projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo","sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Transaction-Context-Data","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Blockchain-Context-Data","kind":"task"}]}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Retrieving-Information-from-the-Blockchain"},{"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Interact-with-Other-Contracts","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Declare-the-Callee-Proxy"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Perform-a-Synchronous-Call"}],"reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls"}]}],"paths":[["doc:\/\/Space\/tutorials\/Space","doc:\/\/Space\/tutorials\/Space\/Getting-Started","doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools"]],"reference":"doc:\/\/Space\/tutorials\/Space"},"variants":[{"paths":["\/tutorials\/space\/installingtools"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[{"kind":"hero","chapter":"Installing the Tools","title":"Install the Necessary Tools","content":[{"inlineContent":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"type":"paragraph"}],"estimatedTimeInMinutes":10},{"tasks":[{"contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Space relies on several dependencies, which you need to install on your system.","type":"text"}]}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"title":"Installing Space's Dependencies","stepsSection":[{"media":"InstallingToolsSection1Step1.png","type":"step","code":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open a terminal to begin."}]}],"runtimePreview":null},{"content":[{"inlineContent":[{"type":"text","text":"Verify that "},{"code":"clang","type":"codeVoice"},{"text":" is installed by running ","type":"text"},{"code":"clang --version","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"code":null,"type":"step","media":"InstallingToolsSection1Step2.png","runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"If it’s not installed, use Homebrew on macOS or apt on Debian-based systems.","type":"text"}]}]},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Check the Swift version by running ","type":"text"},{"type":"codeVoice","code":"swift --version"},{"text":". Space requires Swift 6 or later.","type":"text"}]}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If necessary, install or update Swift by following the instructions on "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.swift.org\/install\/macos\/"},{"text":".","type":"text"}]}],"media":"InstallingToolsSection1Step3.png","runtimePreview":null},{"media":"InstallingToolsSection1Step4.png","type":"step","runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"git","type":"codeVoice"},{"type":"text","text":" is not installed, use your preferred method to install it."}]}],"code":null,"content":[{"inlineContent":[{"type":"text","text":"Ensure "},{"type":"codeVoice","code":"git"},{"text":" is installed. The Space CLI requires it to retrieve important files.","type":"text"}],"type":"paragraph"}]}],"anchor":"Installing-Spaces-Dependencies"},{"title":"Setting Up the Space CLI","anchor":"Setting-Up-the-Space-CLI","stepsSection":[{"caption":[],"code":null,"media":"InstallingToolsSection1Step1.png","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Open a terminal."}],"type":"paragraph"}]},{"runtimePreview":null,"caption":[],"media":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Run the installation command: ","type":"text"},{"inlineContent":[{"text":"TODO: the space-cli repo is private at the moment, please run the install.sh script to install the CLI","type":"text"}],"type":"strong"},{"type":"text","text":"."}]}],"code":null},{"type":"step","runtimePreview":null,"caption":[],"code":null,"content":[{"inlineContent":[{"type":"text","text":"Verify the Space CLI installation by running "},{"type":"codeVoice","code":"space --help"},{"text":".","type":"text"}],"type":"paragraph"}],"media":"InstallingToolsSection2Step2.png"}],"contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Space CLI is your primary tool for using the Space framework. You’ll use it to initialize and compile your smart contracts."}]}],"kind":"contentAndMedia","mediaPosition":"trailing"}]},{"title":"Initializing and Compiling Your First Smart Contract","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"Now, use the Space CLI to create and compile your first smart contract project."}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open a terminal."}]}],"runtimePreview":null,"code":null,"type":"step","media":"InstallingToolsSection1Step1.png","caption":[]},{"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the desired directory and run "},{"type":"codeVoice","code":"space init MyFirstSpaceProject"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This command creates a new project directory named "},{"type":"codeVoice","code":"MyFirstSpaceProject"},{"text":".","type":"text"}]}],"media":"InstallingToolsSection3Step2.png","code":null},{"runtimePreview":null,"caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the newly created "},{"type":"codeVoice","code":"MyFirstSpaceProject"},{"type":"text","text":" directory."}]}],"media":"InstallingToolsSection3Step3.png","code":null},{"type":"step","content":[{"inlineContent":[{"type":"text","text":"Build the smart contract by running "},{"type":"codeVoice","code":"space contract build"},{"type":"text","text":"."}],"type":"paragraph"}],"media":"InstallingToolsSection3Step4.png","code":null,"runtimePreview":null,"caption":[{"inlineContent":[{"text":"Look for the “WASM output:” line, which indicates a successful compilation. The ","type":"text"},{"type":"codeVoice","code":".wasm"},{"type":"text","text":" file is your compiled contract."}],"type":"paragraph"}]}],"anchor":"Initializing-and-Compiling-Your-First-Smart-Contract"}],"kind":"tasks"},{"kind":"callToAction","title":"Building Your First Smart Contract","action":{"isActive":true,"overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"type":"reference","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract"},"abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"featuredEyebrow":"Tutorial"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"project","metadata":{"categoryPathComponent":"Space","title":"Install the Necessary Tools","category":"Space","role":"project"},"references":{"InstallingToolsSection1Step1.png":{"identifier":"InstallingToolsSection1Step1.png","alt":"An empty terminal window.","type":"image","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step1.png","traits":["1x","light"]}]},"doc://Space/tutorials/Space/GetInfo":{"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo","role":"project","url":"\/tutorials\/space\/getinfo","title":"Retrieving Information from the Blockchain","estimatedTime":"10min","abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"kind":"project","type":"topic"},"doc://Space/tutorials/Space/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage":{"abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"kind":"section","title":"Leveraging @Mapping for Dynamic Key-Value Storage","role":"pseudoSymbol","url":"\/tutorials\/space\/storevalues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","type":"section"},"doc://Space/tutorials/Space/InstallingTools#Installing-Spaces-Dependencies":{"url":"\/tutorials\/space\/installingtools#Installing-Spaces-Dependencies","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies","type":"section","title":"Installing Space's Dependencies","abstract":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}]},"doc://Space/tutorials/Space/Getting-Started/Installing-the-Tools":{"role":"article","url":"\/tutorials\/space\/getting-started\/installing-the-tools","abstract":[],"identifier":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools","title":"Installing the Tools","kind":"article","type":"topic"},"doc://Space/tutorials/Space/SyncCalls#Declare-the-Callee-Proxy":{"url":"\/tutorials\/space\/synccalls#Declare-the-Callee-Proxy","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Declare-the-Callee-Proxy","type":"section","title":"Declare the Callee Proxy","abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}]},"InstallingToolsSection3Step2.png":{"identifier":"InstallingToolsSection3Step2.png","alt":"Output of `space init MyFirstSpaceProject`.","type":"image","variants":[{"url":"\/images\/Space\/InstallingToolsSection3Step2.png","traits":["1x","light"]}]},"doc://Space/tutorials/Space/GetInfo#Accessing-Blockchain-Context-Data":{"role":"pseudoSymbol","url":"\/tutorials\/space\/getinfo#Accessing-Blockchain-Context-Data","abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Blockchain-Context-Data","title":"Accessing Blockchain Context Data","kind":"section","type":"section"},"doc://Space/tutorials/Space/Getting-Started/Building-Your-First-Smart-Contract":{"abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract","url":"\/tutorials\/space\/getting-started\/building-your-first-smart-contract","title":"Building Your First Smart Contract","role":"article"},"doc://Space/tutorials/Space/CodingYourFirstContract#Initializing-the-Project":{"role":"pseudoSymbol","url":"\/tutorials\/space\/codingyourfirstcontract#Initializing-the-Project","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project","title":"Initializing the Project","kind":"section","type":"section"},"InstallingToolsSection1Step4.png":{"identifier":"InstallingToolsSection1Step4.png","alt":"Output of `git --version`.","type":"image","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step4.png","traits":["1x","light"]}]},"doc://Space/tutorials/Space/StoreValues#Working-with-Storage-for-Single-Value-Persistence":{"abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"kind":"section","title":"Working with @Storage for Single Value Persistence","role":"pseudoSymbol","url":"\/tutorials\/space\/storevalues#Working-with-Storage-for-Single-Value-Persistence","identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Working-with-Storage-for-Single-Value-Persistence","type":"section"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Persisting-Data-Across-Executions":{"abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Persisting-Data-Across-Executions","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/persisting-data-across-executions","title":"Persisting Data Across Executions","role":"article"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Understanding-the-Buffer-Type":{"role":"pseudoSymbol","url":"\/tutorials\/space\/familiarizewithtypes#Understanding-the-Buffer-Type","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","title":"Understanding the Buffer Type","kind":"section","type":"section"},"doc://Space/tutorials/Space/FamiliarizeWithTypes":{"role":"project","url":"\/tutorials\/space\/familiarizewithtypes","estimatedTime":"20min","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes","title":"Exploring Space's Types","kind":"project","type":"topic"},"doc://Space/tutorials/Space":{"role":"overview","url":"\/tutorials\/space","abstract":[{"text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space","title":"Meet Space","kind":"overview","type":"topic"},"https://www.swift.org/install/macos/":{"identifier":"https:\/\/www.swift.org\/install\/macos\/","titleInlineContent":[{"type":"text","text":"the official Swift website"}],"type":"link","title":"the official Swift website","url":"https:\/\/www.swift.org\/install\/macos\/"},"InstallingToolsSection1Step2.png":{"type":"image","alt":"Output of `clang --version`.","identifier":"InstallingToolsSection1Step2.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step2.png","traits":["1x","light"]}]},"doc://Space/tutorials/Space/GetInfo#Accessing-Transaction-Context-Data":{"url":"\/tutorials\/space\/getinfo#Accessing-Transaction-Context-Data","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Transaction-Context-Data","type":"section","title":"Accessing Transaction Context Data","abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}]},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges":{"type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"url":"\/tutorials\/space\/familiarizewithtypes#Handling-Heap-Allocation-Challenges","title":"Handling Heap Allocation Challenges","kind":"section","role":"pseudoSymbol"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Working-with-the-BigUint-Type":{"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-BigUint-Type","role":"pseudoSymbol","url":"\/tutorials\/space\/familiarizewithtypes#Working-with-the-BigUint-Type","title":"Working with the BigUint Type","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"kind":"section","type":"section"},"doc://Space/tutorials/Space/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract":{"type":"section","title":"Initializing and Compiling Your First Smart Contract","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract","kind":"section","abstract":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}],"role":"pseudoSymbol","url":"\/tutorials\/space\/installingtools#Initializing-and-Compiling-Your-First-Smart-Contract"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Working-with-the-Vector-Type":{"abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"kind":"section","title":"Working with the Vector Type","role":"pseudoSymbol","url":"\/tutorials\/space\/familiarizewithtypes#Working-with-the-Vector-Type","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-Vector-Type","type":"section"},"doc://Space/tutorials/Space/InstallingTools":{"type":"topic","title":"Install the Necessary Tools","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","kind":"project","abstract":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}],"role":"project","url":"\/tutorials\/space\/installingtools","estimatedTime":"10min"},"InstallingToolsSection1Step3.png":{"type":"image","alt":"Output of `swift --version`.","identifier":"InstallingToolsSection1Step3.png","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection1Step3.png"}]},"InstallingToolsSection3Step4.png":{"type":"image","alt":"Output of `space contract build`.","identifier":"InstallingToolsSection3Step4.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection3Step4.png","traits":["1x","light"]}]},"doc://Space/tutorials/Space/SyncCalls#Perform-a-Synchronous-Call":{"type":"section","title":"Perform a Synchronous Call","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Perform-a-Synchronous-Call","kind":"section","abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"role":"pseudoSymbol","url":"\/tutorials\/space\/synccalls#Perform-a-Synchronous-Call"},"doc://Space/tutorials/Space/InstallingTools#Setting-Up-the-Space-CLI":{"type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"url":"\/tutorials\/space\/installingtools#Setting-Up-the-Space-CLI","title":"Setting Up the Space CLI","kind":"section","role":"pseudoSymbol"},"doc://Space/tutorials/Space/CodingYourFirstContract#Writing-the-Contract-Code":{"title":"Writing the Contract Code","kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code","type":"section","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"role":"pseudoSymbol","url":"\/tutorials\/space\/codingyourfirstcontract#Writing-the-Contract-Code"},"doc://Space/tutorials/Space/StoreValues":{"role":"project","url":"\/tutorials\/space\/storevalues","estimatedTime":"15min","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues","title":"Persist Values Between Executions","kind":"project","type":"topic"},"doc://Space/tutorials/Space/CodingYourFirstContract#Testing-the-Contract":{"type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"url":"\/tutorials\/space\/codingyourfirstcontract#Testing-the-Contract","title":"Testing the Contract","kind":"section","role":"pseudoSymbol"},"InstallingToolsSection2Step2.png":{"identifier":"InstallingToolsSection2Step2.png","alt":"Output of `space --help`.","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection2Step2.png"}],"type":"image"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Interact-with-Other-Contracts":{"type":"topic","title":"Interact with Other Contracts","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Interact-with-Other-Contracts","kind":"article","abstract":[],"role":"article","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/interact-with-other-contracts"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Creating-Your-Own-Types":{"type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Creating-Your-Own-Types","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"url":"\/tutorials\/space\/familiarizewithtypes#Creating-Your-Own-Types","title":"Creating Your Own Types","kind":"section","role":"pseudoSymbol"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Exploring-Space's-Types":{"title":"Exploring Space's Types","kind":"article","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Exploring-Space's-Types","type":"topic","abstract":[],"role":"article","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/exploring-space's-types"},"doc://Space/tutorials/Space/CodingYourFirstContract":{"type":"topic","title":"Building Your First Smart Contract","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","kind":"project","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"role":"project","url":"\/tutorials\/space\/codingyourfirstcontract","estimatedTime":"20min"},"InstallingToolsSection3Step3.png":{"identifier":"InstallingToolsSection3Step3.png","alt":"Command output after navigating to the directory.","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection3Step3.png"}],"type":"image"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Retrieving-Information-from-the-Blockchain":{"type":"topic","title":"Retrieving Information from the Blockchain","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Retrieving-Information-from-the-Blockchain","kind":"article","abstract":[],"role":"article","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/retrieving-information-from-the-blockchain"},"doc://Space/tutorials/Space/SyncCalls":{"title":"Interact with Other Contracts","kind":"project","estimatedTime":"15min","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls","type":"topic","abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}],"role":"project","url":"\/tutorials\/space\/synccalls"}}}