{"sections":[{"estimatedTimeInMinutes":10,"title":"Install the Necessary Tools","chapter":"Installing the Tools","content":[{"inlineContent":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}],"type":"paragraph"}],"kind":"hero"},{"kind":"tasks","tasks":[{"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"Space relies on several dependencies, which you need to install on your system.","type":"text"}]}]}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open a terminal to begin."}]}],"runtimePreview":null,"type":"step","caption":[],"media":"InstallingToolsSection1Step1.png"},{"content":[{"inlineContent":[{"type":"text","text":"Check the Swift version by running "},{"type":"codeVoice","code":"swift --version"},{"text":". Space requires Swift 6 or later.","type":"text"}],"type":"paragraph"}],"caption":[{"inlineContent":[{"type":"text","text":"If necessary, install or update Swift by following the instructions on "},{"identifier":"https:\/\/www.swift.org\/install\/macos\/","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"runtimePreview":null,"type":"step","media":"InstallingToolsSection1Step2.png","code":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure "},{"type":"codeVoice","code":"git"},{"text":" is installed. The Space CLI requires it to retrieve important files.","type":"text"}]}],"media":"InstallingToolsSection1Step3.png","caption":[{"inlineContent":[{"text":"If ","type":"text"},{"code":"git","type":"codeVoice"},{"type":"text","text":" is not installed, use your preferred method to install it."}],"type":"paragraph"}],"runtimePreview":null,"type":"step"},{"caption":[{"type":"paragraph","inlineContent":[{"text":"If Docker is not installed, you can download and install it by following the steps on ","type":"text"},{"isActive":true,"identifier":"https:\/\/docs.docker.com\/get-started\/get-docker\/","type":"reference"},{"type":"text","text":"."}]}],"media":"InstallingToolsSection1Step4.png","runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Ensure that Docker is installed and running. Docker is required by the Space CLI to compile smart contracts."}],"type":"paragraph"}],"code":null,"type":"step"}],"anchor":"Installing-Spaces-Dependencies","title":"Installing Space's Dependencies"},{"stepsSection":[{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open a terminal."}]}],"code":null,"caption":[],"media":"InstallingToolsSection1Step1.png","runtimePreview":null},{"type":"step","caption":[],"runtimePreview":null,"media":null,"content":[{"inlineContent":[{"text":"Run the installation command: ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"TODO: the space-cli repo is private at the moment, please run the install.sh script to install the CLI"}]},{"text":".","type":"text"}],"type":"paragraph"}],"code":null},{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Verify the Space CLI installation by running ","type":"text"},{"type":"codeVoice","code":"space --help"},{"text":".","type":"text"}]}],"type":"step","media":"InstallingToolsSection2Step2.png","code":null,"runtimePreview":null}],"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Space CLI is your primary tool for using the Space framework. You’ll use it to initialize and compile your smart contracts."}]}]}],"title":"Setting Up the Space CLI","anchor":"Setting-Up-the-Space-CLI"},{"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"text":"Now, use the Space CLI to create and compile your first smart contract project.","type":"text"}]}]}],"title":"Initializing and Compiling Your First Smart Contract","anchor":"Initializing-and-Compiling-Your-First-Smart-Contract","stepsSection":[{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open a terminal."}]}],"code":null,"runtimePreview":null,"media":"InstallingToolsSection1Step1.png","caption":[]},{"type":"step","caption":[{"inlineContent":[{"text":"This command creates a new project directory named ","type":"text"},{"code":"MyFirstSpaceProject","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"code":null,"runtimePreview":null,"media":"InstallingToolsSection3Step2.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the desired directory and run "},{"type":"codeVoice","code":"space init MyFirstSpaceProject"},{"text":".","type":"text"}]}]},{"type":"step","caption":[],"content":[{"inlineContent":[{"text":"Navigate to the newly created ","type":"text"},{"type":"codeVoice","code":"MyFirstSpaceProject"},{"type":"text","text":" directory."}],"type":"paragraph"}],"code":null,"runtimePreview":null,"media":"InstallingToolsSection3Step3.png"},{"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build the smart contract by running "},{"type":"codeVoice","code":"space contract build"},{"text":".","type":"text"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Look for the “WASM output:” line, which indicates a successful compilation. The "},{"code":".wasm","type":"codeVoice"},{"type":"text","text":" file is your compiled contract."}]}],"media":"InstallingToolsSection3Step4.png","code":null}]}]},{"kind":"callToAction","featuredEyebrow":"Tutorial","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"action":{"isActive":true,"type":"reference","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}]},"title":"Building Your First Smart Contract"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Space\/tutorials\/Space","doc:\/\/Space\/tutorials\/Space\/Getting-Started","doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools"]],"modules":[{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies"},{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract","kind":"task"}],"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools"}],"reference":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools"},{"reference":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract","projects":[{"sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract"}],"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract"}]},{"projects":[{"sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-BigUint-Type"},{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-Vector-Type","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Creating-Your-Own-Types"}],"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes"}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Exploring-Space's-Types"},{"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Persisting-Data-Across-Executions","projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues","sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Working-with-Storage-for-Single-Value-Persistence"},{"reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","kind":"task"}]}]},{"projects":[{"sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Transaction-Context-Data","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Blockchain-Context-Data"}],"reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo"}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Retrieving-Information-from-the-Blockchain"},{"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Interact-with-Other-Contracts","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Declare-the-Callee-Proxy"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Perform-a-Synchronous-Call"}],"reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls"}]}],"reference":"doc:\/\/Space\/tutorials\/Space"},"kind":"project","identifier":{"url":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","interfaceLanguage":"swift"},"metadata":{"category":"Space","title":"Install the Necessary Tools","categoryPathComponent":"Space","role":"project"},"variants":[{"paths":["\/tutorials\/space\/installingtools"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"InstallingToolsSection1Step1.png":{"alt":"An empty terminal window.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection1Step1.png"}],"identifier":"InstallingToolsSection1Step1.png"},"doc://Space/tutorials/Space/InstallingTools#Setting-Up-the-Space-CLI":{"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI","kind":"section","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"url":"\/tutorials\/space\/installingtools#Setting-Up-the-Space-CLI","type":"section","role":"pseudoSymbol","title":"Setting Up the Space CLI"},"doc://Space/tutorials/Space/Getting-Started/Installing-the-Tools":{"kind":"article","abstract":[],"role":"article","title":"Installing the Tools","type":"topic","url":"\/tutorials\/space\/getting-started\/installing-the-tools","identifier":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools"},"doc://Space/tutorials/Space/FamiliarizeWithTypes":{"kind":"project","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"role":"project","title":"Exploring Space's Types","type":"topic","url":"\/tutorials\/space\/familiarizewithtypes","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes","estimatedTime":"20min"},"InstallingToolsSection2Step2.png":{"alt":"Output of `space --help`.","type":"image","variants":[{"url":"\/images\/Space\/InstallingToolsSection2Step2.png","traits":["1x","light"]}],"identifier":"InstallingToolsSection2Step2.png"},"doc://Space/tutorials/Space/SyncCalls#Perform-a-Synchronous-Call":{"identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Perform-a-Synchronous-Call","kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"title":"Perform a Synchronous Call","url":"\/tutorials\/space\/synccalls#Perform-a-Synchronous-Call"},"doc://Space/tutorials/Space/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract":{"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract","kind":"section","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"url":"\/tutorials\/space\/installingtools#Initializing-and-Compiling-Your-First-Smart-Contract","type":"section","role":"pseudoSymbol","title":"Initializing and Compiling Your First Smart Contract"},"InstallingToolsSection1Step3.png":{"alt":"Output of `git --version`.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection1Step3.png"}],"identifier":"InstallingToolsSection1Step3.png"},"InstallingToolsSection3Step3.png":{"alt":"Command output after navigating to the directory.","type":"image","variants":[{"url":"\/images\/Space\/InstallingToolsSection3Step3.png","traits":["1x","light"]}],"identifier":"InstallingToolsSection3Step3.png"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Working-with-the-BigUint-Type":{"url":"\/tutorials\/space\/familiarizewithtypes#Working-with-the-BigUint-Type","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-BigUint-Type","type":"section","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"title":"Working with the BigUint Type","kind":"section","role":"pseudoSymbol"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Understanding-the-Buffer-Type":{"role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","kind":"section","type":"section","title":"Understanding the Buffer Type","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"url":"\/tutorials\/space\/familiarizewithtypes#Understanding-the-Buffer-Type"},"doc://Space/tutorials/Space/CodingYourFirstContract":{"kind":"project","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"role":"project","title":"Building Your First Smart Contract","url":"\/tutorials\/space\/codingyourfirstcontract","type":"topic","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","estimatedTime":"20min"},"doc://Space/tutorials/Space/CodingYourFirstContract#Initializing-the-Project":{"kind":"section","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"role":"pseudoSymbol","title":"Initializing the Project","type":"section","url":"\/tutorials\/space\/codingyourfirstcontract#Initializing-the-Project","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Interact-with-Other-Contracts":{"identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Interact-with-Other-Contracts","kind":"article","abstract":[],"url":"\/tutorials\/space\/deep-dive-into-space-concepts\/interact-with-other-contracts","type":"topic","role":"article","title":"Interact with Other Contracts"},"doc://Space/tutorials/Space/CodingYourFirstContract#Writing-the-Contract-Code":{"identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code","kind":"section","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"url":"\/tutorials\/space\/codingyourfirstcontract#Writing-the-Contract-Code","type":"section","role":"pseudoSymbol","title":"Writing the Contract Code"},"InstallingToolsSection3Step4.png":{"alt":"Output of `space contract build`.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection3Step4.png"}],"identifier":"InstallingToolsSection3Step4.png"},"InstallingToolsSection1Step2.png":{"alt":"Output of `swift --version`.","type":"image","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step2.png","traits":["1x","light"]}],"identifier":"InstallingToolsSection1Step2.png"},"https://docs.docker.com/get-started/get-docker/":{"type":"link","title":"Docker’s official site","identifier":"https:\/\/docs.docker.com\/get-started\/get-docker\/","titleInlineContent":[{"text":"Docker’s official site","type":"text"}],"url":"https:\/\/docs.docker.com\/get-started\/get-docker\/"},"doc://Space/tutorials/Space/GetInfo":{"title":"Retrieving Information from the Blockchain","role":"project","estimatedTime":"10min","abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"url":"\/tutorials\/space\/getinfo","kind":"project","type":"topic","identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo"},"https://www.swift.org/install/macos/":{"type":"link","title":"the official Swift website","identifier":"https:\/\/www.swift.org\/install\/macos\/","titleInlineContent":[{"type":"text","text":"the official Swift website"}],"url":"https:\/\/www.swift.org\/install\/macos\/"},"doc://Space/tutorials/Space/InstallingTools#Installing-Spaces-Dependencies":{"url":"\/tutorials\/space\/installingtools#Installing-Spaces-Dependencies","kind":"section","title":"Installing Space's Dependencies","type":"section","role":"pseudoSymbol","abstract":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies"},"doc://Space/tutorials/Space/InstallingTools":{"title":"Install the Necessary Tools","role":"project","type":"topic","estimatedTime":"10min","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","abstract":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}],"url":"\/tutorials\/space\/installingtools","kind":"project"},"doc://Space/tutorials/Space/StoreValues#Working-with-Storage-for-Single-Value-Persistence":{"role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Working-with-Storage-for-Single-Value-Persistence","title":"Working with @Storage for Single Value Persistence","kind":"section","url":"\/tutorials\/space\/storevalues#Working-with-Storage-for-Single-Value-Persistence","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"type":"section"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Working-with-the-Vector-Type":{"kind":"section","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"role":"pseudoSymbol","title":"Working with the Vector Type","type":"section","url":"\/tutorials\/space\/familiarizewithtypes#Working-with-the-Vector-Type","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-Vector-Type"},"doc://Space/tutorials/Space/SyncCalls#Declare-the-Callee-Proxy":{"identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Declare-the-Callee-Proxy","kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"title":"Declare the Callee Proxy","url":"\/tutorials\/space\/synccalls#Declare-the-Callee-Proxy"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Creating-Your-Own-Types":{"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Creating-Your-Own-Types","kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"title":"Creating Your Own Types","url":"\/tutorials\/space\/familiarizewithtypes#Creating-Your-Own-Types"},"doc://Space/tutorials/Space/GetInfo#Accessing-Blockchain-Context-Data":{"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Blockchain-Context-Data","kind":"section","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}],"url":"\/tutorials\/space\/getinfo#Accessing-Blockchain-Context-Data","type":"section","role":"pseudoSymbol","title":"Accessing Blockchain Context Data"},"doc://Space/tutorials/Space/StoreValues":{"title":"Persist Values Between Executions","role":"project","estimatedTime":"15min","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"url":"\/tutorials\/space\/storevalues","kind":"project","type":"topic","identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues"},"doc://Space/tutorials/Space/GetInfo#Accessing-Transaction-Context-Data":{"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Transaction-Context-Data","kind":"section","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}],"url":"\/tutorials\/space\/getinfo#Accessing-Transaction-Context-Data","type":"section","role":"pseudoSymbol","title":"Accessing Transaction Context Data"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Retrieving-Information-from-the-Blockchain":{"title":"Retrieving Information from the Blockchain","role":"article","abstract":[],"url":"\/tutorials\/space\/deep-dive-into-space-concepts\/retrieving-information-from-the-blockchain","kind":"article","type":"topic","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Retrieving-Information-from-the-Blockchain"},"InstallingToolsSection3Step2.png":{"alt":"Output of `space init MyFirstSpaceProject`.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection3Step2.png"}],"identifier":"InstallingToolsSection3Step2.png"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Exploring-Space's-Types":{"url":"\/tutorials\/space\/deep-dive-into-space-concepts\/exploring-space's-types","kind":"article","title":"Exploring Space's Types","type":"topic","role":"article","abstract":[],"identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Exploring-Space's-Types"},"doc://Space/tutorials/Space/Getting-Started/Building-Your-First-Smart-Contract":{"kind":"article","abstract":[],"role":"article","title":"Building Your First Smart Contract","type":"topic","url":"\/tutorials\/space\/getting-started\/building-your-first-smart-contract","identifier":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Persisting-Data-Across-Executions":{"identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Persisting-Data-Across-Executions","kind":"article","abstract":[],"url":"\/tutorials\/space\/deep-dive-into-space-concepts\/persisting-data-across-executions","type":"topic","role":"article","title":"Persisting Data Across Executions"},"doc://Space/tutorials/Space/SyncCalls":{"title":"Interact with Other Contracts","role":"project","type":"topic","estimatedTime":"15min","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls","abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"url":"\/tutorials\/space\/synccalls","kind":"project"},"doc://Space/tutorials/Space/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage":{"url":"\/tutorials\/space\/storevalues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","kind":"section","title":"Leveraging @Mapping for Dynamic Key-Value Storage","type":"section","role":"pseudoSymbol","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage"},"doc://Space/tutorials/Space":{"kind":"overview","abstract":[{"type":"text","text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency."}],"role":"overview","title":"Meet Space","url":"\/tutorials\/space","type":"topic","identifier":"doc:\/\/Space\/tutorials\/Space"},"doc://Space/tutorials/Space/CodingYourFirstContract#Testing-the-Contract":{"role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract","kind":"section","type":"section","title":"Testing the Contract","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"url":"\/tutorials\/space\/codingyourfirstcontract#Testing-the-Contract"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges":{"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges","kind":"section","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"url":"\/tutorials\/space\/familiarizewithtypes#Handling-Heap-Allocation-Challenges","type":"section","role":"pseudoSymbol","title":"Handling Heap Allocation Challenges"},"InstallingToolsSection1Step4.png":{"alt":"Terminal output showing Docker is running.","type":"image","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step4.png","traits":["1x","light"]}],"identifier":"InstallingToolsSection1Step4.png"}}}