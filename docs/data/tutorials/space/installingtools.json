{"hierarchy":{"reference":"doc:\/\/Space\/tutorials\/Space","modules":[{"projects":[{"sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI"},{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract","kind":"task"}],"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools"}],"reference":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools"},{"projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract"}]}],"reference":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract"},{"projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes","sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges"},{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-BigUint-Type"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-Vector-Type"},{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Creating-Your-Own-Types","kind":"task"}]}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Exploring-Space's-Types"},{"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Persisting-Data-Across-Executions","projects":[{"sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Working-with-Storage-for-Single-Value-Persistence","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","kind":"task"}],"reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues"}]},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Transaction-Context-Data"},{"reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Blockchain-Context-Data","kind":"task"}],"reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo"}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Retrieving-Information-from-the-Blockchain"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Declare-the-Callee-Proxy"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Perform-a-Synchronous-Call"}],"reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls"}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Interacting-with-Other-Contracts"},{"projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls","sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls#Declare-the-Callee-Proxy"},{"reference":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls#Perform-an-Asynchronous-Call","kind":"task"}]}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Calling-Contracts-Across-Shards"}],"paths":[["doc:\/\/Space\/tutorials\/Space","doc:\/\/Space\/tutorials\/Space\/Getting-Started","doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Space\/tutorials\/Space\/InstallingTools"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/space\/installingtools"]}],"sections":[{"title":"Install the Necessary Tools","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}]}],"chapter":"Installing the Tools","kind":"hero","estimatedTimeInMinutes":10},{"kind":"tasks","tasks":[{"stepsSection":[{"media":"InstallingToolsSection1Step1.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open a terminal to begin."}]}],"caption":[],"code":null,"runtimePreview":null,"type":"step"},{"runtimePreview":null,"code":null,"content":[{"inlineContent":[{"type":"text","text":"Check the Swift version by running "},{"code":"swift --version","type":"codeVoice"},{"type":"text","text":". Space requires Swift 6 or later."}],"type":"paragraph"}],"media":"InstallingToolsSection1Step2.png","type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If necessary, install or update Swift by following the instructions on "},{"type":"reference","identifier":"https:\/\/www.swift.org\/install\/macos\/","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure "},{"code":"git","type":"codeVoice"},{"type":"text","text":" is installed. The Space CLI requires it to retrieve important files."}]}],"runtimePreview":null,"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"git","type":"codeVoice"},{"text":" is not installed, use your preferred method to install it.","type":"text"}]}],"media":"InstallingToolsSection1Step3.png","code":null},{"content":[{"inlineContent":[{"text":"Ensure that Docker is installed and running. Docker is required by the Space CLI to compile smart contracts.","type":"text"}],"type":"paragraph"}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"text":"If Docker is not installed, you can download and install it by following the steps on ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/docs.docker.com\/get-started\/get-docker\/"},{"type":"text","text":"."}]}],"runtimePreview":null,"media":"InstallingToolsSection1Step4.png","code":null}],"anchor":"Installing-Spaces-Dependencies","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"Space relies on several dependencies, which you need to install on your system."}],"type":"paragraph"}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"title":"Installing Space's Dependencies"},{"contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Space CLI is your primary tool for using the Space framework. You’ll use it to initialize and compile your smart contracts."}]}],"kind":"contentAndMedia"}],"anchor":"Setting-Up-the-Space-CLI","title":"Setting Up the Space CLI","stepsSection":[{"content":[{"inlineContent":[{"type":"text","text":"Open a terminal."}],"type":"paragraph"}],"caption":[],"media":"InstallingToolsSection1Step1.png","code":null,"runtimePreview":null,"type":"step"},{"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After the installation, please restart your terminal to reload your PATH environment variable."}]}],"content":[{"inlineContent":[{"text":"Run the installation command: ","type":"text"},{"type":"codeVoice","code":"curl -sSL https:\/\/raw.githubusercontent.com\/gfusee\/space-cli\/refs\/heads\/main\/install.sh | bash"}],"type":"paragraph"}],"type":"step","media":"InstallingToolsSection2Step2.png","code":null,"runtimePreview":null},{"type":"step","caption":[],"media":"InstallingToolsSection2Step3.png","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Verify the Space CLI installation by running "},{"type":"codeVoice","code":"space --help"},{"text":".","type":"text"}]}],"code":null}]},{"title":"Initializing and Compiling Your First Smart Contract","stepsSection":[{"caption":[],"code":null,"media":"InstallingToolsSection1Step1.png","type":"step","content":[{"inlineContent":[{"text":"Open a terminal.","type":"text"}],"type":"paragraph"}],"runtimePreview":null},{"caption":[{"inlineContent":[{"type":"text","text":"This command creates a new project directory named "},{"type":"codeVoice","code":"MyFirstSpaceProject"},{"type":"text","text":"."}],"type":"paragraph"}],"media":"InstallingToolsSection3Step2.png","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the desired directory and run "},{"code":"space init MyFirstSpaceProject","type":"codeVoice"},{"text":".","type":"text"}]}],"code":null,"runtimePreview":null},{"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the newly created "},{"type":"codeVoice","code":"MyFirstSpaceProject"},{"type":"text","text":" directory."}]}],"code":null,"caption":[],"media":"InstallingToolsSection3Step3.png"},{"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Build the smart contract by running "},{"type":"codeVoice","code":"space contract build"},{"text":".","type":"text"}],"type":"paragraph"}],"media":"InstallingToolsSection3Step4.png","caption":[{"type":"paragraph","inlineContent":[{"text":"Look for the “WASM output:” line, which indicates a successful compilation. The ","type":"text"},{"code":".wasm","type":"codeVoice"},{"type":"text","text":" file is your compiled contract."}]}],"code":null,"type":"step"}],"anchor":"Initializing-and-Compiling-Your-First-Smart-Contract","contentSection":[{"kind":"contentAndMedia","content":[{"inlineContent":[{"text":"Now, use the Space CLI to create and compile your first smart contract project.","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing"}]}]},{"title":"Building Your First Smart Contract","kind":"callToAction","action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","overridingTitle":"Get started","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract"},"abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"featuredEyebrow":"Tutorial"}],"kind":"project","metadata":{"title":"Install the Necessary Tools","role":"project","categoryPathComponent":"Space","category":"Space"},"references":{"doc://Space/tutorials/Space/GetInfo":{"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}],"estimatedTime":"10min","url":"\/tutorials\/space\/getinfo","role":"project","type":"topic","kind":"project","title":"Retrieving Information from the Blockchain"},"doc://Space/tutorials/Space/StoreValues":{"title":"Persist Values Between Executions","role":"project","url":"\/tutorials\/space\/storevalues","kind":"project","type":"topic","abstract":[{"type":"text","text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory."}],"identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues","estimatedTime":"15min"},"doc://Space/tutorials/Space/StoreValues#Working-with-Storage-for-Single-Value-Persistence":{"identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Working-with-Storage-for-Single-Value-Persistence","kind":"section","type":"section","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"role":"pseudoSymbol","url":"\/tutorials\/space\/storevalues#Working-with-Storage-for-Single-Value-Persistence","title":"Working with @Storage for Single Value Persistence"},"InstallingToolsSection2Step2.png":{"alt":"Output of `space --help`.","identifier":"InstallingToolsSection2Step2.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection2Step2.png"}]},"doc://Space/tutorials/Space/Getting-Started/Installing-the-Tools":{"identifier":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools","type":"topic","kind":"article","abstract":[],"role":"article","url":"\/tutorials\/space\/getting-started\/installing-the-tools","title":"Installing the Tools"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Exploring-Space's-Types":{"url":"\/tutorials\/space\/deep-dive-into-space-concepts\/exploring-space's-types","type":"topic","abstract":[],"title":"Exploring Space's Types","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Exploring-Space's-Types","kind":"article","role":"article"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Understanding-the-Buffer-Type":{"title":"Understanding the Buffer Type","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","type":"section","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"role":"pseudoSymbol","kind":"section","url":"\/tutorials\/space\/familiarizewithtypes#Understanding-the-Buffer-Type"},"InstallingToolsSection1Step4.png":{"type":"image","identifier":"InstallingToolsSection1Step4.png","alt":"Terminal output showing Docker is running.","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step4.png","traits":["1x","light"]}]},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Persisting-Data-Across-Executions":{"role":"article","title":"Persisting Data Across Executions","abstract":[],"kind":"article","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/persisting-data-across-executions","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Persisting-Data-Across-Executions","type":"topic"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Interacting-with-Other-Contracts":{"kind":"article","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/interacting-with-other-contracts","abstract":[],"role":"article","title":"Interacting with Other Contracts","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Interacting-with-Other-Contracts","type":"topic"},"InstallingToolsSection1Step1.png":{"alt":"An empty terminal window.","identifier":"InstallingToolsSection1Step1.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection1Step1.png"}]},"doc://Space/tutorials/Space/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract":{"url":"\/tutorials\/space\/installingtools#Initializing-and-Compiling-Your-First-Smart-Contract","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"title":"Initializing and Compiling Your First Smart Contract","role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract","type":"section","kind":"section"},"https://docs.docker.com/get-started/get-docker/":{"url":"https:\/\/docs.docker.com\/get-started\/get-docker\/","type":"link","identifier":"https:\/\/docs.docker.com\/get-started\/get-docker\/","title":"Docker’s official site","titleInlineContent":[{"type":"text","text":"Docker’s official site"}]},"doc://Space/tutorials/Space/Getting-Started/Building-Your-First-Smart-Contract":{"role":"article","title":"Building Your First Smart Contract","identifier":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract","kind":"article","type":"topic","url":"\/tutorials\/space\/getting-started\/building-your-first-smart-contract","abstract":[]},"doc://Space/tutorials/Space/CodingYourFirstContract#Testing-the-Contract":{"url":"\/tutorials\/space\/codingyourfirstcontract#Testing-the-Contract","type":"section","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"title":"Testing the Contract","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract","kind":"section","role":"pseudoSymbol"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Working-with-the-BigUint-Type":{"role":"pseudoSymbol","title":"Working with the BigUint Type","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"kind":"section","url":"\/tutorials\/space\/familiarizewithtypes#Working-with-the-BigUint-Type","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-BigUint-Type","type":"section"},"doc://Space/tutorials/Space/CodingYourFirstContract#Initializing-the-Project":{"title":"Initializing the Project","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project","type":"section","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"role":"pseudoSymbol","kind":"section","url":"\/tutorials\/space\/codingyourfirstcontract#Initializing-the-Project"},"doc://Space/tutorials/Space/CodingYourFirstContract#Writing-the-Contract-Code":{"title":"Writing the Contract Code","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code","type":"section","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"role":"pseudoSymbol","kind":"section","url":"\/tutorials\/space\/codingyourfirstcontract#Writing-the-Contract-Code"},"doc://Space/tutorials/Space/GetInfo#Accessing-Transaction-Context-Data":{"title":"Accessing Transaction Context Data","identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Transaction-Context-Data","url":"\/tutorials\/space\/getinfo#Accessing-Transaction-Context-Data","type":"section","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}],"kind":"section","role":"pseudoSymbol"},"doc://Space/tutorials/Space/SyncCalls":{"abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}],"url":"\/tutorials\/space\/synccalls","title":"Interact with Other Contracts","role":"project","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls","type":"topic","estimatedTime":"15min","kind":"project"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Working-with-the-Vector-Type":{"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-Vector-Type","title":"Working with the Vector Type","kind":"section","url":"\/tutorials\/space\/familiarizewithtypes#Working-with-the-Vector-Type","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"role":"pseudoSymbol","type":"section"},"doc://Space/tutorials/Space/SyncCalls#Declare-the-Callee-Proxy":{"abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Declare-the-Callee-Proxy","title":"Declare the Callee Proxy","url":"\/tutorials\/space\/synccalls#Declare-the-Callee-Proxy","role":"pseudoSymbol","kind":"section"},"InstallingToolsSection2Step3.png":{"alt":"Output of `space --help`.","identifier":"InstallingToolsSection2Step3.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection2Step3.png"}]},"doc://Space/tutorials/Space/AsyncCalls#Perform-an-Asynchronous-Call":{"url":"\/tutorials\/space\/asynccalls#Perform-an-Asynchronous-Call","type":"section","abstract":[{"text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources.","type":"text"}],"title":"Perform an Asynchronous Call","identifier":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls#Perform-an-Asynchronous-Call","kind":"section","role":"pseudoSymbol"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Retrieving-Information-from-the-Blockchain":{"kind":"article","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Retrieving-Information-from-the-Blockchain","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/retrieving-information-from-the-blockchain","title":"Retrieving Information from the Blockchain","type":"topic","role":"article","abstract":[]},"doc://Space/tutorials/Space/InstallingTools":{"title":"Install the Necessary Tools","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","type":"topic","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"role":"project","kind":"project","estimatedTime":"10min","url":"\/tutorials\/space\/installingtools"},"doc://Space/tutorials/Space/GetInfo#Accessing-Blockchain-Context-Data":{"url":"\/tutorials\/space\/getinfo#Accessing-Blockchain-Context-Data","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}],"title":"Accessing Blockchain Context Data","role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Blockchain-Context-Data","type":"section","kind":"section"},"doc://Space/tutorials/Space/InstallingTools#Installing-Spaces-Dependencies":{"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies","kind":"section","type":"section","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"role":"pseudoSymbol","url":"\/tutorials\/space\/installingtools#Installing-Spaces-Dependencies","title":"Installing Space's Dependencies"},"doc://Space/tutorials/Space/CodingYourFirstContract":{"title":"Building Your First Smart Contract","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","url":"\/tutorials\/space\/codingyourfirstcontract","type":"topic","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"kind":"project","role":"project","estimatedTime":"20min"},"InstallingToolsSection3Step2.png":{"type":"image","identifier":"InstallingToolsSection3Step2.png","alt":"Output of `space init MyFirstSpaceProject`.","variants":[{"url":"\/images\/Space\/InstallingToolsSection3Step2.png","traits":["1x","light"]}]},"doc://Space/tutorials/Space/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory."}],"type":"section","title":"Leveraging @Mapping for Dynamic Key-Value Storage","kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","url":"\/tutorials\/space\/storevalues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage"},"doc://Space/tutorials/Space/InstallingTools#Setting-Up-the-Space-CLI":{"url":"\/tutorials\/space\/installingtools#Setting-Up-the-Space-CLI","type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI","abstract":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}],"title":"Setting Up the Space CLI","role":"pseudoSymbol","kind":"section"},"doc://Space/tutorials/Space/AsyncCalls#Declare-the-Callee-Proxy":{"abstract":[{"type":"text","text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources."}],"url":"\/tutorials\/space\/asynccalls#Declare-the-Callee-Proxy","title":"Declare the Callee Proxy","role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls#Declare-the-Callee-Proxy","type":"section","kind":"section"},"doc://Space/tutorials/Space/SyncCalls#Perform-a-Synchronous-Call":{"abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Perform-a-Synchronous-Call","title":"Perform a Synchronous Call","url":"\/tutorials\/space\/synccalls#Perform-a-Synchronous-Call","role":"pseudoSymbol","kind":"section"},"InstallingToolsSection3Step3.png":{"alt":"Command output after navigating to the directory.","identifier":"InstallingToolsSection3Step3.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection3Step3.png"}]},"InstallingToolsSection1Step2.png":{"type":"image","identifier":"InstallingToolsSection1Step2.png","alt":"Output of `swift --version`.","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step2.png","traits":["1x","light"]}]},"InstallingToolsSection3Step4.png":{"alt":"Output of `space contract build`.","identifier":"InstallingToolsSection3Step4.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection3Step4.png"}]},"InstallingToolsSection1Step3.png":{"type":"image","identifier":"InstallingToolsSection1Step3.png","alt":"Output of `git --version`.","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step3.png","traits":["1x","light"]}]},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Calling-Contracts-Across-Shards":{"url":"\/tutorials\/space\/deep-dive-into-space-concepts\/calling-contracts-across-shards","abstract":[],"title":"Calling Contracts Across Shards","role":"article","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Calling-Contracts-Across-Shards","type":"topic","kind":"article"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Creating-Your-Own-Types":{"title":"Creating Your Own Types","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Creating-Your-Own-Types","url":"\/tutorials\/space\/familiarizewithtypes#Creating-Your-Own-Types","kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}]},"doc://Space/tutorials/Space/FamiliarizeWithTypes":{"title":"Exploring Space's Types","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes","type":"topic","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"role":"project","kind":"project","estimatedTime":"20min","url":"\/tutorials\/space\/familiarizewithtypes"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges":{"title":"Handling Heap Allocation Challenges","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges","url":"\/tutorials\/space\/familiarizewithtypes#Handling-Heap-Allocation-Challenges","kind":"section","type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}]},"doc://Space/tutorials/Space":{"role":"overview","title":"Meet Space","abstract":[{"text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency.","type":"text"}],"kind":"overview","url":"\/tutorials\/space","identifier":"doc:\/\/Space\/tutorials\/Space","type":"topic"},"https://www.swift.org/install/macos/":{"url":"https:\/\/www.swift.org\/install\/macos\/","type":"link","identifier":"https:\/\/www.swift.org\/install\/macos\/","title":"the official Swift website","titleInlineContent":[{"text":"the official Swift website","type":"text"}]},"doc://Space/tutorials/Space/AsyncCalls":{"title":"Interacting with Contracts Across Shards","identifier":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls","type":"topic","abstract":[{"type":"text","text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources."}],"role":"project","kind":"project","estimatedTime":"15min","url":"\/tutorials\/space\/asynccalls"}}}