{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"project","hierarchy":{"reference":"doc:\/\/Space\/tutorials\/Space","paths":[["doc:\/\/Space\/tutorials\/Space","doc:\/\/Space\/tutorials\/Space\/Getting-Started","doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools"]],"modules":[{"projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract"}]}],"reference":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools"},{"reference":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code"},{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract","kind":"task"}],"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract"}]},{"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Exploring-Space's-Types","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Understanding-the-Buffer-Type"},{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-BigUint-Type","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-Vector-Type","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Creating-Your-Own-Types"}],"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes"}]},{"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Persisting-Data-Across-Executions","projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues","sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Working-with-Storage-for-Single-Value-Persistence"},{"reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","kind":"task"}]}]},{"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Retrieving-Information-from-the-Blockchain","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Transaction-Context-Data"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Blockchain-Context-Data"}],"reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo"}]},{"projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls","sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Declare-the-Callee-Proxy","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Perform-a-Synchronous-Call","kind":"task"}]}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Interact-with-Other-Contracts"}]},"identifier":{"url":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","interfaceLanguage":"swift"},"variants":[{"paths":["\/tutorials\/space\/installingtools"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[{"estimatedTimeInMinutes":10,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}]}],"chapter":"Installing the Tools","kind":"hero","title":"Install the Necessary Tools"},{"kind":"tasks","tasks":[{"stepsSection":[{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open a terminal to begin."}]}],"code":null,"caption":[],"runtimePreview":null,"media":"InstallingToolsSection1Step1.png"},{"type":"step","caption":[{"inlineContent":[{"type":"text","text":"If it’s not installed, use Homebrew on macOS or apt on Debian-based systems."}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"text":"Verify that ","type":"text"},{"type":"codeVoice","code":"clang"},{"text":" is installed by running ","type":"text"},{"type":"codeVoice","code":"clang --version"},{"type":"text","text":"."}]}],"code":null,"media":"InstallingToolsSection1Step2.png","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Check the Swift version by running "},{"code":"swift --version","type":"codeVoice"},{"type":"text","text":". Space requires Swift 6 or later."}]}],"caption":[{"inlineContent":[{"text":"If necessary, install or update Swift by following the instructions on ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/www.swift.org\/install\/macos\/"},{"text":".","type":"text"}],"type":"paragraph"}],"media":"InstallingToolsSection1Step3.png","code":null,"type":"step","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"Ensure ","type":"text"},{"code":"git","type":"codeVoice"},{"type":"text","text":" is installed. The Space CLI requires it to retrieve important files."}]}],"media":"InstallingToolsSection1Step4.png","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"git","type":"codeVoice"},{"text":" is not installed, use your preferred method to install it.","type":"text"}]}],"type":"step","code":null,"runtimePreview":null}],"title":"Installing Space's Dependencies","anchor":"Installing-Spaces-Dependencies","contentSection":[{"mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"Space relies on several dependencies, which you need to install on your system."}],"type":"paragraph"}],"kind":"contentAndMedia"}]},{"contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"The Space CLI is your primary tool for using the Space framework. You’ll use it to initialize and compile your smart contracts.","type":"text"}]}],"mediaPosition":"trailing"}],"title":"Setting Up the Space CLI","stepsSection":[{"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open a terminal."}]}],"caption":[],"media":"InstallingToolsSection1Step1.png","code":null},{"caption":[],"type":"step","code":null,"media":null,"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Run the installation command: "},{"inlineContent":[{"type":"text","text":"TODO: the space-cli repo is private at the moment, please run the install.sh script to install the CLI"}],"type":"strong"},{"type":"text","text":"."}],"type":"paragraph"}]},{"media":"InstallingToolsSection2Step2.png","type":"step","code":null,"caption":[],"content":[{"inlineContent":[{"text":"Verify the Space CLI installation by running ","type":"text"},{"type":"codeVoice","code":"space --help"},{"type":"text","text":"."}],"type":"paragraph"}],"runtimePreview":null}],"anchor":"Setting-Up-the-Space-CLI"},{"contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Now, use the Space CLI to create and compile your first smart contract project.","type":"text"}]}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"anchor":"Initializing-and-Compiling-Your-First-Smart-Contract","title":"Initializing and Compiling Your First Smart Contract","stepsSection":[{"content":[{"inlineContent":[{"type":"text","text":"Open a terminal."}],"type":"paragraph"}],"code":null,"type":"step","runtimePreview":null,"caption":[],"media":"InstallingToolsSection1Step1.png"},{"code":null,"media":"InstallingToolsSection3Step2.png","content":[{"inlineContent":[{"text":"Navigate to the desired directory and run ","type":"text"},{"code":"space init MyFirstSpaceProject","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"runtimePreview":null,"type":"step","caption":[{"inlineContent":[{"type":"text","text":"This command creates a new project directory named "},{"code":"MyFirstSpaceProject","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Navigate to the newly created ","type":"text"},{"type":"codeVoice","code":"MyFirstSpaceProject"},{"type":"text","text":" directory."}]}],"type":"step","code":null,"media":"InstallingToolsSection3Step3.png","runtimePreview":null},{"media":"InstallingToolsSection3Step4.png","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Look for the “WASM output:” line, which indicates a successful compilation. The "},{"code":".wasm","type":"codeVoice"},{"text":" file is your compiled contract.","type":"text"}]}],"runtimePreview":null,"type":"step","code":null,"content":[{"inlineContent":[{"type":"text","text":"Build the smart contract by running "},{"type":"codeVoice","code":"space contract build"},{"type":"text","text":"."}],"type":"paragraph"}]}]}]},{"kind":"callToAction","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"title":"Building Your First Smart Contract","action":{"type":"reference","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","isActive":true,"overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}]},"featuredEyebrow":"Tutorial"}],"metadata":{"categoryPathComponent":"Space","role":"project","category":"Space","title":"Install the Necessary Tools"},"references":{"doc://Space/tutorials/Space/CodingYourFirstContract#Testing-the-Contract":{"abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract","title":"Testing the Contract","role":"pseudoSymbol","url":"\/tutorials\/space\/codingyourfirstcontract#Testing-the-Contract","type":"section","kind":"section"},"doc://Space/tutorials/Space/GetInfo#Accessing-Transaction-Context-Data":{"role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Transaction-Context-Data","url":"\/tutorials\/space\/getinfo#Accessing-Transaction-Context-Data","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}],"type":"section","title":"Accessing Transaction Context Data","kind":"section"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Working-with-the-BigUint-Type":{"kind":"section","title":"Working with the BigUint Type","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-BigUint-Type","url":"\/tutorials\/space\/familiarizewithtypes#Working-with-the-BigUint-Type","type":"section","role":"pseudoSymbol"},"InstallingToolsSection1Step4.png":{"identifier":"InstallingToolsSection1Step4.png","type":"image","alt":"Output of `git --version`.","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step4.png","traits":["1x","light"]}]},"doc://Space/tutorials/Space/SyncCalls#Perform-a-Synchronous-Call":{"url":"\/tutorials\/space\/synccalls#Perform-a-Synchronous-Call","kind":"section","title":"Perform a Synchronous Call","role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Perform-a-Synchronous-Call","type":"section","abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}]},"InstallingToolsSection3Step2.png":{"identifier":"InstallingToolsSection3Step2.png","alt":"Output of `space init MyFirstSpaceProject`.","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection3Step2.png"}]},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Persisting-Data-Across-Executions":{"identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Persisting-Data-Across-Executions","type":"topic","role":"article","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/persisting-data-across-executions","title":"Persisting Data Across Executions","kind":"article","abstract":[]},"doc://Space/tutorials/Space/CodingYourFirstContract":{"estimatedTime":"20min","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","type":"topic","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"title":"Building Your First Smart Contract","kind":"project","url":"\/tutorials\/space\/codingyourfirstcontract","role":"project"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Working-with-the-Vector-Type":{"url":"\/tutorials\/space\/familiarizewithtypes#Working-with-the-Vector-Type","kind":"section","title":"Working with the Vector Type","role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-Vector-Type","type":"section","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}]},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges":{"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges","role":"pseudoSymbol","title":"Handling Heap Allocation Challenges","type":"section","kind":"section","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"url":"\/tutorials\/space\/familiarizewithtypes#Handling-Heap-Allocation-Challenges"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Retrieving-Information-from-the-Blockchain":{"kind":"article","type":"topic","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Retrieving-Information-from-the-Blockchain","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/retrieving-information-from-the-blockchain","abstract":[],"role":"article","title":"Retrieving Information from the Blockchain"},"doc://Space/tutorials/Space/FamiliarizeWithTypes":{"type":"topic","estimatedTime":"20min","url":"\/tutorials\/space\/familiarizewithtypes","role":"project","kind":"project","title":"Exploring Space's Types","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes"},"doc://Space/tutorials/Space/StoreValues#Working-with-Storage-for-Single-Value-Persistence":{"type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Working-with-Storage-for-Single-Value-Persistence","role":"pseudoSymbol","url":"\/tutorials\/space\/storevalues#Working-with-Storage-for-Single-Value-Persistence","title":"Working with @Storage for Single Value Persistence","kind":"section","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}]},"doc://Space/tutorials/Space/Getting-Started/Installing-the-Tools":{"abstract":[],"identifier":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools","title":"Installing the Tools","role":"article","url":"\/tutorials\/space\/getting-started\/installing-the-tools","type":"topic","kind":"article"},"doc://Space/tutorials/Space/InstallingTools#Setting-Up-the-Space-CLI":{"type":"section","role":"pseudoSymbol","title":"Setting Up the Space CLI","url":"\/tutorials\/space\/installingtools#Setting-Up-the-Space-CLI","kind":"section","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI"},"https://www.swift.org/install/macos/":{"title":"the official Swift website","titleInlineContent":[{"text":"the official Swift website","type":"text"}],"identifier":"https:\/\/www.swift.org\/install\/macos\/","url":"https:\/\/www.swift.org\/install\/macos\/","type":"link"},"doc://Space/tutorials/Space/InstallingTools":{"abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"type":"topic","kind":"project","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","url":"\/tutorials\/space\/installingtools","title":"Install the Necessary Tools","role":"project","estimatedTime":"10min"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Exploring-Space's-Types":{"abstract":[],"identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Exploring-Space's-Types","title":"Exploring Space's Types","role":"article","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/exploring-space's-types","type":"topic","kind":"article"},"doc://Space/tutorials/Space/CodingYourFirstContract#Initializing-the-Project":{"url":"\/tutorials\/space\/codingyourfirstcontract#Initializing-the-Project","title":"Initializing the Project","role":"pseudoSymbol","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project","type":"section"},"doc://Space/tutorials/Space/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract":{"type":"section","url":"\/tutorials\/space\/installingtools#Initializing-and-Compiling-Your-First-Smart-Contract","role":"pseudoSymbol","kind":"section","title":"Initializing and Compiling Your First Smart Contract","abstract":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract"},"InstallingToolsSection2Step2.png":{"type":"image","variants":[{"url":"\/images\/Space\/InstallingToolsSection2Step2.png","traits":["1x","light"]}],"alt":"Output of `space --help`.","identifier":"InstallingToolsSection2Step2.png"},"doc://Space/tutorials/Space/GetInfo":{"type":"topic","estimatedTime":"10min","url":"\/tutorials\/space\/getinfo","role":"project","kind":"project","title":"Retrieving Information from the Blockchain","abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo"},"doc://Space/tutorials/Space/SyncCalls":{"estimatedTime":"15min","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls","role":"project","title":"Interact with Other Contracts","type":"topic","kind":"project","abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}],"url":"\/tutorials\/space\/synccalls"},"doc://Space/tutorials/Space/CodingYourFirstContract#Writing-the-Contract-Code":{"abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code","title":"Writing the Contract Code","role":"pseudoSymbol","url":"\/tutorials\/space\/codingyourfirstcontract#Writing-the-Contract-Code","type":"section","kind":"section"},"InstallingToolsSection3Step3.png":{"type":"image","variants":[{"url":"\/images\/Space\/InstallingToolsSection3Step3.png","traits":["1x","light"]}],"identifier":"InstallingToolsSection3Step3.png","alt":"Command output after navigating to the directory."},"doc://Space/tutorials/Space/Getting-Started/Building-Your-First-Smart-Contract":{"title":"Building Your First Smart Contract","url":"\/tutorials\/space\/getting-started\/building-your-first-smart-contract","abstract":[],"type":"topic","identifier":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract","kind":"article","role":"article"},"InstallingToolsSection1Step2.png":{"alt":"Output of `clang --version`.","identifier":"InstallingToolsSection1Step2.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step2.png","traits":["1x","light"]}],"type":"image"},"doc://Space/tutorials/Space":{"url":"\/tutorials\/space","title":"Meet Space","role":"overview","abstract":[{"type":"text","text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency."}],"kind":"overview","identifier":"doc:\/\/Space\/tutorials\/Space","type":"topic"},"doc://Space/tutorials/Space/StoreValues":{"type":"topic","estimatedTime":"15min","url":"\/tutorials\/space\/storevalues","role":"project","kind":"project","title":"Persist Values Between Executions","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues"},"doc://Space/tutorials/Space/SyncCalls#Declare-the-Callee-Proxy":{"url":"\/tutorials\/space\/synccalls#Declare-the-Callee-Proxy","title":"Declare the Callee Proxy","role":"pseudoSymbol","abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}],"kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Declare-the-Callee-Proxy","type":"section"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Understanding-the-Buffer-Type":{"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","type":"section","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"title":"Understanding the Buffer Type","kind":"section","url":"\/tutorials\/space\/familiarizewithtypes#Understanding-the-Buffer-Type","role":"pseudoSymbol"},"doc://Space/tutorials/Space/GetInfo#Accessing-Blockchain-Context-Data":{"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Blockchain-Context-Data","role":"pseudoSymbol","title":"Accessing Blockchain Context Data","type":"section","kind":"section","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}],"url":"\/tutorials\/space\/getinfo#Accessing-Blockchain-Context-Data"},"doc://Space/tutorials/Space/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage":{"url":"\/tutorials\/space\/storevalues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","title":"Leveraging @Mapping for Dynamic Key-Value Storage","role":"pseudoSymbol","abstract":[{"type":"text","text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory."}],"kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","type":"section"},"InstallingToolsSection1Step3.png":{"alt":"Output of `swift --version`.","identifier":"InstallingToolsSection1Step3.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step3.png","traits":["1x","light"]}],"type":"image"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Interact-with-Other-Contracts":{"identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Interact-with-Other-Contracts","role":"article","title":"Interact with Other Contracts","type":"topic","kind":"article","abstract":[],"url":"\/tutorials\/space\/deep-dive-into-space-concepts\/interact-with-other-contracts"},"doc://Space/tutorials/Space/InstallingTools#Installing-Spaces-Dependencies":{"type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies","abstract":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}],"title":"Installing Space's Dependencies","url":"\/tutorials\/space\/installingtools#Installing-Spaces-Dependencies","role":"pseudoSymbol","kind":"section"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Creating-Your-Own-Types":{"url":"\/tutorials\/space\/familiarizewithtypes#Creating-Your-Own-Types","title":"Creating Your Own Types","role":"pseudoSymbol","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Creating-Your-Own-Types","type":"section"},"InstallingToolsSection1Step1.png":{"alt":"An empty terminal window.","identifier":"InstallingToolsSection1Step1.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step1.png","traits":["1x","light"]}],"type":"image"},"InstallingToolsSection3Step4.png":{"alt":"Output of `space contract build`.","identifier":"InstallingToolsSection3Step4.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection3Step4.png","traits":["1x","light"]}],"type":"image"}}}