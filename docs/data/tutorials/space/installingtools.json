{"hierarchy":{"reference":"doc:\/\/Space\/tutorials\/Space","modules":[{"reference":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools","projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract","kind":"task"}]}]},{"reference":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract","projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project"},{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract","kind":"task"}]}]},{"projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes","sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges"},{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-BigUint-Type"},{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-Vector-Type","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Creating-Your-Own-Types"}]}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Exploring-Space's-Types"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Working-with-Storage-for-Single-Value-Persistence"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage"}],"reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues"}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Persisting-Data-Across-Executions"},{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Transaction-Context-Data"},{"reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Blockchain-Context-Data","kind":"task"}],"reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo"}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Retrieving-Information-from-the-Blockchain"},{"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Interacting-with-Other-Contracts","projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls","sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Declare-the-Callee-Proxy"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Perform-a-Synchronous-Call"}]}]},{"projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls","sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls#Declare-the-Callee-Proxy","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls#Perform-an-Asynchronous-Call","kind":"task"}]}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Calling-Contracts-Across-Shards"}],"paths":[["doc:\/\/Space\/tutorials\/Space","doc:\/\/Space\/tutorials\/Space\/Getting-Started","doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Space\/tutorials\/Space\/InstallingTools"},"kind":"project","sections":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}]}],"kind":"hero","title":"Install the Necessary Tools","chapter":"Installing the Tools","estimatedTimeInMinutes":10},{"tasks":[{"stepsSection":[{"runtimePreview":null,"code":null,"media":"InstallingToolsSection1Step1.png","caption":[],"type":"step","content":[{"inlineContent":[{"text":"Open a terminal to begin.","type":"text"}],"type":"paragraph"}]},{"caption":[{"inlineContent":[{"text":"If necessary, install or update Swift by following the instructions on ","type":"text"},{"identifier":"https:\/\/www.swift.org\/install\/macos\/","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Check the Swift version by running "},{"code":"swift --version","type":"codeVoice"},{"text":". Space requires Swift 6 or later.","type":"text"}]}],"code":null,"runtimePreview":null,"media":"InstallingToolsSection1Step2.png","type":"step"},{"type":"step","code":null,"runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"git","type":"codeVoice"},{"text":" is not installed, use your preferred method to install it.","type":"text"}]}],"media":"InstallingToolsSection1Step3.png","content":[{"inlineContent":[{"type":"text","text":"Ensure "},{"type":"codeVoice","code":"git"},{"type":"text","text":" is installed. The Space CLI requires it to retrieve important files."}],"type":"paragraph"}]},{"caption":[{"inlineContent":[{"text":"If Docker is not installed, you can download and install it by following the steps on ","type":"text"},{"identifier":"https:\/\/docs.docker.com\/get-started\/get-docker\/","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure that Docker is installed and running. Docker is required by the Space CLI to compile smart contracts."}]}],"code":null,"type":"step","runtimePreview":null,"media":"InstallingToolsSection1Step4.png"}],"title":"Installing Space's Dependencies","anchor":"Installing-Spaces-Dependencies","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Space relies on several dependencies, which you need to install on your system."}]}]}]},{"title":"Setting Up the Space CLI","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Space CLI is your primary tool for using the Space framework. You’ll use it to initialize and compile your smart contracts."}]}]}],"stepsSection":[{"code":null,"type":"step","runtimePreview":null,"caption":[],"content":[{"inlineContent":[{"type":"text","text":"Open a terminal."}],"type":"paragraph"}],"media":"InstallingToolsSection1Step1.png"},{"media":"InstallingToolsSection2Step2.png","type":"step","runtimePreview":null,"content":[{"inlineContent":[{"text":"Run the installation command: ","type":"text"},{"code":"curl -sSL https:\/\/raw.githubusercontent.com\/gfusee\/space-cli\/refs\/heads\/main\/install.sh | bash","type":"codeVoice"}],"type":"paragraph"}],"caption":[{"type":"paragraph","inlineContent":[{"text":"After the installation, please restart your terminal to reload your PATH environment variable.","type":"text"}]}],"code":null},{"code":null,"runtimePreview":null,"caption":[],"type":"step","content":[{"inlineContent":[{"type":"text","text":"Verify the Space CLI installation by running "},{"type":"codeVoice","code":"space --help"},{"text":".","type":"text"}],"type":"paragraph"}],"media":"InstallingToolsSection2Step3.png"}],"anchor":"Setting-Up-the-Space-CLI"},{"anchor":"Initializing-and-Compiling-Your-First-Smart-Contract","contentSection":[{"mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"Now, use the Space CLI to create and compile your first smart contract project."}],"type":"paragraph"}],"kind":"contentAndMedia"}],"title":"Initializing and Compiling Your First Smart Contract","stepsSection":[{"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open a terminal."}]}],"media":"InstallingToolsSection1Step1.png","type":"step","runtimePreview":null,"code":null},{"runtimePreview":null,"media":"InstallingToolsSection3Step2.png","content":[{"inlineContent":[{"type":"text","text":"Navigate to the desired directory and run "},{"type":"codeVoice","code":"space init MyFirstSpaceProject"},{"type":"text","text":"."}],"type":"paragraph"}],"caption":[{"type":"paragraph","inlineContent":[{"text":"This command creates a new project directory named ","type":"text"},{"type":"codeVoice","code":"MyFirstSpaceProject"},{"type":"text","text":"."}]}],"type":"step","code":null},{"code":null,"type":"step","runtimePreview":null,"content":[{"inlineContent":[{"text":"Navigate to the newly created ","type":"text"},{"type":"codeVoice","code":"MyFirstSpaceProject"},{"type":"text","text":" directory."}],"type":"paragraph"}],"caption":[],"media":"InstallingToolsSection3Step3.png"},{"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Look for the “WASM output:” line, which indicates a successful compilation. The "},{"code":".wasm","type":"codeVoice"},{"text":" file is your compiled contract.","type":"text"}]}],"content":[{"type":"paragraph","inlineContent":[{"text":"Build the smart contract by running ","type":"text"},{"code":"space contract build","type":"codeVoice"},{"type":"text","text":"."}]}],"type":"step","code":null,"media":"InstallingToolsSection3Step4.png","runtimePreview":null}]}],"kind":"tasks"},{"title":"Building Your First Smart Contract","featuredEyebrow":"Tutorial","kind":"callToAction","action":{"overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"isActive":true,"identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","type":"reference"},"abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}]}],"metadata":{"categoryPathComponent":"Space","category":"Space","role":"project","title":"Install the Necessary Tools"},"variants":[{"paths":["\/tutorials\/space\/installingtools"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Space/tutorials/Space/InstallingTools#Installing-Spaces-Dependencies":{"url":"\/tutorials\/space\/installingtools#Installing-Spaces-Dependencies","kind":"section","type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies","abstract":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}],"role":"pseudoSymbol","title":"Installing Space's Dependencies"},"doc://Space/tutorials/Space/SyncCalls#Declare-the-Callee-Proxy":{"url":"\/tutorials\/space\/synccalls#Declare-the-Callee-Proxy","kind":"section","type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Declare-the-Callee-Proxy","abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"role":"pseudoSymbol","title":"Declare the Callee Proxy"},"doc://Space/tutorials/Space/InstallingTools#Setting-Up-the-Space-CLI":{"role":"pseudoSymbol","title":"Setting Up the Space CLI","url":"\/tutorials\/space\/installingtools#Setting-Up-the-Space-CLI","abstract":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}],"kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI","type":"section"},"doc://Space/tutorials/Space/CodingYourFirstContract#Testing-the-Contract":{"url":"\/tutorials\/space\/codingyourfirstcontract#Testing-the-Contract","type":"section","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract","title":"Testing the Contract"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Working-with-the-BigUint-Type":{"url":"\/tutorials\/space\/familiarizewithtypes#Working-with-the-BigUint-Type","kind":"section","type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-BigUint-Type","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"role":"pseudoSymbol","title":"Working with the BigUint Type"},"InstallingToolsSection1Step3.png":{"identifier":"InstallingToolsSection1Step3.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step3.png","traits":["1x","light"]}],"type":"image","alt":"Output of `git --version`."},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Exploring-Space's-Types":{"url":"\/tutorials\/space\/deep-dive-into-space-concepts\/exploring-space's-types","kind":"article","type":"topic","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Exploring-Space's-Types","abstract":[],"role":"article","title":"Exploring Space's Types"},"doc://Space/tutorials/Space/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract":{"url":"\/tutorials\/space\/installingtools#Initializing-and-Compiling-Your-First-Smart-Contract","type":"section","kind":"section","role":"pseudoSymbol","abstract":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract","title":"Initializing and Compiling Your First Smart Contract"},"doc://Space/tutorials/Space/AsyncCalls#Perform-an-Asynchronous-Call":{"url":"\/tutorials\/space\/asynccalls#Perform-an-Asynchronous-Call","type":"section","kind":"section","role":"pseudoSymbol","abstract":[{"text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls#Perform-an-Asynchronous-Call","title":"Perform an Asynchronous Call"},"InstallingToolsSection2Step2.png":{"identifier":"InstallingToolsSection2Step2.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection2Step2.png","traits":["1x","light"]}],"type":"image","alt":"Output of `space --help`."},"doc://Space/tutorials/Space/InstallingTools":{"url":"\/tutorials\/space\/installingtools","kind":"project","type":"topic","estimatedTime":"10min","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"role":"project","title":"Install the Necessary Tools"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Creating-Your-Own-Types":{"url":"\/tutorials\/space\/familiarizewithtypes#Creating-Your-Own-Types","type":"section","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Creating-Your-Own-Types","title":"Creating Your Own Types"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Interacting-with-Other-Contracts":{"url":"\/tutorials\/space\/deep-dive-into-space-concepts\/interacting-with-other-contracts","kind":"article","type":"topic","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Interacting-with-Other-Contracts","abstract":[],"role":"article","title":"Interacting with Other Contracts"},"doc://Space/tutorials/Space/GetInfo":{"abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo","type":"topic","url":"\/tutorials\/space\/getinfo","kind":"project","title":"Retrieving Information from the Blockchain","estimatedTime":"10min","role":"project"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Persisting-Data-Across-Executions":{"kind":"article","type":"topic","role":"article","title":"Persisting Data Across Executions","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/persisting-data-across-executions","abstract":[],"identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Persisting-Data-Across-Executions"},"doc://Space/tutorials/Space/CodingYourFirstContract#Initializing-the-Project":{"url":"\/tutorials\/space\/codingyourfirstcontract#Initializing-the-Project","type":"section","kind":"section","role":"pseudoSymbol","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project","title":"Initializing the Project"},"doc://Space/tutorials/Space/AsyncCalls":{"role":"project","title":"Interacting with Contracts Across Shards","url":"\/tutorials\/space\/asynccalls","abstract":[{"text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources.","type":"text"}],"kind":"project","identifier":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls","estimatedTime":"15min","type":"topic"},"InstallingToolsSection2Step3.png":{"identifier":"InstallingToolsSection2Step3.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection2Step3.png","traits":["1x","light"]}],"type":"image","alt":"Output of `space --help`."},"InstallingToolsSection1Step4.png":{"identifier":"InstallingToolsSection1Step4.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step4.png","traits":["1x","light"]}],"type":"image","alt":"Terminal output showing Docker is running."},"doc://Space/tutorials/Space":{"url":"\/tutorials\/space","kind":"overview","type":"topic","identifier":"doc:\/\/Space\/tutorials\/Space","abstract":[{"text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency.","type":"text"}],"role":"overview","title":"Meet Space"},"InstallingToolsSection1Step2.png":{"identifier":"InstallingToolsSection1Step2.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step2.png","traits":["1x","light"]}],"type":"image","alt":"Output of `swift --version`."},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Working-with-the-Vector-Type":{"title":"Working with the Vector Type","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-Vector-Type","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"type":"section","url":"\/tutorials\/space\/familiarizewithtypes#Working-with-the-Vector-Type"},"doc://Space/tutorials/Space/Getting-Started/Installing-the-Tools":{"role":"article","title":"Installing the Tools","url":"\/tutorials\/space\/getting-started\/installing-the-tools","abstract":[],"kind":"article","identifier":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools","type":"topic"},"doc://Space/tutorials/Space/FamiliarizeWithTypes":{"url":"\/tutorials\/space\/familiarizewithtypes","kind":"project","type":"topic","estimatedTime":"20min","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"role":"project","title":"Exploring Space's Types"},"doc://Space/tutorials/Space/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage":{"role":"pseudoSymbol","title":"Leveraging @Mapping for Dynamic Key-Value Storage","url":"\/tutorials\/space\/storevalues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","type":"section"},"doc://Space/tutorials/Space/StoreValues":{"abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues","type":"topic","url":"\/tutorials\/space\/storevalues","kind":"project","title":"Persist Values Between Executions","estimatedTime":"15min","role":"project"},"InstallingToolsSection1Step1.png":{"identifier":"InstallingToolsSection1Step1.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step1.png","traits":["1x","light"]}],"type":"image","alt":"An empty terminal window."},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Retrieving-Information-from-the-Blockchain":{"role":"article","title":"Retrieving Information from the Blockchain","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/retrieving-information-from-the-blockchain","abstract":[],"kind":"article","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Retrieving-Information-from-the-Blockchain","type":"topic"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Understanding-the-Buffer-Type":{"abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","type":"section","url":"\/tutorials\/space\/familiarizewithtypes#Understanding-the-Buffer-Type","kind":"section","title":"Understanding the Buffer Type","role":"pseudoSymbol"},"doc://Space/tutorials/Space/SyncCalls#Perform-a-Synchronous-Call":{"abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Perform-a-Synchronous-Call","type":"section","url":"\/tutorials\/space\/synccalls#Perform-a-Synchronous-Call","kind":"section","title":"Perform a Synchronous Call","role":"pseudoSymbol"},"InstallingToolsSection3Step2.png":{"identifier":"InstallingToolsSection3Step2.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection3Step2.png","traits":["1x","light"]}],"type":"image","alt":"Output of `space init MyFirstSpaceProject`."},"doc://Space/tutorials/Space/Getting-Started/Building-Your-First-Smart-Contract":{"role":"article","title":"Building Your First Smart Contract","url":"\/tutorials\/space\/getting-started\/building-your-first-smart-contract","abstract":[],"kind":"article","identifier":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract","type":"topic"},"doc://Space/tutorials/Space/CodingYourFirstContract#Writing-the-Contract-Code":{"url":"\/tutorials\/space\/codingyourfirstcontract#Writing-the-Contract-Code","kind":"section","type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"role":"pseudoSymbol","title":"Writing the Contract Code"},"doc://Space/tutorials/Space/GetInfo#Accessing-Blockchain-Context-Data":{"abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Blockchain-Context-Data","type":"section","url":"\/tutorials\/space\/getinfo#Accessing-Blockchain-Context-Data","kind":"section","title":"Accessing Blockchain Context Data","role":"pseudoSymbol"},"doc://Space/tutorials/Space/StoreValues#Working-with-Storage-for-Single-Value-Persistence":{"role":"pseudoSymbol","title":"Working with @Storage for Single Value Persistence","url":"\/tutorials\/space\/storevalues#Working-with-Storage-for-Single-Value-Persistence","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Working-with-Storage-for-Single-Value-Persistence","type":"section"},"doc://Space/tutorials/Space/CodingYourFirstContract":{"abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","type":"topic","url":"\/tutorials\/space\/codingyourfirstcontract","kind":"project","title":"Building Your First Smart Contract","estimatedTime":"20min","role":"project"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Calling-Contracts-Across-Shards":{"identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Calling-Contracts-Across-Shards","role":"article","abstract":[],"url":"\/tutorials\/space\/deep-dive-into-space-concepts\/calling-contracts-across-shards","title":"Calling Contracts Across Shards","type":"topic","kind":"article"},"doc://Space/tutorials/Space/GetInfo#Accessing-Transaction-Context-Data":{"url":"\/tutorials\/space\/getinfo#Accessing-Transaction-Context-Data","kind":"section","type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Transaction-Context-Data","abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"role":"pseudoSymbol","title":"Accessing Transaction Context Data"},"InstallingToolsSection3Step4.png":{"identifier":"InstallingToolsSection3Step4.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection3Step4.png","traits":["1x","light"]}],"type":"image","alt":"Output of `space contract build`."},"doc://Space/tutorials/Space/AsyncCalls#Declare-the-Callee-Proxy":{"url":"\/tutorials\/space\/asynccalls#Declare-the-Callee-Proxy","type":"section","kind":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources."}],"identifier":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls#Declare-the-Callee-Proxy","title":"Declare the Callee Proxy"},"https://docs.docker.com/get-started/get-docker/":{"url":"https:\/\/docs.docker.com\/get-started\/get-docker\/","identifier":"https:\/\/docs.docker.com\/get-started\/get-docker\/","title":"Docker’s official site","type":"link","titleInlineContent":[{"type":"text","text":"Docker’s official site"}]},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges":{"role":"pseudoSymbol","title":"Handling Heap Allocation Challenges","url":"\/tutorials\/space\/familiarizewithtypes#Handling-Heap-Allocation-Challenges","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges","type":"section"},"https://www.swift.org/install/macos/":{"title":"the official Swift website","type":"link","url":"https:\/\/www.swift.org\/install\/macos\/","identifier":"https:\/\/www.swift.org\/install\/macos\/","titleInlineContent":[{"type":"text","text":"the official Swift website"}]},"doc://Space/tutorials/Space/SyncCalls":{"role":"project","title":"Interact with Other Contracts","url":"\/tutorials\/space\/synccalls","abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"kind":"project","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls","estimatedTime":"15min","type":"topic"},"InstallingToolsSection3Step3.png":{"identifier":"InstallingToolsSection3Step3.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection3Step3.png","traits":["1x","light"]}],"type":"image","alt":"Command output after navigating to the directory."}}}