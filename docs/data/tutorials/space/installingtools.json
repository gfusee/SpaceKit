{"metadata":{"role":"project","title":"Install the Necessary Tools","category":"Space","categoryPathComponent":"Space"},"hierarchy":{"paths":[["doc:\/\/Space\/tutorials\/Space","doc:\/\/Space\/tutorials\/Space\/Getting-Started","doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools"]],"reference":"doc:\/\/Space\/tutorials\/Space","modules":[{"reference":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools","projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI"},{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract","kind":"task"}]}]},{"reference":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract","projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project"},{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract"}]}]},{"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Exploring-Space's-Types","projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes","sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges","kind":"task"},{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-BigUint-Type"},{"reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-Vector-Type","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Creating-Your-Own-Types"}]}]},{"projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues","sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Working-with-Storage-for-Single-Value-Persistence"},{"reference":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","kind":"task"}]}],"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Persisting-Data-Across-Executions"},{"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Retrieving-Information-from-the-Blockchain","projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo","sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Transaction-Context-Data"},{"reference":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Blockchain-Context-Data","kind":"task"}]}]},{"reference":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Interact-with-Other-Contracts","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Declare-the-Callee-Proxy"},{"reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Perform-a-Synchronous-Call","kind":"task"}],"reference":"doc:\/\/Space\/tutorials\/Space\/SyncCalls"}]}]},"identifier":{"url":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","interfaceLanguage":"swift"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}]}],"title":"Install the Necessary Tools","kind":"hero","estimatedTimeInMinutes":10,"chapter":"Installing the Tools"},{"tasks":[{"stepsSection":[{"type":"step","content":[{"inlineContent":[{"type":"text","text":"Open a terminal to begin."}],"type":"paragraph"}],"media":"InstallingToolsSection1Step1.png","code":null,"caption":[],"runtimePreview":null},{"media":"InstallingToolsSection1Step2.png","caption":[{"inlineContent":[{"type":"text","text":"If necessary, install or update Swift by following the instructions on "},{"identifier":"https:\/\/www.swift.org\/install\/macos\/","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}],"runtimePreview":null,"type":"step","code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Check the Swift version by running "},{"type":"codeVoice","code":"swift --version"},{"text":". Space requires Swift 6 or later.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Ensure ","type":"text"},{"code":"git","type":"codeVoice"},{"type":"text","text":" is installed. The Space CLI requires it to retrieve important files."}],"type":"paragraph"}],"media":"InstallingToolsSection1Step3.png","code":null,"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"type":"codeVoice","code":"git"},{"text":" is not installed, use your preferred method to install it.","type":"text"}]}],"runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure that Docker is installed and running. Docker is required by the Space CLI to compile smart contracts."}]}],"media":"InstallingToolsSection1Step4.png","runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If Docker is not installed, you can download and install it by following the steps on "},{"identifier":"https:\/\/docs.docker.com\/get-started\/get-docker\/","isActive":true,"type":"reference"},{"type":"text","text":"."}]}],"type":"step","code":null}],"anchor":"Installing-Spaces-Dependencies","contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Space relies on several dependencies, which you need to install on your system.","type":"text"}]}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"title":"Installing Space's Dependencies"},{"stepsSection":[{"type":"step","content":[{"inlineContent":[{"text":"Open a terminal.","type":"text"}],"type":"paragraph"}],"code":null,"runtimePreview":null,"caption":[],"media":"InstallingToolsSection1Step1.png"},{"content":[{"inlineContent":[{"type":"text","text":"Run the installation command: "},{"code":"curl -sSL https:\/\/raw.githubusercontent.com\/gfusee\/space-cli\/refs\/heads\/main\/install.sh | bash","type":"codeVoice"}],"type":"paragraph"}],"code":null,"runtimePreview":null,"caption":[{"inlineContent":[{"type":"text","text":"After the installation, please restart your terminal to reload your PATH environment variable."}],"type":"paragraph"}],"media":"InstallingToolsSection2Step2.png","type":"step"},{"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Verify the Space CLI installation by running "},{"type":"codeVoice","code":"space --help"},{"text":".","type":"text"}],"type":"paragraph"}],"caption":[],"type":"step","code":null,"media":"InstallingToolsSection2Step3.png"}],"contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The Space CLI is your primary tool for using the Space framework. You’ll use it to initialize and compile your smart contracts.","type":"text"}]}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"title":"Setting Up the Space CLI","anchor":"Setting-Up-the-Space-CLI"},{"contentSection":[{"mediaPosition":"trailing","content":[{"inlineContent":[{"text":"Now, use the Space CLI to create and compile your first smart contract project.","type":"text"}],"type":"paragraph"}],"kind":"contentAndMedia"}],"anchor":"Initializing-and-Compiling-Your-First-Smart-Contract","title":"Initializing and Compiling Your First Smart Contract","stepsSection":[{"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Open a terminal."}],"type":"paragraph"}],"code":null,"type":"step","media":"InstallingToolsSection1Step1.png","caption":[]},{"type":"step","media":"InstallingToolsSection3Step2.png","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This command creates a new project directory named "},{"type":"codeVoice","code":"MyFirstSpaceProject"},{"text":".","type":"text"}]}],"runtimePreview":null,"code":null,"content":[{"inlineContent":[{"text":"Navigate to the desired directory and run ","type":"text"},{"type":"codeVoice","code":"space init MyFirstSpaceProject"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Navigate to the newly created ","type":"text"},{"code":"MyFirstSpaceProject","type":"codeVoice"},{"text":" directory.","type":"text"}],"type":"paragraph"}],"media":"InstallingToolsSection3Step3.png","code":null,"runtimePreview":null,"caption":[],"type":"step"},{"caption":[{"type":"paragraph","inlineContent":[{"text":"Look for the “WASM output:” line, which indicates a successful compilation. The ","type":"text"},{"code":".wasm","type":"codeVoice"},{"type":"text","text":" file is your compiled contract."}]}],"media":"InstallingToolsSection3Step4.png","code":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Build the smart contract by running ","type":"text"},{"code":"space contract build","type":"codeVoice"},{"type":"text","text":"."}]}],"type":"step"}]}],"kind":"tasks"},{"action":{"type":"reference","isActive":true,"identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}]},"abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Building Your First Smart Contract"}],"kind":"project","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/space\/installingtools"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"https://www.swift.org/install/macos/":{"type":"link","url":"https:\/\/www.swift.org\/install\/macos\/","titleInlineContent":[{"type":"text","text":"the official Swift website"}],"title":"the official Swift website","identifier":"https:\/\/www.swift.org\/install\/macos\/"},"doc://Space/tutorials/Space/StoreValues":{"role":"project","identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues","title":"Persist Values Between Executions","url":"\/tutorials\/space\/storevalues","type":"topic","kind":"project","estimatedTime":"15min","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}]},"InstallingToolsSection1Step2.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection1Step2.png"}],"alt":"Output of `swift --version`.","identifier":"InstallingToolsSection1Step2.png"},"doc://Space/tutorials/Space/GetInfo#Accessing-Transaction-Context-Data":{"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Transaction-Context-Data","title":"Accessing Transaction Context Data","abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"type":"section","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/space\/getinfo#Accessing-Transaction-Context-Data"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Working-with-the-BigUint-Type":{"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-BigUint-Type","title":"Working with the BigUint Type","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"type":"section","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/space\/familiarizewithtypes#Working-with-the-BigUint-Type"},"doc://Space/tutorials/Space":{"identifier":"doc:\/\/Space\/tutorials\/Space","title":"Meet Space","abstract":[{"type":"text","text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency."}],"type":"topic","role":"overview","kind":"overview","url":"\/tutorials\/space"},"doc://Space/tutorials/Space/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage":{"type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage","title":"Leveraging @Mapping for Dynamic Key-Value Storage","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory."}],"url":"\/tutorials\/space\/storevalues#Leveraging-Mapping-for-Dynamic-Key-Value-Storage"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Retrieving-Information-from-the-Blockchain":{"identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Retrieving-Information-from-the-Blockchain","title":"Retrieving Information from the Blockchain","abstract":[],"role":"article","kind":"article","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/retrieving-information-from-the-blockchain","type":"topic"},"doc://Space/tutorials/Space/StoreValues#Working-with-Storage-for-Single-Value-Persistence":{"type":"section","url":"\/tutorials\/space\/storevalues#Working-with-Storage-for-Single-Value-Persistence","abstract":[{"type":"text","text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory."}],"kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues#Working-with-Storage-for-Single-Value-Persistence","title":"Working with @Storage for Single Value Persistence"},"doc://Space/tutorials/Space/GetInfo#Accessing-Blockchain-Context-Data":{"url":"\/tutorials\/space\/getinfo#Accessing-Blockchain-Context-Data","role":"pseudoSymbol","type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo#Accessing-Blockchain-Context-Data","title":"Accessing Blockchain Context Data","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}],"kind":"section"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Working-with-the-Vector-Type":{"abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"url":"\/tutorials\/space\/familiarizewithtypes#Working-with-the-Vector-Type","role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Working-with-the-Vector-Type","type":"section","title":"Working with the Vector Type"},"doc://Space/tutorials/Space/CodingYourFirstContract#Writing-the-Contract-Code":{"abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"url":"\/tutorials\/space\/codingyourfirstcontract#Writing-the-Contract-Code","role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code","type":"section","title":"Writing the Contract Code"},"doc://Space/tutorials/Space/SyncCalls#Perform-a-Synchronous-Call":{"type":"section","url":"\/tutorials\/space\/synccalls#Perform-a-Synchronous-Call","abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}],"role":"pseudoSymbol","kind":"section","title":"Perform a Synchronous Call","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Perform-a-Synchronous-Call"},"InstallingToolsSection1Step1.png":{"type":"image","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step1.png","traits":["1x","light"]}],"alt":"An empty terminal window.","identifier":"InstallingToolsSection1Step1.png"},"InstallingToolsSection1Step3.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection1Step3.png"}],"alt":"Output of `git --version`.","identifier":"InstallingToolsSection1Step3.png"},"doc://Space/tutorials/Space/FamiliarizeWithTypes":{"role":"project","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes","title":"Exploring Space's Types","url":"\/tutorials\/space\/familiarizewithtypes","type":"topic","kind":"project","estimatedTime":"20min","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}]},"InstallingToolsSection3Step4.png":{"type":"image","variants":[{"url":"\/images\/Space\/InstallingToolsSection3Step4.png","traits":["1x","light"]}],"alt":"Output of `space contract build`.","identifier":"InstallingToolsSection3Step4.png"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Understanding-the-Buffer-Type":{"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Understanding-the-Buffer-Type","title":"Understanding the Buffer Type","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"role":"pseudoSymbol","kind":"section","url":"\/tutorials\/space\/familiarizewithtypes#Understanding-the-Buffer-Type","type":"section"},"doc://Space/tutorials/Space/CodingYourFirstContract":{"identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","estimatedTime":"20min","title":"Building Your First Smart Contract","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"type":"topic","role":"project","kind":"project","url":"\/tutorials\/space\/codingyourfirstcontract"},"doc://Space/tutorials/Space/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract":{"type":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract","title":"Initializing and Compiling Your First Smart Contract","role":"pseudoSymbol","kind":"section","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"url":"\/tutorials\/space\/installingtools#Initializing-and-Compiling-Your-First-Smart-Contract"},"InstallingToolsSection2Step2.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection2Step2.png"}],"alt":"Output of `space --help`.","identifier":"InstallingToolsSection2Step2.png"},"InstallingToolsSection3Step2.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection3Step2.png"}],"alt":"Output of `space init MyFirstSpaceProject`.","identifier":"InstallingToolsSection3Step2.png"},"doc://Space/tutorials/Space/SyncCalls":{"identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls","estimatedTime":"15min","title":"Interact with Other Contracts","abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}],"type":"topic","role":"project","kind":"project","url":"\/tutorials\/space\/synccalls"},"doc://Space/tutorials/Space/InstallingTools":{"estimatedTime":"10min","url":"\/tutorials\/space\/installingtools","role":"project","type":"topic","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","title":"Install the Necessary Tools","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"kind":"project"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges":{"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Handling-Heap-Allocation-Challenges","title":"Handling Heap Allocation Challenges","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"type":"section","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/space\/familiarizewithtypes#Handling-Heap-Allocation-Challenges"},"doc://Space/tutorials/Space/Getting-Started/Installing-the-Tools":{"identifier":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Installing-the-Tools","title":"Installing the Tools","abstract":[],"type":"topic","role":"article","kind":"article","url":"\/tutorials\/space\/getting-started\/installing-the-tools"},"doc://Space/tutorials/Space/Getting-Started/Building-Your-First-Smart-Contract":{"role":"article","identifier":"doc:\/\/Space\/tutorials\/Space\/Getting-Started\/Building-Your-First-Smart-Contract","title":"Building Your First Smart Contract","url":"\/tutorials\/space\/getting-started\/building-your-first-smart-contract","type":"topic","kind":"article","abstract":[]},"doc://Space/tutorials/Space/InstallingTools#Installing-Spaces-Dependencies":{"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies","title":"Installing Space's Dependencies","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"type":"section","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/space\/installingtools#Installing-Spaces-Dependencies"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Exploring-Space's-Types":{"role":"article","identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Exploring-Space's-Types","title":"Exploring Space's Types","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/exploring-space's-types","type":"topic","kind":"article","abstract":[]},"https://docs.docker.com/get-started/get-docker/":{"url":"https:\/\/docs.docker.com\/get-started\/get-docker\/","title":"Docker’s official site","type":"link","identifier":"https:\/\/docs.docker.com\/get-started\/get-docker\/","titleInlineContent":[{"type":"text","text":"Docker’s official site"}]},"doc://Space/tutorials/Space/GetInfo":{"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}],"title":"Retrieving Information from the Blockchain","role":"project","estimatedTime":"10min","type":"topic","kind":"project","url":"\/tutorials\/space\/getinfo"},"doc://Space/tutorials/Space/CodingYourFirstContract#Initializing-the-Project":{"abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"url":"\/tutorials\/space\/codingyourfirstcontract#Initializing-the-Project","role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project","type":"section","title":"Initializing the Project"},"InstallingToolsSection3Step3.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection3Step3.png"}],"type":"image","identifier":"InstallingToolsSection3Step3.png","alt":"Command output after navigating to the directory."},"doc://Space/tutorials/Space/SyncCalls#Declare-the-Callee-Proxy":{"abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}],"url":"\/tutorials\/space\/synccalls#Declare-the-Callee-Proxy","role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls#Declare-the-Callee-Proxy","type":"section","title":"Declare the Callee Proxy"},"doc://Space/tutorials/Space/FamiliarizeWithTypes#Creating-Your-Own-Types":{"abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"url":"\/tutorials\/space\/familiarizewithtypes#Creating-Your-Own-Types","role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes#Creating-Your-Own-Types","type":"section","title":"Creating Your Own Types"},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Persisting-Data-Across-Executions":{"identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Persisting-Data-Across-Executions","title":"Persisting Data Across Executions","abstract":[],"type":"topic","role":"article","kind":"article","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/persisting-data-across-executions"},"doc://Space/tutorials/Space/CodingYourFirstContract#Testing-the-Contract":{"identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract","kind":"section","type":"section","url":"\/tutorials\/space\/codingyourfirstcontract#Testing-the-Contract","title":"Testing the Contract","role":"pseudoSymbol","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}]},"InstallingToolsSection2Step3.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection2Step3.png"}],"type":"image","identifier":"InstallingToolsSection2Step3.png","alt":"Output of `space --help`."},"doc://Space/tutorials/Space/Deep-Dive-into-Space-Concepts/Interact-with-Other-Contracts":{"abstract":[],"identifier":"doc:\/\/Space\/tutorials\/Space\/Deep-Dive-into-Space-Concepts\/Interact-with-Other-Contracts","title":"Interact with Other Contracts","role":"article","type":"topic","kind":"article","url":"\/tutorials\/space\/deep-dive-into-space-concepts\/interact-with-other-contracts"},"doc://Space/tutorials/Space/InstallingTools#Setting-Up-the-Space-CLI":{"abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"url":"\/tutorials\/space\/installingtools#Setting-Up-the-Space-CLI","role":"pseudoSymbol","kind":"section","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI","type":"section","title":"Setting Up the Space CLI"},"InstallingToolsSection1Step4.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection1Step4.png"}],"type":"image","identifier":"InstallingToolsSection1Step4.png","alt":"Terminal output showing Docker is running."}}}