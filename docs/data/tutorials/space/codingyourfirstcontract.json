{"hierarchy":{"paths":[["doc:\/\/Space\/tutorials\/GettingStarted","doc:\/\/Space\/tutorials\/GettingStarted\/$volume","doc:\/\/Space\/tutorials\/GettingStarted\/Building-Your-First-Smart-Contract"]],"reference":"doc:\/\/Space\/tutorials\/GettingStarted","modules":[{"projects":[{"sections":[{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI"},{"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract","kind":"task"}],"reference":"doc:\/\/Space\/tutorials\/Space\/InstallingTools"}],"reference":"doc:\/\/Space\/tutorials\/GettingStarted\/Installing-the-Tools"},{"reference":"doc:\/\/Space\/tutorials\/GettingStarted\/Building-Your-First-Smart-Contract","projects":[{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","sections":[{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project","kind":"task"},{"kind":"task","reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code"},{"reference":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract","kind":"task"}]}]}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/space\/codingyourfirstcontract"]}],"identifier":{"url":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","interfaceLanguage":"swift"},"sections":[{"kind":"hero","estimatedTimeInMinutes":20,"title":"Building Your First Smart Contract","chapter":"Building Your First Smart Contract","content":[{"inlineContent":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"type":"paragraph"}]},{"tasks":[{"stepsSection":[{"type":"step","code":null,"media":"InstallingToolsSection1Step1.png","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Open a terminal.","type":"text"}]}],"runtimePreview":null},{"code":null,"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This command creates a new directory named “Counter.”"}]}],"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the desired directory, then run the command "},{"type":"codeVoice","code":"space init Counter"},{"type":"text","text":"."}]}],"media":"CodingFirstContractSection1Step2.png"},{"media":"CodingFirstContractSection1Step3.png","code":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"We recommend Xcode or VSCode with the official Swift extension. In this tutorial, we’ll use Xcode. For other environments like VSCode on Linux or Windows, dedicated tutorials may be available.","type":"text"}]}],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the project in your preferred Swift IDE by opening the “Counter” directory."}]}],"runtimePreview":null},{"content":[{"inlineContent":[{"type":"text","text":"(Optional) Build the project to enable macros and improve indexing in your IDE."}],"type":"paragraph"}],"type":"step","caption":[{"type":"paragraph","inlineContent":[{"text":"In Xcode, go to ","type":"text"},{"inlineContent":[{"text":"Product > Build","type":"text"}],"type":"strong"},{"text":" or press ","type":"text"},{"type":"codeVoice","code":"⌘ + B"},{"type":"text","text":"."}]}],"media":"CodingFirstContractSection1Step4.png","runtimePreview":null,"code":null}],"contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Before writing the contract, let’s initialize the project using the Space CLI."}]}]}],"anchor":"Initializing-the-Project","title":"Initializing the Project"},{"title":"Writing the Contract Code","stepsSection":[{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the "},{"code":"Contracts\/Counter\/Source\/lib.swift","type":"codeVoice"},{"type":"text","text":" file and delete its contents."}]}],"code":"CodingFirstContractSection2Step1.swift","caption":[],"media":null,"runtimePreview":null},{"code":"CodingFirstContractSection2Step2.swift","runtimePreview":null,"type":"step","caption":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" Only import the Space framework. Other libraries like Foundation are not compatible with SpaceVM.","type":"text"}],"type":"paragraph"}],"content":[{"inlineContent":[{"type":"text","text":"Import the framework by adding "},{"type":"codeVoice","code":"import Space"},{"text":".","type":"text"}],"type":"paragraph"}],"media":null},{"media":null,"caption":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Note:"}],"type":"strong"},{"type":"text","text":" You should have only one "},{"code":"@Contract","type":"codeVoice"},{"type":"text","text":" struct. The logic can be spread across multiple files, but the "},{"type":"codeVoice","code":"@Contract"},{"text":" struct remains central.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Declare the contract by annotating a struct with ","type":"text"},{"code":"@Contract","type":"codeVoice"},{"text":". For this project, we’ll declare the ","type":"text"},{"code":"Counter","type":"codeVoice"},{"type":"text","text":" contract."}]}],"code":"CodingFirstContractSection2Step3.swift"},{"caption":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" The ","type":"text"},{"code":"BigUint","type":"codeVoice"},{"text":" type handles arbitrarily large numbers, so there’s no risk of overflow.","type":"text"}]}],"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"To persist the counter across executions, declare it in the contract’s storage with ","type":"text"},{"code":"@Storage(key: \"counter\")","type":"codeVoice"},{"text":".","type":"text"}]}],"code":"CodingFirstContractSection2Step4.swift","media":null,"runtimePreview":null},{"code":"CodingFirstContractSection2Step5.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Define the initializer for the contract, which is executed only once during deployment to set the initial counter value."}]}],"media":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"type":"text","text":" The initializer is called only when the contract is deployed."}]}],"type":"step"},{"code":"CodingFirstContractSection2Step6.swift","runtimePreview":null,"caption":[],"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create an endpoint "},{"code":"increase","type":"codeVoice"},{"type":"text","text":" to allow users to increment the counter. The function takes a single user-provided parameter indicating how much to increment the counter."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Similarly, create the "},{"type":"codeVoice","code":"decrease"},{"text":" endpoint to decrement the counter.","type":"text"}]}],"caption":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Note:"}],"type":"strong"},{"type":"text","text":" The "},{"type":"codeVoice","code":"BigUint"},{"type":"text","text":" type cannot be negative, so if the operation results in a negative value, the transaction will fail without changes being committed."}],"type":"paragraph"}],"media":null,"code":"CodingFirstContractSection2Step7.swift","runtimePreview":null,"type":"step"},{"runtimePreview":null,"media":null,"caption":[],"type":"step","code":"CodingFirstContractSection2Step8.swift","content":[{"inlineContent":[{"type":"text","text":"To allow users or other contracts to retrieve the counter’s value, create a view function ("},{"type":"codeVoice","code":"getCounter"},{"type":"text","text":"), which does not modify the contract’s state."}],"type":"paragraph"}]}],"anchor":"Writing-the-Contract-Code","contentSection":[{"mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s start coding the smart contract."}]}],"kind":"contentAndMedia"}]},{"anchor":"Testing-the-Contract","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"Space includes a built-in emulator called SwiftVM, which allows you to test your contract in the Swift environment.","type":"text"}]}],"mediaPosition":"trailing"}],"stepsSection":[{"runtimePreview":null,"type":"step","caption":[],"media":"CodingFirstContractSection3Step1.png","code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the "},{"code":"Contracts\/Counter\/Tests\/CounterTests","type":"codeVoice"},{"type":"text","text":" directory. Delete any files and create a new file named "},{"type":"codeVoice","code":"CounterTests.swift"},{"text":".","type":"text"}]}]},{"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Import the necessary frameworks: Space, your contract, and XCTest."}]}],"type":"step","caption":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"type":"text","text":" XCTest is the official tool for writing unit tests in Swift."}],"type":"paragraph"}],"code":"CodingFirstContractSection3Step2.swift","runtimePreview":null},{"code":"CodingFirstContractSection3Step3.swift","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Declare the contract’s address, as SwiftVM assigns a deterministic address to our contract.","type":"text"}]}],"media":null,"runtimePreview":null,"type":"step"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Create a class for the tests, inheriting from ","type":"text"},{"type":"codeVoice","code":"ContractTestCase"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Note:","type":"text"}]},{"text":" Avoid overriding the ","type":"text"},{"code":"setUp","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"tearDown"},{"type":"text","text":" methods."}]}],"media":null,"code":"CodingFirstContractSection3Step4.swift","runtimePreview":null},{"caption":[],"code":"CodingFirstContractSection3Step5.swift","type":"step","content":[{"inlineContent":[{"type":"text","text":"Override the "},{"code":"initialAccounts","type":"codeVoice"},{"type":"text","text":" property to declare the contract’s address in SwiftVM."}],"type":"paragraph"}],"media":null,"runtimePreview":null},{"runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Create the first unit test to verify deploying the contract with an initial counter value of zero.","type":"text"}]}],"code":"CodingFirstContractSection3Step6.swift","caption":[],"media":null},{"media":null,"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Note:","type":"text"}]},{"type":"text","text":" This function allows you to catch any errors during execution."}]}],"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Deploy the contract with an initial value of 0 using the generated "},{"code":"testable","type":"codeVoice"},{"text":" function.","type":"text"}]}],"code":"CodingFirstContractSection3Step7.swift"},{"runtimePreview":null,"code":"CodingFirstContractSection3Step8.swift","type":"step","media":null,"content":[{"inlineContent":[{"type":"text","text":"Call the "},{"code":"getCounter","type":"codeVoice"},{"text":" view to assert the counter is 0.","type":"text"}],"type":"paragraph"}],"caption":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Note:"}],"type":"strong"},{"type":"text","text":" Space generates functions for contract views and endpoints."}],"type":"paragraph"}]},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Add a unit test to verify deploying the contract with a non-zero initial value.","type":"text"}]}],"type":"step","caption":[],"media":null,"code":"CodingFirstContractSection3Step9.swift"},{"runtimePreview":null,"media":null,"type":"step","caption":[],"code":"CodingFirstContractSection3Step10.swift","content":[{"inlineContent":[{"text":"Create unit tests for the ","type":"text"},{"code":"increase","type":"codeVoice"},{"type":"text","text":" endpoint, similar to the deployment tests."}],"type":"paragraph"}]},{"code":"CodingFirstContractSection3Step11.swift","media":null,"runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Repeat for the "},{"type":"codeVoice","code":"decrease"},{"type":"text","text":" endpoint."}],"type":"paragraph"}],"caption":[]},{"caption":[],"media":null,"code":"CodingFirstContractSection3Step12.swift","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a test to ensure failure when trying to decrease the counter below zero."}]}],"type":"step"},{"content":[{"inlineContent":[{"text":"Run the tests to confirm your contract works correctly!","type":"text"}],"type":"paragraph"}],"code":null,"caption":[],"runtimePreview":null,"media":"CodingFirstContractSection3Step13.png","type":"step"}],"title":"Testing the Contract"}],"kind":"tasks"}],"kind":"project","metadata":{"role":"project","categoryPathComponent":"GettingStarted","category":"Getting Started","title":"Building Your First Smart Contract"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"CodingFirstContractSection3Step10.swift":{"content":["import Space","import Counter","import XCTest","","let COUNTER_ADDRESS = \"counter\"","","final class CounterTests: ContractTestCase {","    override var initialAccounts: [WorldAccount] {","        [","            WorldAccount(address: COUNTER_ADDRESS)","        ]","    }","    ","    func testDeployCounterInitialValueZero() throws {","        let contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 0","        )","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 0)","    }","    ","    func testDeployCounterInitialValueNonZero() throws {","        let contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 15)","    }","    ","    func testIncreaseZero() throws {","        var contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        try contract.increase(value: 0)","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 15)","    }","    ","    func testIncreaseMoreThanZero() throws {","        var contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        try contract.increase(value: 5)","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 20)","    }","}"],"fileType":"swift","syntax":"swift","identifier":"CodingFirstContractSection3Step10.swift","type":"file","highlights":[{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60}],"fileName":"CounterTests.swift"},"CodingFirstContractSection3Step11.swift":{"fileName":"CounterTests.swift","identifier":"CodingFirstContractSection3Step11.swift","syntax":"swift","fileType":"swift","content":["import Space","import Counter","import XCTest","","let COUNTER_ADDRESS = \"counter\"","","final class CounterTests: ContractTestCase {","    override var initialAccounts: [WorldAccount] {","        [","            WorldAccount(address: COUNTER_ADDRESS)","        ]","    }","    ","    func testDeployCounterInitialValueZero() throws {","        let contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 0","        )","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 0)","    }","    ","    func testDeployCounterInitialValueNonZero() throws {","        let contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 15)","    }","    ","    func testIncreaseZero() throws {","        var contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        try contract.increase(value: 0)","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 15)","    }","    ","    func testIncreaseMoreThanZero() throws {","        var contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        try contract.increase(value: 5)","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 20)","    }","    ","    func testDecreaseZero() throws {","        var contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        try contract.decrease(value: 0)","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 15)","    }","    ","    func testDecreaseMoreThanZero() throws {","        var contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        try contract.decrease(value: 5)","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 10)","    }","}"],"highlights":[{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71},{"line":72},{"line":73},{"line":74},{"line":75},{"line":76},{"line":77},{"line":78},{"line":79},{"line":80},{"line":81},{"line":82},{"line":83},{"line":84},{"line":85},{"line":86}],"type":"file"},"doc://Space/tutorials/Space/InstallingTools":{"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","title":"Install the Necessary Tools","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"url":"\/tutorials\/space\/installingtools","kind":"project","role":"project","type":"topic","estimatedTime":"10min"},"CodingFirstContractSection3Step6.swift":{"fileType":"swift","type":"file","content":["import Space","import Counter","import XCTest","","let COUNTER_ADDRESS = \"counter\"","","final class CounterTests: ContractTestCase {","    override var initialAccounts: [WorldAccount] {","        [","            WorldAccount(address: COUNTER_ADDRESS)","        ]","    }","    ","    func testDeployCounterInitialValueZero() throws {","        ","    }","}"],"identifier":"CodingFirstContractSection3Step6.swift","fileName":"CounterTests.swift","syntax":"swift","highlights":[{"line":13},{"line":14},{"line":15},{"line":16}]},"CodingFirstContractSection1Step2.png":{"alt":"Output of `space init Counter` command.","type":"image","identifier":"CodingFirstContractSection1Step2.png","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/CodingFirstContractSection1Step2.png"}]},"doc://Space/tutorials/Space/CodingYourFirstContract":{"type":"topic","kind":"project","url":"\/tutorials\/space\/codingyourfirstcontract","title":"Building Your First Smart Contract","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"estimatedTime":"20min","role":"project","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract"},"CodingFirstContractSection3Step8.swift":{"syntax":"swift","content":["import Space","import Counter","import XCTest","","let COUNTER_ADDRESS = \"counter\"","","final class CounterTests: ContractTestCase {","    override var initialAccounts: [WorldAccount] {","        [","            WorldAccount(address: COUNTER_ADDRESS)","        ]","    }","    ","    func testDeployCounterInitialValueZero() throws {","        let contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 0","        )","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 0)","    }","}"],"highlights":[{"line":19},{"line":20},{"line":21},{"line":22}],"fileType":"swift","identifier":"CodingFirstContractSection3Step8.swift","type":"file","fileName":"CounterTests.swift"},"CodingFirstContractSection2Step3.swift":{"fileType":"swift","type":"file","syntax":"swift","fileName":"lib.swift","highlights":[{"line":2},{"line":3},{"line":4},{"line":5}],"content":["import Space","","@Contract public struct Counter {","    ","}"],"identifier":"CodingFirstContractSection2Step3.swift"},"doc://Space/tutorials/GettingStarted/Installing-the-Tools":{"title":"Installing the Tools","role":"article","identifier":"doc:\/\/Space\/tutorials\/GettingStarted\/Installing-the-Tools","url":"\/tutorials\/gettingstarted\/installing-the-tools","type":"topic","abstract":[],"kind":"article"},"CodingFirstContractSection2Step5.swift":{"type":"file","syntax":"swift","fileType":"swift","identifier":"CodingFirstContractSection2Step5.swift","content":["import Space","","@Contract public struct Counter {","    @Storage(key: \"counter\") var counter: BigUint","    ","    init(initialValue: BigUint) {","        self.counter = initialValue","    }","}"],"fileName":"lib.swift","highlights":[{"line":5},{"line":6},{"line":7},{"line":8}]},"CodingFirstContractSection2Step1.swift":{"fileName":"lib.swift","syntax":"swift","type":"file","identifier":"CodingFirstContractSection2Step1.swift","content":[""],"fileType":"swift","highlights":[]},"doc://Space/tutorials/Space/CodingYourFirstContract#Testing-the-Contract":{"title":"Testing the Contract","role":"pseudoSymbol","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Testing-the-Contract","url":"\/tutorials\/space\/codingyourfirstcontract#Testing-the-Contract","type":"section","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"kind":"section"},"CodingFirstContractSection3Step13.png":{"type":"image","identifier":"CodingFirstContractSection3Step13.png","alt":"Xcode's test tab showing all tests passed.","variants":[{"url":"\/images\/Space\/CodingFirstContractSection3Step13.png","traits":["1x","light"]}]},"CodingFirstContractSection2Step6.swift":{"fileType":"swift","type":"file","identifier":"CodingFirstContractSection2Step6.swift","fileName":"lib.swift","syntax":"swift","highlights":[{"line":9},{"line":10},{"line":11},{"line":12}],"content":["import Space","","@Contract public struct Counter {","    @Storage(key: \"counter\") var counter: BigUint","    ","    init(initialValue: BigUint) {","        self.counter = initialValue","    }","    ","    public mutating func increase(value: BigUint) {","        self.counter = self.counter + value","    }","}"]},"CodingFirstContractSection2Step8.swift":{"fileName":"lib.swift","identifier":"CodingFirstContractSection2Step8.swift","fileType":"swift","highlights":[{"line":17},{"line":18},{"line":19},{"line":20}],"content":["import Space","","@Contract public struct Counter {","    @Storage(key: \"counter\") var counter: BigUint","    ","    init(initialValue: BigUint) {","        self.counter = initialValue","    }","    ","    public mutating func increase(value: BigUint) {","        self.counter = self.counter + value","    }","    ","    public mutating func decrease(value: BigUint) {","        self.counter = self.counter - value","    }","    ","    public func getCounter() -> BigUint {","        return self.counter","    }","}"],"syntax":"swift","type":"file"},"doc://Space/tutorials/GettingStarted":{"type":"topic","title":"Meet Space","identifier":"doc:\/\/Space\/tutorials\/GettingStarted","kind":"overview","abstract":[{"type":"text","text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency."}],"url":"\/tutorials\/gettingstarted","role":"overview"},"CodingFirstContractSection3Step1.png":{"type":"image","alt":"File tree showing newly created `CounterTests.swift`.","identifier":"CodingFirstContractSection3Step1.png","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/CodingFirstContractSection3Step1.png"}]},"CodingFirstContractSection3Step3.swift":{"fileType":"swift","type":"file","identifier":"CodingFirstContractSection3Step3.swift","fileName":"CounterTests.swift","syntax":"swift","highlights":[{"line":4},{"line":5}],"content":["import Space","import Counter","import XCTest","","let COUNTER_ADDRESS = \"counter\""]},"CodingFirstContractSection3Step5.swift":{"fileName":"CounterTests.swift","identifier":"CodingFirstContractSection3Step5.swift","fileType":"swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12}],"content":["import Space","import Counter","import XCTest","","let COUNTER_ADDRESS = \"counter\"","","final class CounterTests: ContractTestCase {","    override var initialAccounts: [WorldAccount] {","        [","            WorldAccount(address: COUNTER_ADDRESS)","        ]","    }","}"],"syntax":"swift","type":"file"},"doc://Space/tutorials/Space/CodingYourFirstContract#Writing-the-Contract-Code":{"type":"section","title":"Writing the Contract Code","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Writing-the-Contract-Code","kind":"section","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"url":"\/tutorials\/space\/codingyourfirstcontract#Writing-the-Contract-Code","role":"pseudoSymbol"},"CodingFirstContractSection1Step4.png":{"type":"image","identifier":"CodingFirstContractSection1Step4.png","alt":"Xcode's Product menu with 'Build' highlighted.","variants":[{"url":"\/images\/Space\/CodingFirstContractSection1Step4.png","traits":["1x","light"]}]},"doc://Space/tutorials/Space/CodingYourFirstContract#Initializing-the-Project":{"type":"section","title":"Initializing the Project","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract#Initializing-the-Project","kind":"section","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"url":"\/tutorials\/space\/codingyourfirstcontract#Initializing-the-Project","role":"pseudoSymbol"},"doc://Space/tutorials/Space/InstallingTools#Setting-Up-the-Space-CLI":{"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Setting-Up-the-Space-CLI","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"kind":"section","url":"\/tutorials\/space\/installingtools#Setting-Up-the-Space-CLI","role":"pseudoSymbol","title":"Setting Up the Space CLI","type":"section"},"CodingFirstContractSection2Step7.swift":{"fileType":"swift","type":"file","identifier":"CodingFirstContractSection2Step7.swift","fileName":"lib.swift","syntax":"swift","highlights":[{"line":13},{"line":14},{"line":15},{"line":16}],"content":["import Space","","@Contract public struct Counter {","    @Storage(key: \"counter\") var counter: BigUint","    ","    init(initialValue: BigUint) {","        self.counter = initialValue","    }","    ","    public mutating func increase(value: BigUint) {","        self.counter = self.counter + value","    }","    ","    public mutating func decrease(value: BigUint) {","        self.counter = self.counter - value","    }","}"]},"CodingFirstContractSection3Step4.swift":{"fileName":"CounterTests.swift","identifier":"CodingFirstContractSection3Step4.swift","fileType":"swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9}],"content":["import Space","import Counter","import XCTest","","let COUNTER_ADDRESS = \"counter\"","","final class CounterTests: ContractTestCase {","    ","}"],"syntax":"swift","type":"file"},"CodingFirstContractSection2Step4.swift":{"fileType":"swift","type":"file","identifier":"CodingFirstContractSection2Step4.swift","fileName":"lib.swift","syntax":"swift","highlights":[{"line":4}],"content":["import Space","","@Contract public struct Counter {","    @Storage(key: \"counter\") var counter: BigUint","}"]},"CodingFirstContractSection3Step2.swift":{"fileName":"CounterTests.swift","identifier":"CodingFirstContractSection3Step2.swift","fileType":"swift","highlights":[],"content":["import Space","import Counter","import XCTest"],"syntax":"swift","type":"file"},"CodingFirstContractSection2Step2.swift":{"fileType":"swift","type":"file","identifier":"CodingFirstContractSection2Step2.swift","fileName":"lib.swift","syntax":"swift","highlights":[{"line":1}],"content":["import Space"]},"doc://Space/tutorials/Space/InstallingTools#Installing-Spaces-Dependencies":{"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Installing-Spaces-Dependencies","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"kind":"section","url":"\/tutorials\/space\/installingtools#Installing-Spaces-Dependencies","role":"pseudoSymbol","title":"Installing Space's Dependencies","type":"section"},"CodingFirstContractSection3Step12.swift":{"fileType":"swift","type":"file","identifier":"CodingFirstContractSection3Step12.swift","fileName":"CounterTests.swift","syntax":"swift","highlights":[{"line":87},{"line":88},{"line":89},{"line":90},{"line":91},{"line":92},{"line":93},{"line":94},{"line":95},{"line":96},{"line":97},{"line":98},{"line":99},{"line":100},{"line":101}],"content":["import Space","import Counter","import XCTest","","let COUNTER_ADDRESS = \"counter\"","","final class CounterTests: ContractTestCase {","    override var initialAccounts: [WorldAccount] {","        [","            WorldAccount(address: COUNTER_ADDRESS)","        ]","    }","    ","    func testDeployCounterInitialValueZero() throws {","        let contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 0","        )","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 0)","    }","    ","    func testDeployCounterInitialValueNonZero() throws {","        let contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 15)","    }","    ","    func testIncreaseZero() throws {","        var contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        try contract.increase(value: 0)","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 15)","    }","    ","    func testIncreaseMoreThanZero() throws {","        var contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        try contract.increase(value: 5)","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 20)","    }","    ","    func testDecreaseZero() throws {","        var contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        try contract.decrease(value: 0)","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 15)","    }","    ","    func testDecreaseMoreThanZero() throws {","        var contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        try contract.decrease(value: 5)","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 10)","    }","    ","    func testDecreaseTooMuchShouldFail() throws {","        let contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        do {","            try contract.decrease(value: 16)","            ","            XCTFail() \/\/ Decrease fails, so this line should not be executed","        } catch {","            XCTAssertEqual(error, .userError(message: \"cannot subtract because result would be negative\"))","        }","    }","}"]},"CodingFirstContractSection3Step9.swift":{"syntax":"swift","fileType":"swift","type":"file","content":["import Space","import Counter","import XCTest","","let COUNTER_ADDRESS = \"counter\"","","final class CounterTests: ContractTestCase {","    override var initialAccounts: [WorldAccount] {","        [","            WorldAccount(address: COUNTER_ADDRESS)","        ]","    }","    ","    func testDeployCounterInitialValueZero() throws {","        let contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 0","        )","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 0)","    }","    ","    func testDeployCounterInitialValueNonZero() throws {","        let contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 15","        )","        ","        let result = try contract.getCounter()","        ","        XCTAssertEqual(result, 15)","    }","}"],"highlights":[{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34}],"identifier":"CodingFirstContractSection3Step9.swift","fileName":"CounterTests.swift"},"doc://Space/tutorials/GettingStarted/Building-Your-First-Smart-Contract":{"type":"topic","title":"Building Your First Smart Contract","identifier":"doc:\/\/Space\/tutorials\/GettingStarted\/Building-Your-First-Smart-Contract","kind":"article","abstract":[],"url":"\/tutorials\/gettingstarted\/building-your-first-smart-contract","role":"article"},"CodingFirstContractSection1Step3.png":{"type":"image","identifier":"CodingFirstContractSection1Step3.png","alt":"Xcode project selection screen with 'Counter' highlighted.","variants":[{"url":"\/images\/Space\/CodingFirstContractSection1Step3.png","traits":["1x","light"]}]},"InstallingToolsSection1Step1.png":{"type":"image","alt":"An empty terminal window.","identifier":"InstallingToolsSection1Step1.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step1.png","traits":["1x","light"]}]},"doc://Space/tutorials/Space/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract":{"kind":"section","url":"\/tutorials\/space\/installingtools#Initializing-and-Compiling-Your-First-Smart-Contract","role":"pseudoSymbol","type":"section","title":"Initializing and Compiling Your First Smart Contract","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools#Initializing-and-Compiling-Your-First-Smart-Contract"},"CodingFirstContractSection3Step7.swift":{"fileType":"swift","type":"file","identifier":"CodingFirstContractSection3Step7.swift","fileName":"CounterTests.swift","syntax":"swift","highlights":[{"line":15},{"line":16},{"line":17},{"line":18}],"content":["import Space","import Counter","import XCTest","","let COUNTER_ADDRESS = \"counter\"","","final class CounterTests: ContractTestCase {","    override var initialAccounts: [WorldAccount] {","        [","            WorldAccount(address: COUNTER_ADDRESS)","        ]","    }","    ","    func testDeployCounterInitialValueZero() throws {","        let contract = try Counter.testable(","            COUNTER_ADDRESS,","            initialValue: 0","        )","    }","}"]}}}