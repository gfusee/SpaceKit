{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"estimatedTime":"1hr 45min","category":"Space","categoryPathComponent":"Space","role":"overview","title":"Meet Space"},"identifier":{"url":"doc:\/\/Space\/tutorials\/Space","interfaceLanguage":"swift"},"sections":[{"title":"Meet Space","content":[{"type":"paragraph","inlineContent":[{"text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency.","type":"text"}]}],"kind":"hero","action":{"isActive":true,"type":"reference","overridingTitle":"Get started","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","overridingTitleInlineContent":[{"type":"text","text":"Get started"}]}},{"chapters":[{"content":[],"tutorials":["doc:\/\/Space\/tutorials\/Space\/InstallingTools"],"image":"InstallingToolsSection1Step1.png","name":"Installing the Tools"},{"tutorials":["doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract"],"name":"Building Your First Smart Contract","image":"InstallingToolsSection1Step1.png","content":[]}],"image":"InstallingToolsSection1Step1.png","content":[{"inlineContent":[{"text":"Start your journey as a blockchain developer.","type":"text"}],"type":"paragraph"}],"name":"Getting Started","kind":"volume"},{"name":"Deep Dive into Space Concepts","chapters":[{"tutorials":["doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes"],"image":"InstallingToolsSection1Step1.png","name":"Exploring Space's Types","content":[{"inlineContent":[{"type":"text","text":"Learn about the core types that power smart contracts in Space, including WebAssembly integration and Swift interoperability."}],"type":"paragraph"}]},{"tutorials":["doc:\/\/Space\/tutorials\/Space\/StoreValues"],"image":"InstallingToolsSection1Step1.png","name":"Persisting Data Across Executions","content":[{"inlineContent":[{"type":"text","text":"Discover how to retain data across multiple contract executions using Space’s storage features."}],"type":"paragraph"}]},{"image":"InstallingToolsSection1Step1.png","name":"Retrieving Information from the Blockchain","content":[{"inlineContent":[{"type":"text","text":"Learn how to access transaction and blockchain context data, such as caller information, payments, and timestamps, using the Space framework."}],"type":"paragraph"}],"tutorials":["doc:\/\/Space\/tutorials\/Space\/GetInfo"]},{"name":"Interacting with Other Contracts","tutorials":["doc:\/\/Space\/tutorials\/Space\/SyncCalls"],"image":"InstallingToolsSection1Step1.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn how to enable smart contracts to call other contracts in a synchronous manner, and explore contract-to-contract interaction using Space’s proxy mechanisms."}]}]},{"name":"Calling Contracts Across Shards","content":[{"type":"paragraph","inlineContent":[{"text":"Asynchronous calls enable interaction with contracts across different shards. Let’s explore how to implement these cross-shard calls in Space.","type":"text"}]}],"image":"InstallingToolsSection1Step1.png","tutorials":["doc:\/\/Space\/tutorials\/Space\/AsyncCalls"]}],"image":"InstallingToolsSection1Step1.png","content":[{"inlineContent":[{"text":"Gain a deeper understanding of Space’s architecture, from core types to advanced usage scenarios.","type":"text"}],"type":"paragraph"}],"kind":"volume"}],"variants":[{"paths":["\/tutorials\/space"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"reference":"doc:\/\/Space\/tutorials\/Space","paths":[]},"kind":"overview","references":{"doc://Space/tutorials/Space/InstallingTools":{"url":"\/tutorials\/space\/installingtools","kind":"project","type":"topic","estimatedTime":"10min","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"role":"project","title":"Install the Necessary Tools"},"doc://Space/tutorials/Space/FamiliarizeWithTypes":{"url":"\/tutorials\/space\/familiarizewithtypes","kind":"project","type":"topic","estimatedTime":"20min","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"role":"project","title":"Exploring Space's Types"},"doc://Space/tutorials/Space/StoreValues":{"abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues","type":"topic","url":"\/tutorials\/space\/storevalues","kind":"project","title":"Persist Values Between Executions","estimatedTime":"15min","role":"project"},"doc://Space/tutorials/Space/SyncCalls":{"role":"project","title":"Interact with Other Contracts","url":"\/tutorials\/space\/synccalls","abstract":[{"text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems.","type":"text"}],"kind":"project","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls","estimatedTime":"15min","type":"topic"},"doc://Space/tutorials/Space/AsyncCalls":{"role":"project","title":"Interacting with Contracts Across Shards","url":"\/tutorials\/space\/asynccalls","abstract":[{"text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources.","type":"text"}],"kind":"project","identifier":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls","estimatedTime":"15min","type":"topic"},"doc://Space/tutorials/Space":{"url":"\/tutorials\/space","kind":"overview","type":"topic","identifier":"doc:\/\/Space\/tutorials\/Space","abstract":[{"text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency.","type":"text"}],"role":"overview","title":"Meet Space"},"doc://Space/tutorials/Space/GetInfo":{"abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo","type":"topic","url":"\/tutorials\/space\/getinfo","kind":"project","title":"Retrieving Information from the Blockchain","estimatedTime":"10min","role":"project"},"InstallingToolsSection1Step1.png":{"identifier":"InstallingToolsSection1Step1.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step1.png","traits":["1x","light"]}],"alt":"A terminal window displaying code examples.","type":"image"},"doc://Space/tutorials/Space/CodingYourFirstContract":{"abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","type":"topic","url":"\/tutorials\/space\/codingyourfirstcontract","kind":"project","title":"Building Your First Smart Contract","estimatedTime":"20min","role":"project"}}}