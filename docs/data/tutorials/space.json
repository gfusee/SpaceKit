{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Space\/tutorials\/Space"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/space"]}],"hierarchy":{"reference":"doc:\/\/Space\/tutorials\/Space","paths":[]},"kind":"overview","metadata":{"category":"Space","estimatedTime":"1hr 30min","categoryPathComponent":"Space","role":"overview","title":"Meet Space"},"sections":[{"kind":"hero","action":{"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","isActive":true,"overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"type":"reference"},"title":"Meet Space","content":[{"inlineContent":[{"text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency.","type":"text"}],"type":"paragraph"}]},{"kind":"volume","name":"Getting Started","image":"InstallingToolsSection1Step1.png","chapters":[{"name":"Installing the Tools","tutorials":["doc:\/\/Space\/tutorials\/Space\/InstallingTools"],"image":"InstallingToolsSection1Step1.png","content":[]},{"image":"InstallingToolsSection1Step1.png","content":[],"tutorials":["doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract"],"name":"Building Your First Smart Contract"}],"content":[{"inlineContent":[{"text":"Start your journey as a blockchain developer.","type":"text"}],"type":"paragraph"}]},{"image":"InstallingToolsSection1Step1.png","content":[{"type":"paragraph","inlineContent":[{"text":"Gain a deeper understanding of Space’s architecture, from core types to advanced usage scenarios.","type":"text"}]}],"name":"Deep Dive into Space Concepts","kind":"volume","chapters":[{"name":"Exploring Space's Types","image":"InstallingToolsSection1Step1.png","tutorials":["doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes"],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn about the core types that power smart contracts in Space, including WebAssembly integration and Swift interoperability."}]}]},{"tutorials":["doc:\/\/Space\/tutorials\/Space\/StoreValues"],"image":"InstallingToolsSection1Step1.png","content":[{"inlineContent":[{"type":"text","text":"Discover how to retain data across multiple contract executions using Space’s storage features."}],"type":"paragraph"}],"name":"Persisting Data Across Executions"},{"image":"InstallingToolsSection1Step1.png","tutorials":["doc:\/\/Space\/tutorials\/Space\/GetInfo"],"content":[{"inlineContent":[{"text":"Learn how to access transaction and blockchain context data, such as caller information, payments, and timestamps, using the Space framework.","type":"text"}],"type":"paragraph"}],"name":"Retrieving Information from the Blockchain"},{"name":"Interact with Other Contracts","tutorials":["doc:\/\/Space\/tutorials\/Space\/SyncCalls"],"image":"InstallingToolsSection1Step1.png","content":[{"type":"paragraph","inlineContent":[{"text":"Learn how to enable smart contracts to call other contracts in a synchronous manner, and explore contract-to-contract interaction using Space’s proxy mechanisms.","type":"text"}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Space/tutorials/Space/SyncCalls":{"role":"project","url":"\/tutorials\/space\/synccalls","type":"topic","estimatedTime":"15min","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls","kind":"project","title":"Interact with Other Contracts","abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}]},"doc://Space/tutorials/Space/InstallingTools":{"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","abstract":[{"text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed.","type":"text"}],"kind":"project","url":"\/tutorials\/space\/installingtools","type":"topic","role":"project","estimatedTime":"10min","title":"Install the Necessary Tools"},"doc://Space/tutorials/Space/StoreValues":{"title":"Persist Values Between Executions","kind":"project","url":"\/tutorials\/space\/storevalues","role":"project","estimatedTime":"15min","identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"type":"topic"},"doc://Space/tutorials/Space/FamiliarizeWithTypes":{"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"kind":"project","url":"\/tutorials\/space\/familiarizewithtypes","type":"topic","role":"project","estimatedTime":"20min","title":"Exploring Space's Types"},"doc://Space/tutorials/Space/CodingYourFirstContract":{"role":"project","estimatedTime":"20min","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"type":"topic","url":"\/tutorials\/space\/codingyourfirstcontract","title":"Building Your First Smart Contract","kind":"project"},"InstallingToolsSection1Step1.png":{"type":"image","identifier":"InstallingToolsSection1Step1.png","variants":[{"traits":["1x","light"],"url":"\/images\/Space\/InstallingToolsSection1Step1.png"}],"alt":"An empty terminal window showing code examples."},"doc://Space/tutorials/Space":{"identifier":"doc:\/\/Space\/tutorials\/Space","kind":"overview","role":"overview","title":"Meet Space","url":"\/tutorials\/space","type":"topic","abstract":[{"type":"text","text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency."}]},"doc://Space/tutorials/Space/GetInfo":{"role":"project","url":"\/tutorials\/space\/getinfo","type":"topic","estimatedTime":"10min","identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo","kind":"project","title":"Retrieving Information from the Blockchain","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}]}}}