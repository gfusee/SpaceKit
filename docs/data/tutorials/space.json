{"kind":"overview","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SpaceKit\/tutorials\/Space"},"hierarchy":{"paths":[],"reference":"doc:\/\/SpaceKit\/tutorials\/Space"},"sections":[{"action":{"identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools","overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"type":"reference","isActive":true},"title":"Meet Space","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency."}]}],"kind":"hero"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Start your journey as a blockchain developer."}]}],"image":"InstallingToolsSection1Step1.png","chapters":[{"image":"InstallingToolsSection1Step1.png","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools"],"name":"Installing the Tools","content":[]},{"name":"Building Your First Smart Contract","content":[],"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract"],"image":"InstallingToolsSection1Step1.png"}],"kind":"volume","name":"Getting Started"},{"image":"InstallingToolsSection1Step1.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Gain a deeper understanding of Space’s architecture, from core types to advanced usage scenarios."}]}],"chapters":[{"image":"InstallingToolsSection1Step1.png","content":[{"inlineContent":[{"text":"Learn about the core types that power smart contracts in Space, including WebAssembly integration and Swift interoperability.","type":"text"}],"type":"paragraph"}],"name":"Exploring Space's Types","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes"]},{"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues"],"content":[{"type":"paragraph","inlineContent":[{"text":"Discover how to retain data across multiple contract executions using Space’s storage features.","type":"text"}]}],"name":"Persisting Data Across Executions","image":"InstallingToolsSection1Step1.png"},{"tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo"],"image":"InstallingToolsSection1Step1.png","name":"Retrieving Information from the Blockchain","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn how to access transaction and blockchain context data, such as caller information, payments, and timestamps, using the Space framework."}]}]},{"name":"Interacting with Other Contracts","content":[{"type":"paragraph","inlineContent":[{"text":"Learn how to enable smart contracts to call other contracts in a synchronous manner, and explore contract-to-contract interaction using Space’s proxy mechanisms.","type":"text"}]}],"image":"InstallingToolsSection1Step1.png","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls"]},{"content":[{"inlineContent":[{"text":"Asynchronous calls enable interaction with contracts across different shards. Let’s explore how to implement these cross-shard calls in SpaceKit.","type":"text"}],"type":"paragraph"}],"name":"Calling Contracts Across Shards","tutorials":["doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls"],"image":"InstallingToolsSection1Step1.png"}],"name":"Deep Dive into Space Concepts","kind":"volume"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"category":"Space","categoryPathComponent":"Space","role":"overview","title":"Meet Space","estimatedTime":"1hr 45min"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/space"]}],"references":{"doc://SpaceKit/tutorials/SpaceKit/SyncCalls":{"type":"topic","url":"\/tutorials\/spacekit\/synccalls","title":"Interact with Other Contracts","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/SyncCalls","role":"project","estimatedTime":"15min","kind":"project","abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}]},"doc://SpaceKit/tutorials/SpaceKit/InstallingTools":{"estimatedTime":"10min","role":"project","type":"topic","title":"Install the Necessary Tools","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"kind":"project","url":"\/tutorials\/spacekit\/installingtools","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/InstallingTools"},"doc://SpaceKit/tutorials/SpaceKit/AsyncCalls":{"abstract":[{"type":"text","text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources."}],"url":"\/tutorials\/spacekit\/asynccalls","title":"Interacting with Contracts Across Shards","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/AsyncCalls","role":"project","estimatedTime":"15min","kind":"project","type":"topic"},"doc://SpaceKit/tutorials/Space":{"role":"overview","type":"topic","title":"Meet Space","abstract":[{"type":"text","text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency."}],"kind":"overview","url":"\/tutorials\/space","identifier":"doc:\/\/SpaceKit\/tutorials\/Space"},"InstallingToolsSection1Step1.png":{"type":"image","identifier":"InstallingToolsSection1Step1.png","variants":[{"url":"\/images\/SpaceKit\/InstallingToolsSection1Step1.png","traits":["1x","light"]}],"alt":"A terminal window displaying code examples."},"doc://SpaceKit/tutorials/SpaceKit/CodingYourFirstContract":{"estimatedTime":"20min","role":"project","type":"topic","title":"Building Your First Smart Contract","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"kind":"project","url":"\/tutorials\/spacekit\/codingyourfirstcontract","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/CodingYourFirstContract"},"doc://SpaceKit/tutorials/SpaceKit/FamiliarizeWithTypes":{"abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"url":"\/tutorials\/spacekit\/familiarizewithtypes","title":"Exploring Space's Types","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/FamiliarizeWithTypes","role":"project","estimatedTime":"20min","kind":"project","type":"topic"},"doc://SpaceKit/tutorials/SpaceKit/GetInfo":{"estimatedTime":"10min","role":"project","type":"topic","title":"Retrieving Information from the Blockchain","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}],"kind":"project","url":"\/tutorials\/spacekit\/getinfo","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/GetInfo"},"doc://SpaceKit/tutorials/SpaceKit/StoreValues":{"abstract":[{"type":"text","text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory."}],"url":"\/tutorials\/spacekit\/storevalues","title":"Persist Values Between Executions","identifier":"doc:\/\/SpaceKit\/tutorials\/SpaceKit\/StoreValues","role":"project","estimatedTime":"15min","kind":"project","type":"topic"}}}