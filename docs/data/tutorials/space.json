{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"categoryPathComponent":"Space","role":"overview","category":"Space","title":"Meet Space","estimatedTime":"1hr 30min"},"identifier":{"url":"doc:\/\/Space\/tutorials\/Space","interfaceLanguage":"swift"},"sections":[{"kind":"hero","title":"Meet Space","content":[{"type":"paragraph","inlineContent":[{"text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency.","type":"text"}]}],"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","overridingTitle":"Get started","type":"reference"}},{"kind":"volume","content":[{"type":"paragraph","inlineContent":[{"text":"Start your journey as a blockchain developer.","type":"text"}]}],"chapters":[{"tutorials":["doc:\/\/Space\/tutorials\/Space\/InstallingTools"],"name":"Installing the Tools","image":"InstallingToolsSection1Step1.png","content":[]},{"content":[],"tutorials":["doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract"],"name":"Building Your First Smart Contract","image":"InstallingToolsSection1Step1.png"}],"name":"Getting Started","image":"InstallingToolsSection1Step1.png"},{"kind":"volume","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Gain a deeper understanding of Space’s architecture, from core types to advanced usage scenarios."}]}],"chapters":[{"image":"InstallingToolsSection1Step1.png","content":[{"inlineContent":[{"text":"Learn about the core types that power smart contracts in Space, including WebAssembly integration and Swift interoperability.","type":"text"}],"type":"paragraph"}],"tutorials":["doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes"],"name":"Exploring Space's Types"},{"content":[{"inlineContent":[{"text":"Discover how to retain data across multiple contract executions using Space’s storage features.","type":"text"}],"type":"paragraph"}],"name":"Persisting Data Across Executions","tutorials":["doc:\/\/Space\/tutorials\/Space\/StoreValues"],"image":"InstallingToolsSection1Step1.png"},{"content":[{"inlineContent":[{"text":"Learn how to access transaction and blockchain context data, such as caller information, payments, and timestamps, using the Space framework.","type":"text"}],"type":"paragraph"}],"image":"InstallingToolsSection1Step1.png","name":"Retrieving Information from the Blockchain","tutorials":["doc:\/\/Space\/tutorials\/Space\/GetInfo"]},{"name":"Interact with Other Contracts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn how to enable smart contracts to call other contracts in a synchronous manner, and explore contract-to-contract interaction using Space’s proxy mechanisms."}]}],"image":"InstallingToolsSection1Step1.png","tutorials":["doc:\/\/Space\/tutorials\/Space\/SyncCalls"]}],"name":"Deep Dive into Space Concepts","image":"InstallingToolsSection1Step1.png"}],"kind":"overview","variants":[{"paths":["\/tutorials\/space"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[],"reference":"doc:\/\/Space\/tutorials\/Space"},"references":{"doc://Space/tutorials/Space":{"url":"\/tutorials\/space","title":"Meet Space","role":"overview","abstract":[{"type":"text","text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency."}],"kind":"overview","identifier":"doc:\/\/Space\/tutorials\/Space","type":"topic"},"doc://Space/tutorials/Space/StoreValues":{"type":"topic","estimatedTime":"15min","url":"\/tutorials\/space\/storevalues","role":"project","kind":"project","title":"Persist Values Between Executions","abstract":[{"text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues"},"doc://Space/tutorials/Space/SyncCalls":{"estimatedTime":"15min","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls","role":"project","title":"Interact with Other Contracts","type":"topic","kind":"project","abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}],"url":"\/tutorials\/space\/synccalls"},"doc://Space/tutorials/Space/InstallingTools":{"abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"type":"topic","kind":"project","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","url":"\/tutorials\/space\/installingtools","title":"Install the Necessary Tools","role":"project","estimatedTime":"10min"},"doc://Space/tutorials/Space/FamiliarizeWithTypes":{"type":"topic","estimatedTime":"20min","url":"\/tutorials\/space\/familiarizewithtypes","role":"project","kind":"project","title":"Exploring Space's Types","abstract":[{"text":"Space provides types that allow you to leverage the full potential of the SpaceVM.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes"},"doc://Space/tutorials/Space/GetInfo":{"type":"topic","estimatedTime":"10min","url":"\/tutorials\/space\/getinfo","role":"project","kind":"project","title":"Retrieving Information from the Blockchain","abstract":[{"text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner.","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo"},"doc://Space/tutorials/Space/CodingYourFirstContract":{"estimatedTime":"20min","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","type":"topic","abstract":[{"text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user.","type":"text"}],"title":"Building Your First Smart Contract","kind":"project","url":"\/tutorials\/space\/codingyourfirstcontract","role":"project"},"InstallingToolsSection1Step1.png":{"variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step1.png","traits":["1x","light"]}],"type":"image","identifier":"InstallingToolsSection1Step1.png","alt":"An empty terminal window showing code examples."}}}