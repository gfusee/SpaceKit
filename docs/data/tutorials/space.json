{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Space\/tutorials\/Space"},"sections":[{"action":{"type":"reference","overridingTitle":"Get started","isActive":true,"overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools"},"content":[{"inlineContent":[{"type":"text","text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency."}],"type":"paragraph"}],"title":"Meet Space","kind":"hero"},{"name":"Getting Started","kind":"volume","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Start your journey as a blockchain developer."}]}],"chapters":[{"content":[],"name":"Installing the Tools","tutorials":["doc:\/\/Space\/tutorials\/Space\/InstallingTools"],"image":"InstallingToolsSection1Step1.png"},{"name":"Building Your First Smart Contract","content":[],"image":"InstallingToolsSection1Step1.png","tutorials":["doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract"]}],"image":"InstallingToolsSection1Step1.png"},{"image":"InstallingToolsSection1Step1.png","name":"Deep Dive into Space Concepts","chapters":[{"name":"Exploring Space's Types","image":"InstallingToolsSection1Step1.png","content":[{"type":"paragraph","inlineContent":[{"text":"Learn about the core types that power smart contracts in Space, including WebAssembly integration and Swift interoperability.","type":"text"}]}],"tutorials":["doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes"]},{"tutorials":["doc:\/\/Space\/tutorials\/Space\/StoreValues"],"name":"Persisting Data Across Executions","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Discover how to retain data across multiple contract executions using Space’s storage features."}]}],"image":"InstallingToolsSection1Step1.png"},{"image":"InstallingToolsSection1Step1.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn how to access transaction and blockchain context data, such as caller information, payments, and timestamps, using the Space framework."}]}],"tutorials":["doc:\/\/Space\/tutorials\/Space\/GetInfo"],"name":"Retrieving Information from the Blockchain"},{"name":"Interacting with Other Contracts","image":"InstallingToolsSection1Step1.png","tutorials":["doc:\/\/Space\/tutorials\/Space\/SyncCalls"],"content":[{"type":"paragraph","inlineContent":[{"text":"Learn how to enable smart contracts to call other contracts in a synchronous manner, and explore contract-to-contract interaction using Space’s proxy mechanisms.","type":"text"}]}]},{"tutorials":["doc:\/\/Space\/tutorials\/Space\/AsyncCalls"],"image":"InstallingToolsSection1Step1.png","name":"Calling Contracts Across Shards","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Asynchronous calls enable interaction with contracts across different shards. Let’s explore how to implement these cross-shard calls in Space."}]}]}],"content":[{"type":"paragraph","inlineContent":[{"text":"Gain a deeper understanding of Space’s architecture, from core types to advanced usage scenarios.","type":"text"}]}],"kind":"volume"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"overview","hierarchy":{"reference":"doc:\/\/Space\/tutorials\/Space","paths":[]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/space"]}],"metadata":{"categoryPathComponent":"Space","category":"Space","role":"overview","estimatedTime":"1hr 45min","title":"Meet Space"},"references":{"doc://Space/tutorials/Space/GetInfo":{"identifier":"doc:\/\/Space\/tutorials\/Space\/GetInfo","abstract":[{"type":"text","text":"Many smart contracts rely on contextual data to execute their operations effectively. This data can include input payments, the caller’s address, the current time, the balance of a specific account, or even the contract owner."}],"estimatedTime":"10min","url":"\/tutorials\/space\/getinfo","role":"project","type":"topic","kind":"project","title":"Retrieving Information from the Blockchain"},"doc://Space/tutorials/Space/StoreValues":{"title":"Persist Values Between Executions","role":"project","url":"\/tutorials\/space\/storevalues","kind":"project","type":"topic","abstract":[{"type":"text","text":"Each time a smart contract is invoked, it runs a single operation. The contract is temporarily loaded into the SpaceVM memory, the operation is executed, and then the contract is removed from memory."}],"identifier":"doc:\/\/Space\/tutorials\/Space\/StoreValues","estimatedTime":"15min"},"doc://Space/tutorials/Space":{"role":"overview","title":"Meet Space","abstract":[{"text":"Discover how Space simplifies blockchain development using Swift. Dive into the world of Web3 with ease and efficiency.","type":"text"}],"kind":"overview","url":"\/tutorials\/space","identifier":"doc:\/\/Space\/tutorials\/Space","type":"topic"},"doc://Space/tutorials/Space/CodingYourFirstContract":{"title":"Building Your First Smart Contract","identifier":"doc:\/\/Space\/tutorials\/Space\/CodingYourFirstContract","url":"\/tutorials\/space\/codingyourfirstcontract","type":"topic","abstract":[{"type":"text","text":"In this chapter, you’ll create a simple smart contract that manages a counter, which can be incremented or decremented by any user."}],"kind":"project","role":"project","estimatedTime":"20min"},"doc://Space/tutorials/Space/InstallingTools":{"title":"Install the Necessary Tools","identifier":"doc:\/\/Space\/tutorials\/Space\/InstallingTools","type":"topic","abstract":[{"type":"text","text":"Before writing your first smart contract with Space, ensure you have the necessary tools installed."}],"role":"project","kind":"project","estimatedTime":"10min","url":"\/tutorials\/space\/installingtools"},"InstallingToolsSection1Step1.png":{"type":"image","identifier":"InstallingToolsSection1Step1.png","variants":[{"url":"\/images\/Space\/InstallingToolsSection1Step1.png","traits":["1x","light"]}],"alt":"A terminal window displaying code examples."},"doc://Space/tutorials/Space/FamiliarizeWithTypes":{"title":"Exploring Space's Types","identifier":"doc:\/\/Space\/tutorials\/Space\/FamiliarizeWithTypes","type":"topic","abstract":[{"type":"text","text":"Space provides types that allow you to leverage the full potential of the SpaceVM."}],"role":"project","kind":"project","estimatedTime":"20min","url":"\/tutorials\/space\/familiarizewithtypes"},"doc://Space/tutorials/Space/AsyncCalls":{"title":"Interacting with Contracts Across Shards","identifier":"doc:\/\/Space\/tutorials\/Space\/AsyncCalls","type":"topic","abstract":[{"type":"text","text":"Blockchain platforms using SpaceVM enable seamless execution within a sharded environment. Sharding divides a blockchain’s global state and validation workload into smaller, manageable units known as shards. This method enhances scalability without compromising decentralization, allowing nodes to operate without significant computational resources."}],"role":"project","kind":"project","estimatedTime":"15min","url":"\/tutorials\/space\/asynccalls"},"doc://Space/tutorials/Space/SyncCalls":{"abstract":[{"type":"text","text":"Smart contracts can interact not only with users but also with other smart contracts. This enables more advanced protocols by leveraging existing ones. For example, you could integrate a decentralized exchange directly into your contract to perform token swaps. Decentralized applications often involve multiple contracts, each with a dedicated role, working together to achieve complex functionality—similar to microservices in backend systems."}],"url":"\/tutorials\/space\/synccalls","title":"Interact with Other Contracts","role":"project","identifier":"doc:\/\/Space\/tutorials\/Space\/SyncCalls","type":"topic","estimatedTime":"15min","kind":"project"}}}